{
	"info": {
		"_postman_id": "dc8ae402-ac3f-4e6f-9042-e4d41e3a8a58",
		"name": "API-RecentObject",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "pretest - Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "652489a9-2a87-4da5-8e8f-7189bd087754",
						"exec": [
							"if(pm.environment.get(\"server\") == \"123flo.com\"){",
							"    postman.setEnvironmentVariable(\"password\",\"qwe123\");",
							"    postman.setEnvironmentVariable(\"email\", \"api_test_yyy@123flo.com\");",
							"}else{",
							"    postman.setEnvironmentVariable(\"password\",\"123456\");",
							"    postman.setEnvironmentVariable(\"email\", \"flo_automationk5@flomail.net\");",
							"}",
							"// Use the CryptoJS",
							"var hash = CryptoJS.MD5( CryptoJS.MD5(pm.environment.get(\"email\")+\":LeftCoastLogic:\"+pm.environment.get(\"password\"))+pm.environment.get(\"appreg\")).toString();",
							"",
							"console.log(\"sig: \" + hash);",
							"postman.setEnvironmentVariable(\"sig\", hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4224ece7-fe81-4a3e-bcb5-73157011c1d0",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var keyapi = CryptoJS.MD5( CryptoJS.MD5(pm.environment.get(\"email\") + pm.environment.get(\"appreg\")) + json.tokenapi).toString();",
							"",
							"postman.setEnvironmentVariable(\"token\", json.tokenapi);",
							"postman.setEnvironmentVariable(\"keyapi\", keyapi);",
							"",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Test Version: '+pm.environment.get('version')+'\\nFailed - Pretest - Login',",
							"    endpoint: \"/api/users/token.json\",",
							"    method: \"post\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Test Version: '+pm.environment.get('version')+'\\nPassed - Pretest - Login',",
							"    endpoint: \"/api/users/token.json\",",
							"    method: \"post\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var body = json.description;",
							"    if(body==\"Flo\"){",
							"        msg.description=body;",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=body;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"{{email}}\",\n\t\"alias\": \"{{alias}}\",\n\t\"sig\": \"{{sig}}\"\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/users/token.json",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"users",
						"token.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Recent Object - required uid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ce244ccc-76ff-40a2-8cc3-b8a3e3657cfe",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Failed - Create Object - required uid',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"post\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Passed - Create Object - required uid',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"post\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var uid = json.data[0].recent_object.uid;",
							"        if(uid != pm.environment.get('uid')){",
							"            msg = msgFailed;",
							"            msg.error = \"uid is not match. uid response is:\"+uid;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ae23e0d2-00a2-4168-bac4-a0fca2a630d1",
						"exec": [
							"postman.setEnvironmentVariable(\"uid\",\"2f29d8d8-f7f5-456b-ac92-507fd829d9f444\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"recent_objects\" : [\n        {\n            \"uid\": \"{{uid}}\"\n        }\n\t]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/v1/recent_objects?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"v1",
						"recent_objects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Recent Object  - Null uid",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4e9460bb-960f-4550-b2be-b0ebf2ce9f76",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b3973938-c2a2-4aa3-8694-7cc7284267de",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Failed - Create Object - null uid',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"post\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Passed - Create Object - null uid',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"post\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count === 0){",
							"        msg.description = \"Data response null as expected\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Create Object - null uid. Data response is not null. Data must be null or show error\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"recent_objects\" : [\n        {\n        \t\"dav_type\": \"VTODO\",\n            \"state\": 1\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/v1/recent_objects?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"v1",
						"recent_objects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Recent Object - Full",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fb6ea1cc-f879-4fd0-8dbf-478a66aee93b",
						"exec": [
							"postman.setEnvironmentVariable(\"uid\",\"2f29d8d8-f7f5-456b-ac92-507fd829d9k99\");",
							"postman.setEnvironmentVariable(\"dav_type\",\"VTODO\");",
							"postman.setEnvironmentVariable(\"state\",1);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "65e0abde-d5cf-4273-b859-cc0584af5f1d",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Failed - Create Object - Full',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"post\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Passed - Create Object - Full',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"post\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var uid = json.data[0].recent_object.uid;",
							"        var dav_type = json.data[0].recent_object.dav_type;",
							"        var state = json.data[0].recent_object.state;",
							"        if(uid != pm.environment.get('uid')",
							"        ||(dav_type != pm.environment.get('dav_type'))",
							"        ||(state != pm.environment.get('state'))",
							"        ){",
							"            msg = msgFailed;",
							"            msg.error = \"uid,dav_type,state is not match. uid response is:\"+uid+",
							"            \" .dav_type response is:\"+dav_type+",
							"            \" .state response is:\"+state;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"recent_objects\" : [\n        {\n            \"state\": \"{{state}}\",\n            \"uid\": \"{{uid}}\",\n            \"dav_type\": \"{{dav_type}}\"\n        }\n    ]\n}\n"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/v1/recent_objects?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"v1",
						"recent_objects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Recent Object - Big Data 50 Items",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6f2a5219-3fd5-46f0-bfc2-45d1726c5fa3",
						"exec": [
							"for(var i = 0 ; i<50; i++){",
							"    pm.environment.set(\"uid\"+i,\"2f29d8d8-f7f5-456b-ac92-507fd829ef\"+i)",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c5b86558-1664-47b7-b6b3-6fc835684d06",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Failed - Create Object - Big Data 50 Items',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"post\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Passed - Create Object - Big Data 50 Items',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"post\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count == 50){",
							"        for(var i = 0; i<50; i++){",
							"            var uid = json.data[i].recent_object.uid;",
							"            var dav_type = json.data[i].recent_object.dav_type;",
							"            var state = json.data[i].recent_object.state;",
							"            if(uid != pm.environment.get(\"uid\"+i)",
							"            ||(dav_type != \"VTODO\")",
							"            ||(state != 1)",
							"            ){",
							"                msg = msgFailed;",
							"                msg.error = \"uid,dav_type,state is not match. uid response is:\"+uid+",
							"                \" .dav_type response is:\"+dav_type+",
							"                \" .state response is:\"+state;",
							"                break;",
							"            }",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"recent_objects\" : [\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid0}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid1}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid2}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid3}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid4}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid5}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid6}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid7}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid8}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid9}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid10}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid11}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid12}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid13}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid14}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid15}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid16}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid17}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid18}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid19}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid20}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid21}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid22}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid23}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid24}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid25}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid26}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid27}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid28}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid29}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid30}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid31}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid32}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid33}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid34}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid35}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid36}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid37}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid38}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid39}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid40}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid41}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid42}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid43}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid44}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid45}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid46}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid47}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid48}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid49}}\",\n            \"state\": 1\n        }\n        \n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/v1/recent_objects?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"v1",
						"recent_objects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Recent Object - Big Data 51 Items",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6f2a5219-3fd5-46f0-bfc2-45d1726c5fa3",
						"exec": [
							"for(var i = 0 ; i<51; i++){",
							"    pm.environment.set(\"uid\"+i,\"2f29d8d8-f7f5-456b-ac92-507fd829fd\"+i)",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c5b86558-1664-47b7-b6b3-6fc835684d06",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Failed - Create Object - Big Data 51 Items',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"post\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Passed - Create Object - Big Data 51 Items',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"post\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count == 51){",
							"        for(var i = 0; i<50; i++){",
							"            var uid = json.data[i].recent_object.uid;",
							"            var dav_type = json.data[i].recent_object.dav_type;",
							"            var state = json.data[i].recent_object.state;",
							"            if(uid != pm.environment.get(\"uid\"+i)",
							"            ||(dav_type != \"VTODO\")",
							"            ||(state != 1)",
							"            ){",
							"                msg = msgFailed;",
							"                msg.error = \"uid,dav_type,state is not match. uid response is:\"+uid+",
							"                \" .dav_type response is:\"+dav_type+",
							"                \" .state response is:\"+state;",
							"                break;",
							"            }",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"recent_objects\" : [\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid0}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid1}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid2}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid3}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid4}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid5}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid6}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid7}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid8}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid9}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid10}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid11}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid12}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid13}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid14}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid15}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid16}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid17}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid18}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid19}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid20}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid21}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid22}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid23}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid24}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid25}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid26}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid27}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid28}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid29}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid30}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid31}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid32}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid33}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid34}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid35}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid36}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid37}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid38}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid39}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid40}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid41}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid42}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid43}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid44}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid45}}\",\n            \"state\": 1\n        },\n       {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid46}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid47}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid48}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid49}}\",\n            \"state\": 1\n        },\n        {\n            \"dav_type\": \"VTODO\",\n            \"uid\": \"{{uid50}}\",\n            \"state\": 1\n        }\n        \n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/v1/recent_objects?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"v1",
						"recent_objects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Recent Object",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e1546900-e32e-4d70-99b0-fa5ff1bf8b96",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Failed - Get Recent Object - Full',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Passed - Get Recent Object - Full',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"       pm.environment.set(\"id\",json.data[5].recent_object.id);",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Data response is null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/v1/recent_objects?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"v1",
						"recent_objects"
					],
					"query": [
						{
							"key": "ids",
							"value": "1319",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "1318",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "10",
							"disabled": true
						},
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Recent Object - ids",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "46933562-2fc1-478b-90cf-2d9ec9f3288b",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Failed - Get Recent Object - ids',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Passed - Get Recent Object - ids',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count == 1){",
							"       var id = json.data[0].recent_object.id;",
							"       if(id != pm.environment.get(\"id\")){",
							"            msg = msgFailed;",
							"            msg.error = \"The id item response is not match. The id item is: \"+id;",
							"       }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/v1/recent_objects?keyapi={{keyapi}}&ids={{id}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"v1",
						"recent_objects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "ids",
							"value": "{{id}}"
						},
						{
							"key": "minID",
							"value": "1174",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Recent Object - minID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a7a92e53-aca3-4ef0-86d9-8141c03fb717",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Failed - Get Recent Object - minID',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Passed - Get Recent Object - minID',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        for(var i =0 ; i<count; i++){",
							"            var id = json.data[0].recent_object.id;",
							"            if(id <= pm.environment.get(\"id\")){",
							"                msg = msgFailed;",
							"                msg.error = \"parameter minID dont work\";",
							"                break;",
							"            }",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"The number item response is not match. Data response is null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/v1/recent_objects?keyapi={{keyapi}}&minID={{id}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"v1",
						"recent_objects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "ids",
							"value": "1369",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "{{id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Recent Object - pItem",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e8bcd46b-9f59-4bf1-94fc-f3deaf9b83a2",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "eae0a7fa-5ac5-4b2e-9ed7-9749649bf455",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Failed - Get Recent Object - pItem',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Passed - Get Recent Object - pItem',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 5){",
							"        msg = msgFailed;",
							"        msg.error = \"The number item response is not match. count is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/v1/recent_objects?keyapi={{keyapi}}&pItem=5",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"v1",
						"recent_objects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "ids",
							"value": "1369",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "1369",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Recent Object - minID, ids",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e0293860-497e-4893-8634-1db49ad0da0c",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "303a3626-6b7d-4be0-9600-9851d32883ec",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Failed - Get Recent Object - ids={{id}}, minID={{id}}',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Passed - Get Recent Object - ids={{id}}, minID={{id}}',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        msg = msgFailed;",
							"        msg.error = \"The number item response is not null. count is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/v1/recent_objects?keyapi={{keyapi}}&ids={{id}}&minID={{id}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"v1",
						"recent_objects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "ids",
							"value": "{{id}}"
						},
						{
							"key": "minID",
							"value": "{{id}}"
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Recent Object - minID, ids 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "284a52c4-b792-404f-9369-607ba9a5919d",
						"exec": [
							"var id1 = pm.environment.get(\"id\");",
							"    id1 = id1 -1;",
							"    pm.environment.set(\"id-1\",id1);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9a5444ec-8213-4a5e-a177-4e81444120ce",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Failed - Get Recent Object - ids={{id}}, minID={{id-1}}',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Passed - Get Recent Object - ids={{id}}, minID={{id-1}}',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count == 1){",
							"       var id = json.data[0].recent_object.id;",
							"       if(id != pm.environment.get(\"id\")){",
							"            msg = msgFailed;",
							"            msg.error = \"The id item response is not match. The id item is: \"+id;",
							"       }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/v1/recent_objects?keyapi={{keyapi}}&ids={{id}}&minID={{id-1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"v1",
						"recent_objects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "ids",
							"value": "{{id}}"
						},
						{
							"key": "minID",
							"value": "{{id-1}}"
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Recent Object - minID, pItem",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4db244de-b009-41f1-b7b9-80c1d5ec23b9",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2f16a6bd-0805-444b-b985-d650a1a895b9",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Failed - Get Recent Object - minID={{id}}, pItem=3',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Passed - Get Recent Object - minID={{id}}, pItem=3',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 3){",
							"        msg = msgFailed;",
							"        msg.error = \"The number item response is not match. count is: \"+count;",
							"    }else{",
							"         for(var i =0 ; i<count; i++){",
							"            var id = json.data[0].recent_object.id;",
							"            if(id <= pm.environment.get(\"id\")){",
							"                msg = msgFailed;",
							"                msg.error = \"parameter minID dont work\";",
							"                break;",
							"            }",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/v1/recent_objects?keyapi={{keyapi}}&minID={{id}}&pItem=3",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"v1",
						"recent_objects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "ids",
							"value": "1369",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "{{id}}"
						},
						{
							"key": "pItem",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Recent Object - minID, pItem, ids",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5e36a255-6bb3-4901-b717-3159b536c6d8",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Failed - Get Recent Object - ids={{id}}, minID={{id-1}}, pItem=5',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"shit shit shit shit\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-RecentObject',",
							"    title: 'Passed - Get Recent Object - ids={{id}}, minID={{id-1}}, pItem=5',",
							"    endpoint: \"/v1/recent_objects\",",
							"    method: \"get\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count == 1){",
							"       var id = json.data[0].recent_object.id;",
							"       if(id != pm.environment.get(\"id\")){",
							"            msg = msgFailed;",
							"            msg.error = \"The id item response is not match. The id item is: \"+id;",
							"       }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/v1/recent_objects?keyapi={{keyapi}}&ids={{id}}&minID={{id-1}}&pItem=5",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"v1",
						"recent_objects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "ids",
							"value": "{{id}}"
						},
						{
							"key": "minID",
							"value": "{{id-1}}"
						},
						{
							"key": "pItem",
							"value": "5"
						}
					]
				}
			},
			"response": []
		}
	]
}