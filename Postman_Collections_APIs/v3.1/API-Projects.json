{
	"info": {
		"_postman_id": "ed2f895d-cd6a-43a1-9cac-76ab4ff67d76",
		"name": "v3.1 API-Projects",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Pre-Condition - Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "710fc72f-9c01-458d-91e2-999228c54ca0",
						"exec": [
							"// Use the CryptoJS",
							"var hash = CryptoJS.MD5( CryptoJS.MD5(pm.environment.get(\"email_U1\")+\":LeftCoastLogic:\"+pm.environment.get(\"password_U1\"))+pm.environment.get(\"appreg\")).toString();",
							"",
							"console.log(\"sig: \" + hash);",
							"postman.setEnvironmentVariable(\"sig_U1\", hash);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b9b65e0a-3805-49b2-a0e8-3b2d205156e2",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var keyapi = CryptoJS.MD5( CryptoJS.MD5(pm.environment.get(\"email_U1\") + pm.environment.get(\"appreg\")) + json.tokenapi).toString();",
							"",
							"postman.setEnvironmentVariable(\"keyapi_U1\", keyapi);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"pm.test(\"Tokenapi is returned\", function () {pm.expect(pm.response.text()).to.include(\"tokenapi\");});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"{{email_U1}}\",\n\t\"alias\": \"{{alias}}\",\n\t\"sig\": \"{{sig_U1}}\"\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/users/token",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"users",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Projects - Full optional params",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - Full optional params',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - Full optional params',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        var proj_name = \"Full\"+ pm.environment.get(\"v4uuid\");",
							"        var calendar_id = pm.environment.get(\"v4uuid\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name)&&(json.data[0].project.calendar_id === calendar_id)&&(json.data[0].project.kanban_mode === 1)){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\";",
							"        }else{",
							"            msg.description = \"create projects fail - Bug https://floware.atlassian.net/browse/FB-100\";",
							"        }",
							"        pm.environment.set(\"projectid_parents\", json.data[0].project.id);",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "2d5dfe48-cae3-4845-acf2-392cbf536040",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\": [\n        {\n            \"proj_name\": \"Full{{v4uuid}}\",\n            \"proj_color\": \"#d06b64\",\n            \"created_date\": 1540888825.375,\n            \"updated_date\": 1543302249.725,\n            \"calendar_id\": \"{{v4uuid}}\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": -4,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Projects - Not pass param proj_type & calendar_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - Not pass param proj_type & calendar_id',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - Not pass param proj_type & calendar_id',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        var proj_name = \"ABC\"+ pm.environment.get(\"v4uuid\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name)&&(json.data[0].project.calendar_id !== \"\")){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\";",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "84968767-9168-406d-8276-394814e1f3a5",
						"exec": [
							"postman.setEnvironmentVariable(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, ",
							"function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\": [\n        {\n            \"proj_name\": \"ABC{{v4uuid}}\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Projects - Special chars in pro_name",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - Special chars in pro_name',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - Special chars in pro_name',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        var proj_name = \"!@#$%^&*()<>\"+ pm.environment.get(\"v4uuid\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name)&&(json.data[0].project.calendar_id !== \"\")){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\"",
							"",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8a9d86c3-e2f8-4543-89c8-2f267a2c3a14",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\": [\n        {\n            \"proj_name\": \"!@#$%^&*()<>{{v4uuid}}\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Projects - pass proj_type",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6fb96c34-1469-4b67-a5cc-79f7cf1c1b5a",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - pass proj_type',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - pass proj_type',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        var proj_name = \"ProjectType\"+ pm.environment.get(\"v4uuid\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name) && (json.data[0].project.calendar_id !== \"\") && (json.data[0].project.proj_type === 0)){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\"",
							"            ",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1c9789c5-6330-47ca-9efe-11401b586b58",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\": [\n        {\n            \"proj_name\": \"ProjectType{{v4uuid}}\",\n            \"proj_type\": 0\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Projects - default (\"proj_type\": -1, -5)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - default (\"proj_type\": -1, -5)',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - default (\"proj_type\": -1, -5)',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        var proj_name = \"Default\"+ pm.environment.get(\"v4uuid\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name) && (json.data[0].project.calendar_id !== \"\") && (json.data[0].project.proj_type === -1)){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\";",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "e707d102-4e56-4138-a25e-280f376f2479",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\":[\n        {\n            \"proj_name\": \"Default{{v4uuid}}\",\n            \"proj_type\": -1\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Projects - with proj_color",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - with proj_color',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - with proj_color',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        var proj_name = \"Colour\"+ pm.environment.get(\"v4uuid\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name) && (json.data[0].project.calendar_id !== \"\") && (json.data[0].project.proj_color === \"#BEBC18\")){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\";",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6837c3e9-fa86-4154-8e31-b69a3af1bbbd",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\":[\n        {\n            \"proj_name\": \"Colour{{v4uuid}}\",\n            \"proj_color\": \"#BEBC18\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create projects - with calendar_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - with calendar_id',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - with calendar_id',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        var proj_name = \"Calendar\"+ pm.environment.get(\"v4uuid\");",
							"        var calendar_id = pm.environment.get(\"v4uuid\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name)&&(json.data[0].project.calendar_id === calendar_id)){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\";",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6837c3e9-fa86-4154-8e31-b69a3af1bbbd",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\":[\n        {\n            \"proj_name\": \"Calendar{{v4uuid}}\",\n            \"calendar_id\": \"{{v4uuid}}\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create projects - with parent_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - with parent_id',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - with parent_id',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var proj_name = \"Parent\"+ pm.environment.get(\"v4uuid\");",
							"        var parent_id = pm.environment.get(\"projectid_parents\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name)&&(json.data[0].project.calendar_id !== \"\")&&(json.data[0].project.parent_id === parent_id)){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\"",
							"",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "418f54cf-43e9-48df-a11b-52b3cfd6752c",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\":[\n        {\n            \"proj_name\": \"Parent{{v4uuid}}\",\n            \"parent_id\": \"{{projectid_parents}}\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create projects - with due_date",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - with due_date',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - with due_date',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var proj_name = \"DueDate\"+ pm.environment.get(\"v4uuid\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name)&&(json.data[0].project.calendar_id !== \"\")&&(json.data[0].project.due_date === 1548838832)){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\"",
							"            ",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f42c6fd1-7c43-4489-b2b8-042bfdd4bc0c",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\":[\n        {\n            \"proj_name\": \"DueDate{{v4uuid}}\",\n            \"due_date\": 1548838832\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create projects - with flag",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - with flag',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - with flag',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var proj_name = \"Flag\"+ pm.environment.get(\"v4uuid\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name)&&(json.data[0].project.calendar_id !== \"\")&&(json.data[0].project.flag === 1)){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\"",
							"",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "01e6fdaa-fa65-428f-8414-f1bd7ce38b0d",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\":[\n        {\n            \"proj_name\": \"Flag{{v4uuid}}\",\n            \"flag\": 1\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create projects - with is_hide",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - with is_hide',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - with is_hide',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var proj_name = \"IsHide\"+ pm.environment.get(\"v4uuid\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name)&&(json.data[0].project.calendar_id !== \"\")&&(json.data[0].project.is_hide === 1)){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\"",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3996d230-c94d-4eed-8f81-9d6595cf5ed5",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\":[\n        {\n            \"proj_name\": \"IsHide{{v4uuid}}\",\n            \"is_hide\": 1\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create projects - with alerts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - with alerts',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - with alerts',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var proj_name = \"Alerts\"+ pm.environment.get(\"v4uuid\");",
							"        var flag = 0",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name)&&(json.data[0].project.calendar_id !== \"\")){",
							"            flag = 1;",
							"        }",
							"        if(json.data[0].project.alerts){",
							"            if((json.data[0].project.alerts[0].sound === \"ABC\") && (json.data[0].project.alerts[1].sound === \"CDE\")){",
							"                flag = 2;",
							"            }",
							"        }",
							"        if(flag === 2){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\";",
							"        }else if(flag === 1){",
							"            msg.description = \"create projects success but alerts is wrong\";",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "41ee20a8-af13-44b3-958e-c1795ad8ff31",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\":[\n        {\n            \"proj_name\": \"Alerts{{v4uuid}}\",\n            \"alerts\": \"[{\\\"sound\\\":\\\"ABC\\\",\\\"time\\\":123}, {\\\"sound\\\":\\\"CDE\\\",\\\"time\\\":123}]\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create projects - with is_expand",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - with is_expand',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - with is_expand',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var proj_name = \"IsExpand\"+ pm.environment.get(\"v4uuid\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name)&&(json.data[0].project.calendar_id !== \"\")&&(json.data[0].project.is_expand === 1)){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\"",
							"",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "32ac1e5e-04f3-453b-8651-298bd16307fe",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\":[\n        {\n            \"proj_name\": \"IsExpand{{v4uuid}}\",\n            \"is_expand\": 1\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create projects - with view_mode",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - with view_mode',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - with view_mode',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var proj_name = \"ViewMode\"+ pm.environment.get(\"v4uuid\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name)&&(json.data[0].project.calendar_id !== \"\")&&(json.data[0].project.view_mode === 1)){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\";",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "73a46c08-de44-4e2c-bdd5-1b78231cd3fe",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\":[\n        {\n            \"proj_name\": \"ViewMode{{v4uuid}}\",\n            \"view_mode\": 1\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create projects - with view_sort",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - with view_sort',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - with view_sort',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var proj_name = \"ViewSort\"+ pm.environment.get(\"v4uuid\");",
							"        // Check data response",
							"        if((json.data[0].project.proj_name === proj_name)&&(json.data[0].project.calendar_id !== \"\")&&(json.data[0].project.view_sort === 1)){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success\";",
							"        }",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "61486434-c25f-4339-9844-3480ca26075b",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\":[\n        {\n            \"proj_name\": \"ViewSort{{v4uuid}}\",\n            \"view_sort\": 1\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Projects - with ref param",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - with ref param',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - with ref param',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var proj_name = \"Ref\"+ pm.environment.get(\"v4uuid\");",
							"        // check value of ref",
							"        if((json.data[0].project.ref === 123456)&&(json.data[0].project.proj_name === proj_name)&&(json.data[0].project.calendar_id === pm.environment.get(\"v4uuid\"))){",
							"            msg = msgPassed;",
							"            msg.description = \"create projects success & ref is correct\";",
							"        }else{",
							"            msg.description = \"ref is not correct\";",
							"        }",
							"",
							"    }",
							"    // fail - not project data response",
							"    else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "974401fa-31a9-4e21-b557-344dea2d8ab4",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\": [\n        {\n            \"proj_name\": \"Ref{{v4uuid}}\",\n            \"proj_color\": \"#d06b64\",\n            \"created_date\": 1540888825.375,\n            \"updated_date\": 1543302249.725,\n            \"calendar_id\": \"{{v4uuid}}\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": -4,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1,\n            \"ref\": 123456\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create projects - with duplicated name",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - No error with duplicated name',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - show error with duplicated name',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        // API error ",
							"        msg = msgFailed;",
							"        msg.description = \"Error - create projects success\"",
							"",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgPassed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\":[\n        {\n            \"proj_name\": \"General\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create projects - with not exist parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - No error with not exist parent',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - show error with not exist parent',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        // API error ",
							"        msg = msgFailed;",
							"        msg.description = \"Error - create projects success\"",
							"",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgPassed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f77fe831-66c7-40f6-8de1-b291f3834e69",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\":[\n        {\n            \"proj_name\": \"Parent{{v4uuid}}\",\n            \"parent_id\": 12345\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Project - Full optional params",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5dbed516-eba8-477a-a340-cbb2e6472e2e",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Update Projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Update Projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        var update1 = json.data[0].project.proj_name;",
							"        var update2 = json.data[0].project.proj_color;",
							"        var update3 = json.data[0].project.calendar_id;",
							"        var update4 = json.data[0].project.parent_id;",
							"        var update5 = json.data[0].project.due_date;",
							"        var update6 = json.data[0].project.flag;",
							"        var update7 = json.data[0].project.info_card_order;",
							"        var update8 = json.data[0].project.current_mode;",
							"        var update9 = json.data[0].project.is_hide;",
							"        var update10 = json.data[0].project.alerts;",
							"        var update11 = json.data[0].project.state;",
							"        var update12 = json.data[0].project.is_expand;",
							"        var update13 = json.data[0].project.order_kanban;",
							"        var update14 = json.data[0].project.view_mode;",
							"        var update15 = json.data[0].project.view_sort;",
							"        var update16 = json.data[0].project.kanban_mode;",
							"        ",
							"        // Check data response",
							"        if((update1 === \"Success\" + pm.environment.get(\"v4uuid\"))&&(update2 === \"#d06b64\")&&(update3 === pm.environment.get(\"v4uuid\"))&&(update4 === 0)&&(update5 === 123456789)&&(update6 === 1)&&(update7 === 1)&&(update8 === 1)&&(update9 === 1)&&(update10 === \"abcxyz\")&&(update11 === 1)&&(update12 === 1)&&(update13 === \"12\")&&(update14 === 1)&&(update15 === 1)&&(update16 === 1)){",
							"            msg = msgPassed;",
							"            msg.description = \"update projects success\";",
							"        }else{",
							"            msg.description = \"update projects fail - Bug https://floware.atlassian.net/browse/FB-100\";",
							"        }",
							"        pm.environment.set(\"modifiedTime\", json.data[0].project.updated_date);",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "25b2f306-5b40-454f-9fc0-0e51f6932a84",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));",
							"",
							"// get variable",
							"var server = pm.environment.get(\"server\");",
							"var port = pm.environment.get(\"port\");",
							"var version = pm.environment.get(\"version\");",
							"var keyapi = pm.environment.get(\"keyapi_U1\");",
							"",
							"var projectname = \"Update_Project\" + pm.environment.get(\"v4uuid\");",
							"",
							"// create pre-request",
							"var PostRequest = {",
							"  url: 'https://'+server+\":\"+port+\"/\"+version+\"/projects?keyapi=\"+keyapi,",
							"  method: 'POST',",
							"  header: {",
							"        'content-type': 'application/json'",
							"    },",
							"  body: {",
							"    mode: 'raw',",
							"    raw: JSON.stringify({\"projects\": [{\"proj_name\": projectname}]})",
							"  }",
							"};",
							"// send request and get project_id",
							"pm.sendRequest(PostRequest, function (error, response){",
							"if(error){",
							"    console.log(\"Error: \"+error);",
							"}else{",
							"    getResponse = response.json();",
							"    pm.environment.set(\"projectid_success\", getResponse.data[0].project.id);",
							"    }",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\": [\n\t\t{\n\t        \"id\": {{projectid_success}},\n            \"proj_name\": \"Success{{v4uuid}}\",\n            \"proj_color\": \"#d06b64\",\n            \"calendar_id\": \"{{v4uuid}}\",\n            \"parent_id\": 0,\n            \"due_date\": 123456789,\n            \"flag\": 1,\n            \"info_card_order\": 1,\n            \"current_mode\": 1,\n            \"is_hide\": 1,\n            \"alerts\": \"abcxyz\",\n            \"state\": 1,\n            \"is_expand\": 1,\n            \"order_kanban\": \"12\",\n            \"view_mode\": 1,\n            \"view_sort\": 1,\n            \"kanban_mode\": 1\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects/?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects",
						""
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Projects - Precondition for update",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var json = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"projectid_updatefail\", json.data[0].project.id);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1ae91e69-c7e9-4ebc-af25-c84dd847733d",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\": [\n        {\n            \"proj_name\": \"updatefail{{v4uuid}}\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Project - Duplicated name",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5dbed516-eba8-477a-a340-cbb2e6472e2e",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Update Projects - No error with duplicated name',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Update Projects - show error with duplicated name',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        // API error ",
							"        msg = msgFailed;",
							"        msg.description = \"Error - update projects success\"",
							"    }else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgPassed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "37bab20e-aea0-40e1-9176-4d7b0a7020ff",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\": [\n\t\t{\n\t        \"id\": {{projectid_updatefail}},\n\t        \"proj_name\": \"General\",\n\t        \"parent_id\": 0\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects/?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects",
						""
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b8d8900-c2ec-4358-8a6d-d06800d205e1",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - List Projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - List Projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        // Check data response",
							"        if(\"project\" in json.data[0]){",
							"            msg = msgPassed;",
							"            msg.description = \"get list projects success\"",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\"",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						},
						{
							"key": "fields",
							"value": "id,proj_name,calendar_id",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "34791,34792",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "1058130",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "modifiedLT",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "1058130",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Projects - with ids",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b8d8900-c2ec-4358-8a6d-d06800d205e1",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - List Projects - with ids',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - List Projects - with ids',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var project_id = pm.environment.get(\"projectid_success\")",
							"        // Check data response",
							"        if((\"project\" in json.data[0])&&(json.data[0].project.id == project_id)){",
							"            msg = msgPassed;",
							"            msg.description = \"get list projects success\"",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\"",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}&ids={{projectid_success}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						},
						{
							"key": "ids",
							"value": "{{projectid_success}}"
						},
						{
							"key": "fields",
							"value": "id,proj_name,calendar_id",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "1058130",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "modifiedLT",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "1058130",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Projects - with fields",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b8d8900-c2ec-4358-8a6d-d06800d205e1",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - List Projects - with fields',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - List Projects - with fields',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        // Check data response",
							"        if((\"id\" in json.data[0].project)&&(\"proj_name\" in json.data[0].project)&&(\"calendar_id\" in json.data[0].project)){",
							"            msg = msgPassed;",
							"            msg.description = \"get list projects success\"",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\"",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}&fields=id,proj_name,calendar_id",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						},
						{
							"key": "fields",
							"value": "id,proj_name,calendar_id"
						},
						{
							"key": "ids",
							"value": "34791,34792",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "1058130",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "modifiedLT",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "1058130",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Projects - with minID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b8d8900-c2ec-4358-8a6d-d06800d205e1",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - List Projects - with minID',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - List Projects - with minID',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"       ",
							"        // Check data response",
							"        var minID = pm.environment.get(\"minID\");",
							"        var flag = 1;",
							"        for(var i = 0; i< count; i++){",
							"            if(minID >= json.data[0].project.id)",
							"                flag = 0;",
							"        }",
							"        //console.log(flag);",
							"        if(flag === 1){",
							"            msg = msgPassed;",
							"            msg.description = \"get list projects success\"",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\"",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c1800f26-b325-4f1a-947f-5c8495747782",
						"exec": [
							"var tempId = pm.environment.get(\"projectid_success\");",
							"",
							"postman.setEnvironmentVariable(\"minID\", Number(tempId) - 1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}&minID={{minID}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						},
						{
							"key": "minID",
							"value": "{{minID}}"
						},
						{
							"key": "fields",
							"value": "id,proj_name,calendar_id",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "34791,34792",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "modifiedLT",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "1058130",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Projects - with pItem",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b8d8900-c2ec-4358-8a6d-d06800d205e1",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - List Projects - with pItem',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - List Projects - with pItem',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count === 2){",
							"        msg = msgPassed;",
							"        msg.description = \"get list projects success\"",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\"",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c1800f26-b325-4f1a-947f-5c8495747782",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}&pItem=2",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						},
						{
							"key": "pItem",
							"value": "2"
						},
						{
							"key": "fields",
							"value": "id,proj_name,calendar_id",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "34791,34792",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "36713",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "modifiedLT",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "1058130",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Projects - with has_del",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b8d8900-c2ec-4358-8a6d-d06800d205e1",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - List Projects - with has_del',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - List Projects - with has_del',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check response data",
							"    var count = json.data.length;",
							"    if(\"data_del\" in json){",
							"        msg = msgPassed;",
							"        msg.description = \"get list projects success\"",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\"",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c1800f26-b325-4f1a-947f-5c8495747782",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}&has_del=1",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "fields",
							"value": "id,proj_name,calendar_id",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "34791,34792",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "36713",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "modifiedLT",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "1058130",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Projects - with modifiedGTE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b8d8900-c2ec-4358-8a6d-d06800d205e1",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - List Projects - with modifiedGTE',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - List Projects - with modifiedGTE',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        var dataResponse = pm.response.text();",
							"        // Check data response",
							"        if(dataResponse.includes(pm.environment.get(\"projectid_success\"))){",
							"            msg = msgPassed;",
							"            msg.description = \"get list projects success\"",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\"",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c1800f26-b325-4f1a-947f-5c8495747782",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}&modifiedGTE={{modifiedTime}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						},
						{
							"key": "modifiedGTE",
							"value": "{{modifiedTime}}"
						},
						{
							"key": "fields",
							"value": "id,proj_name,calendar_id",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "34791,34792",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "36713",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "modifiedLT",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "1058130",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Projects - with modifiedLT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b8d8900-c2ec-4358-8a6d-d06800d205e1",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - List Projects - with modifiedLT',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - List Projects - with modifiedLT',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        var dataResponse = pm.response.text();",
							"        // Check data response",
							"        if(dataResponse.includes(pm.environment.get(\"projectid_success\"))){",
							"            msg = msgPassed;",
							"            msg.description = \"get list projects success\"",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\"",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c1800f26-b325-4f1a-947f-5c8495747782",
						"exec": [
							"var tempTime = pm.environment.get(\"modifiedTime\");",
							"",
							"postman.setEnvironmentVariable(\"modifiedLT\", Number(tempTime) + 1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}&modifiedLT={{modifiedLT}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						},
						{
							"key": "modifiedLT",
							"value": "{{modifiedLT}}"
						},
						{
							"key": "fields",
							"value": "id,proj_name,calendar_id",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "34791,34792",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "36713",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "{{modifiedTime}}",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "1058130",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Projects - Precondition for get All paging",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var json = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"projectid_get\", json.data[0].project.id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "90426667-4190-4131-8258-c4ac3b979d26",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\": [\n        {\n            \"proj_name\": \"projectid_get{{v4uuid}}\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Detele Projects - 1 project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7c8e5f83-07b8-4fbb-8d19-137934360a1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Delete Projects - 1 project',",
							"    endpoint: pm.environment.get(\"version\") + \"/project\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Delete Projects - 1 project',",
							"    endpoint:pm.environment.get(\"version\") + \"/project\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"",
							"var msg = msgFailed;",
							"",
							"if(statusResponse == 200){",
							"    msg.status = 200;",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var projectid_get = pm.environment.get(\"projectid_get\")",
							"        // Check data response",
							"        if(json.data[0].id == projectid_get){",
							"            msg = msgPassed;",
							"            msg.description = \"delete project success\"",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\"",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "14d6e68e-faba-40da-b159-eef947e01312",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\": [\n        {\n            \"id\": \"{{projectid_get}}\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Projects - Precondition get minDelID All (has_del, ids)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d317429-481f-4eb1-94fe-e2a65e50190b",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - List Projects - Precondition get minDelID All (has_del, ids)',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description: \"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - List Projects - Precondition get minDelID All (has_del, ids)',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description: \"No message\",",
							"};",
							"",
							"var msg = msgFailed;",
							"",
							"if (statusResponse == 200) {",
							"    msg.status = 200;",
							"    // Check number items",
							"    var count_data_del = json.data_del.length;",
							"    var minDelID = 100000000;",
							"",
							"    if (count_data_del !== 0) {",
							"        // Check data response",
							"        var projectid_get = pm.environment.get(\"projectid_get\");",
							"",
							"        //console.log(projectid_get);",
							"        if (json.data_del[0].deleted_item.item_id === projectid_get) {",
							"            msg = msgPassed;",
							"            msg.description = \"get list project success\";",
							"            minDelID = json.data_del[0].deleted_item.id -1;",
							"        }",
							"    } else {",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\";",
							"        msg.description = \"Bug https://floware.atlassian.net/browse/FB-103\";",
							"    }",
							"    pm.environment.set(\"minDelID\", minDelID);",
							"} else {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = json.description;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}&ids={{projectid_get}}&has_del=1",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						},
						{
							"key": "ids",
							"value": "{{projectid_get}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "fields",
							"value": "id,proj_name,calendar_id",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "1058130",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "modifiedLT",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "1058130",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Projects - get All paging (minID, minDelID)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ede78115-8a40-4ccb-b4a9-48d32eb545ef",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - List Projects - get All paging (minID, minDelID)',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - List Projects - get All paging (minID, minDelID)',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"",
							"var msg = msgFailed;",
							"",
							"if(statusResponse == 200){",
							"    msg.status = 200;",
							"    // Check number items",
							"    var count_data = json.data.length;",
							"    var count_data_del = json.data_del.length;",
							"    ",
							"    if((count_data !== 0)&&(count_data_del !== 0)){",
							"        var minID = Number(pm.environment.get(\"minID\"));",
							"        var minDelID = Number(pm.environment.get(\"minDelID\"));",
							"       ",
							"        //console.log(minID +\" \"+ minDelID)",
							"        // Check data response",
							"        var flag = 1;",
							"        for (var i = 0; i < count_data; i++) {",
							"            if (minID >= json.data[i].project.id)",
							"                flag = 0;",
							"        }",
							"",
							"        for (var j = 0; j < count_data_del; j++) {",
							"            if (minDelID >= json.data_del[j].deleted_item.id)",
							"                flag = 0;",
							"        }",
							"        //console.log(flag);",
							"        if (flag === 1) {",
							"            msg = msgPassed;",
							"            msg.description = \"get list projects success\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\";",
							"        msg.description = \"Failed by bug https://floware.atlassian.net/browse/FB-103\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}&minID={{minID}}&minDelID={{minDelID}}&has_del=1",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						},
						{
							"key": "minID",
							"value": "{{minID}}"
						},
						{
							"key": "minDelID",
							"value": "{{minDelID}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Projects - Error when more 50 projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - Error when more 50 projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - Error when more 50 projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        // check number item",
							"        if(count === 50){",
							"            msg = msgPassed;",
							"            msg.description = \"create 50 projects success\";",
							"        }else{",
							"            msg.description = \"number of created projects is not correct - Bug https://floware.atlassian.net/browse/FB-104\";",
							"        }",
							"        ",
							"        // clean up projects",
							"        var projectid50 =[];",
							"        for(var i=0; i<50; i++){",
							"            projectid50[i] = json.data[i].project.id;",
							"        }",
							"        pm.environment.set(\"projectid50\", projectid50);",
							"    }",
							"    // fail - not project data response",
							"    else if(json.data_error){",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"    else{",
							"        msg = msgFailed;",
							"        msg.description = \"response null json - Bug https://floware.atlassian.net/browse/FB-116\"",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "10eab936-6ba5-49f8-8b3c-248d42e6ff39",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\": [\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_1\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_2\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_3\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_4\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_5\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_6\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_7\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_8\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },{\n            \"proj_name\": \"Proj_{{v4uuid}}_9\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_10\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_11\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_12\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_13\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_14\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_15\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_16\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_17\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_18\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_19\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_20\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_21\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_22\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_23\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_24\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_25\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_26\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_27\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_28\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },{\n            \"proj_name\": \"Proj_{{v4uuid}}_29\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_30\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_31\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_32\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_33\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_34\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_35\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_36\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_37\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_38\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_39\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_40\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_41\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_42\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_43\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_44\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_45\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_46\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_47\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_48\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },{\n            \"proj_name\": \"Proj_{{v4uuid}}_49\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_50\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_51\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Projects - Limit 50 projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Create Projects - Limit 50 projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Create Projects - Limit 50 projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        // check number item",
							"        if(count === 50){",
							"            msg = msgPassed;",
							"            msg.description = \"create 50 projects success\";",
							"        }else{",
							"            msg.description = \"number of created projects is not correct - Bug https://floware.atlassian.net/browse/FB-104\";",
							"        }",
							"        ",
							"        // clean up projects",
							"        var projectid50 =[];",
							"        for(var i=0; i<50; i++){",
							"            projectid50[i] = json.data[i].project.id;",
							"        }",
							"        pm.environment.set(\"projectid50\", projectid50);",
							"    }",
							"    // fail - not project data response",
							"    else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "10eab936-6ba5-49f8-8b3c-248d42e6ff39",
						"exec": [
							"pm.environment.set(\"v4uuid\", 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\": [\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_1\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_2\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_3\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_4\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_5\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_6\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_7\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_8\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },{\n            \"proj_name\": \"Proj_{{v4uuid}}_9\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_10\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_11\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_12\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_13\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_14\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_15\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_16\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_17\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_18\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_19\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_20\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_21\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_22\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_23\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_24\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_25\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_26\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_27\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_28\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },{\n            \"proj_name\": \"Proj_{{v4uuid}}_29\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_30\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_31\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_32\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_33\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_34\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_35\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_36\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_37\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_38\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_39\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_40\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_41\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_42\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_43\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_44\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_45\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_46\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_47\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_48\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },{\n            \"proj_name\": \"Proj_{{v4uuid}}_49\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        },\n        {\n            \"proj_name\": \"Proj_{{v4uuid}}_50\",\n            \"proj_color\": \"#d06b64\",\n            \"parent_id\": 0,\n            \"due_date\": 0,\n            \"flag\": 0,\n            \"proj_type\": 0,\n            \"info_card_order\": 0,\n            \"current_mode\": 0,\n            \"is_hide\": 0,\n            \"alerts\": \"\",\n            \"state\": 1,\n            \"recent_time\": 1543302249.725,\n            \"is_expand\": 0,\n            \"order_storyboard\": \"\",\n            \"order_kanban\": \"\",\n            \"view_mode\": 0,\n            \"view_sort\": 0,\n            \"kanban_mode\": 1\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Projects - Error when more 50 projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var statusResponse = responseCode.code;",
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Update Projects - Error when more 50 projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Update Projects - Error when more 50 projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        // check number item",
							"        if(count === 50){",
							"            msg = msgPassed;",
							"            msg.description = \"update 50 projects success\";",
							"        }else{",
							"            msg.description = \"number of updated projects is not correct - Bug https://floware.atlassian.net/browse/FB-104\";",
							"        }",
							"        ",
							"        // Clear temp variables",
							"        for(var i = 0; i< count; i++){",
							"            postman.clearEnvironmentVariable(\"Project_\"+(i+1));",
							"        }",
							"        ",
							"        pm.environment.set(\"modifiedGTE_upd\", json.data[0].project.updated_date);",
							"    }",
							"    // fail - not project data response",
							"    else if(json.data_error){",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"    else{",
							"        msg = msgFailed;",
							"        msg.description = \"response null json - Bug https://floware.atlassian.net/browse/FB-116\"",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "10eab936-6ba5-49f8-8b3c-248d42e6ff39",
						"exec": [
							"// convert Array to String",
							"var projectid50 = pm.environment.get(\"projectid50\").toString();",
							"var count = pm.environment.get(\"projectid50\").length;",
							"",
							"for(var i = 0; i< count; i++){",
							"    //console.log(i+1+\" \"+ projectid50.split(\",\")[i]);",
							"    pm.environment.set(\"Project_\"+(i+1),projectid50.split(\",\")[i]);",
							"}",
							"",
							"pm.environment.set(\"minID_upd\",projectid50.split(\",\")[0]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"projects\": [\n    {\n\t  \"id\": \"{{Project_1}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_1\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_2}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_2\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_3}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_3\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_4}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_4\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_5}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_5\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_6}}\",\n        \"proj_name\": \"Col_{{v4uuid}}_6\",\n        \"proj_color\": \"#d06b64\",\n        \"parent_id\": 0,\n        \"due_date\": 0,\n        \"flag\": 0,\n        \"proj_type\": 0,\n        \"info_card_order\": 0,\n        \"current_mode\": 0,\n        \"is_hide\": 0,\n        \"alerts\": \"\",\n        \"state\": 1,\n        \"recent_time\": 1543302249.725,\n        \"is_expand\": 0,\n        \"order_storyboard\": \"\",\n        \"order_kanban\": \"\",\n        \"view_mode\": 0,\n        \"view_sort\": 0,\n        \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_7}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_7\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_8}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_8\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_9}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_9\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_10}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_10\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_11}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_11\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_12}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_12\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_13}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_13\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_14}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_14\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_15}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_15\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_16}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_16\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_17}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_17\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_18}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_18\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_19}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_19\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_20}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_20\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_21}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_21\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_22}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_22\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_23}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_23\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_24}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_24\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_25}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_25\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_26}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_26\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_27}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_27\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_28}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_28\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_29}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_29\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_30}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_30\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_31}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_31\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_32}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_32\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_33}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_33\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_34}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_34\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_35}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_35\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_36}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_36\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_37}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_37\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_38}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_38\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_39}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_39\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_40}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_40\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_41}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_41\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_42}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_42\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_43}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_43\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_44}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_44\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_45}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_45\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_46}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_46\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_47}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_47\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_48}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_48\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_49}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_49\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_50}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_50\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{projectid_updatefail}}\",\n      \"proj_name\": \"NO UPDATE_{{v4uuid}}\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    }\n  ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Projects - Limit 50 projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd74b65-dbe9-4edb-a70d-2d3a225c7e1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var statusResponse = responseCode.code;",
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Update Projects - Limit 50 projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Update Projects - Limit 50 projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"var msg = msgFailed;",
							"// Check status",
							"if(statusResponse === 200){",
							"    msg.status = 200;",
							"    ",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        ",
							"        // check number item",
							"        if(count === 50){",
							"            msg = msgPassed;",
							"            msg.description = \"update 50 projects success\";",
							"        }else{",
							"            msg.description = \"number of updated projects is not correct - Bug https://floware.atlassian.net/browse/FB-104\";",
							"        }",
							"        ",
							"        // Clear temp variables",
							"        for(var i = 0; i< count; i++){",
							"            postman.clearEnvironmentVariable(\"Project_\"+(i+1));",
							"        }",
							"        ",
							"        pm.environment.set(\"modifiedGTE_upd\", json.data[0].project.updated_date);",
							"    }",
							"    // fail - not project data response",
							"    else{",
							"        var count_error = json.data_error.length;",
							"        if (count_error !== 0){",
							"            msg = msgFailed;",
							"            msg.error = json.data_error[0].error;",
							"            msg.description = json.data_error[0].description;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "10eab936-6ba5-49f8-8b3c-248d42e6ff39",
						"exec": [
							"// convert Array to String",
							"var projectid50 = pm.environment.get(\"projectid50\").toString();",
							"var count = pm.environment.get(\"projectid50\").length;",
							"",
							"for(var i = 0; i< count; i++){",
							"    //console.log(i+1+\" \"+ projectid50.split(\",\")[i]);",
							"    pm.environment.set(\"Project_\"+(i+1),projectid50.split(\",\")[i]);",
							"}",
							"",
							"pm.environment.set(\"minID_upd\",projectid50.split(\",\")[0]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"projects\": [\n    {\n\t  \"id\": \"{{Project_1}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_1\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_2}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_2\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_3}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_3\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_4}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_4\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_5}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_5\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_6}}\",\n        \"proj_name\": \"Col_{{v4uuid}}_6\",\n        \"proj_color\": \"#d06b64\",\n        \"parent_id\": 0,\n        \"due_date\": 0,\n        \"flag\": 0,\n        \"proj_type\": 0,\n        \"info_card_order\": 0,\n        \"current_mode\": 0,\n        \"is_hide\": 0,\n        \"alerts\": \"\",\n        \"state\": 1,\n        \"recent_time\": 1543302249.725,\n        \"is_expand\": 0,\n        \"order_storyboard\": \"\",\n        \"order_kanban\": \"\",\n        \"view_mode\": 0,\n        \"view_sort\": 0,\n        \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_7}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_7\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_8}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_8\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_9}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_9\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_10}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_10\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_11}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_11\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_12}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_12\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_13}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_13\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_14}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_14\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_15}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_15\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_16}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_16\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_17}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_17\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_18}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_18\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_19}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_19\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_20}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_20\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_21}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_21\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_22}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_22\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_23}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_23\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_24}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_24\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_25}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_25\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_26}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_26\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_27}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_27\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_28}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_28\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_29}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_29\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_30}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_30\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_31}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_31\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_32}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_32\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_33}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_33\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_34}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_34\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_35}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_35\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_36}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_36\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_37}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_37\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_38}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_38\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_39}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_39\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_40}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_40\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_41}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_41\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_42}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_42\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_43}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_43\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_44}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_44\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n    \t\"id\": \"{{Project_45}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_45\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_46}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_46\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_47}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_47\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_48}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_48\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_49}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_49\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    },\n    {\n      \"id\": \"{{Project_50}}\",\n      \"proj_name\": \"Col_{{v4uuid}}_50\",\n      \"proj_color\": \"#d06b64\",\n      \"parent_id\": 0,\n      \"due_date\": 0,\n      \"flag\": 0,\n      \"proj_type\": 0,\n      \"info_card_order\": 0,\n      \"current_mode\": 0,\n      \"is_hide\": 0,\n      \"alerts\": \"\",\n      \"state\": 1,\n      \"recent_time\": 1543302249.725,\n      \"is_expand\": 0,\n      \"order_storyboard\": \"\",\n      \"order_kanban\": \"\",\n      \"view_mode\": 0,\n      \"view_sort\": 0,\n      \"kanban_mode\": 1\n    }\n  ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Projects - get Change Update Paging (modifiedGTE, minID, minDelID)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ede78115-8a40-4ccb-b4a9-48d32eb545ef",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - List Projects - get Change Update Paging (modifiedGTE, minID, minDelID)',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - List Projects - get Change Update Paging (modifiedGTE, minID, minDelID)',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"",
							"var msg = msgFailed;",
							"",
							"if(statusResponse == 200){",
							"    msg.status = 200;",
							"    // Check number items",
							"    var count_data = json.data.length;",
							"    ",
							"    if((count_data !== 0)){",
							"        ",
							"        var minID = Number(pm.environment.get(\"minID_upd-1\"));",
							"        var modifiedGTE = Number(pm.environment.get(\"modifiedGTE_upd\"));",
							"        //console.log(minID)",
							"        // Check data response",
							"        var flag = 1;",
							"        for (var i = 0; i < count_data; i++) {",
							"            if ((minID >= json.data[i].project.id)||(modifiedGTE > json.data[i].project.updated_date)){",
							"                flag = 0;",
							"                //console.log(i);",
							"            }",
							"        }",
							"        if (flag === 1) {",
							"            msg = msgPassed;",
							"            msg.description = \"get list projects success\";",
							"            ",
							"            postman.clearEnvironmentVariable(\"minID_upd-1\");",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\"",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6ca8e6a6-c371-4fd9-9c8d-0573ac5da0a9",
						"exec": [
							"var tempId = pm.environment.get(\"minID_upd\");",
							"",
							"pm.environment.set(\"minID_upd-1\", Number(tempId) - 1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}&minID={{minID_upd-1}}&modifiedGTE={{modifiedGTE_upd}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						},
						{
							"key": "minID",
							"value": "{{minID_upd-1}}"
						},
						{
							"key": "modifiedGTE",
							"value": "{{modifiedGTE_upd}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Detele Projects - 50 projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7c8e5f83-07b8-4fbb-8d19-137934360a1c",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - Delete Projects - Many projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/project\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - Delete Projects - Many projects',",
							"    endpoint: pm.environment.get(\"version\") + \"/project\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"",
							"var msg = msgFailed;",
							"",
							"if(statusResponse == 200){",
							"    msg.status = 200;",
							"    // Check number items",
							"    var count = json.data.length;",
							"    if(count === 50){",
							"        // convert Array to String",
							"        var countExpect = pm.environment.get(\"projectid50\").toString().split(\",\").length;",
							"        // Check data response",
							"        if(count === countExpect){",
							"            msg = msgPassed;",
							"            msg.description = \"delete many projects success\"",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\"",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\"",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "14d6e68e-faba-40da-b159-eef947e01312",
						"exec": [
							"var projectid50 = pm.environment.get(\"projectid50\").toString();",
							"var count = pm.environment.get(\"projectid50\").length;",
							"",
							"var stringJson = \"\";",
							"for(var i = 0; i< count; i++){",
							"   stringJson = (stringJson === \"\" ? stringJson : stringJson +', ') +' { \"id\" : ' +projectid50.split(\",\")[i]+ '}';",
							"}",
							"",
							"pm.environment.set(\"stringJson\", stringJson);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projects\": [ \n    \t{{stringJson}} \n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Projects - Precondition get minDelID Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d317429-481f-4eb1-94fe-e2a65e50190b",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var json = JSON.parse(responseBody);",
							"",
							"var minDelID_del = 100000000;",
							"var modifiedGTE_del = 0;",
							"if(json.data_del.length > 0){",
							"    minDelID_del = json.data_del[0].deleted_item.id;",
							"    modifiedGTE_del = json.data_del[0].deleted_item.updated_date",
							"}",
							"pm.environment.set(\"minDelID_del\", minDelID_del);",
							"pm.environment.set(\"modifiedGTE_del\", modifiedGTE_del);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}&ids={{minID_upd}}&has_del=1",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						},
						{
							"key": "ids",
							"value": "{{minID_upd}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "fields",
							"value": "id,proj_name,calendar_id",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "1058130",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "modifiedLT",
							"value": "1548144027",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "1058130",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Projects - get Change Delete Paging (modifiedGTE, minID, minDelID)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ede78115-8a40-4ccb-b4a9-48d32eb545ef",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var json = JSON.parse(responseBody);",
							"var statusResponse = responseCode.code;",
							"",
							"var msgFailed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Failed - List Projects - get Change Delete Paging (modifiedGTE, minID, minDelID)',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status: \"\",",
							"    description:\"No message\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API_Projects\",",
							"    title: 'Passed - List Projects - get Change Delete Paging (modifiedGTE, minID, minDelID)',",
							"    endpoint: pm.environment.get(\"version\") + \"/projects\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: 200,",
							"    description:\"No message\",",
							"};",
							"",
							"var msg = msgFailed;",
							"",
							"if(statusResponse == 200){",
							"    msg.status = 200;",
							"    // Check number items",
							"    var count_data_del = json.data_del.length;",
							"    ",
							"    if((count_data_del === 50)){",
							"       var minDelID = Number(pm.environment.get(\"minDelID_del\"));",
							"       ",
							"       //console.log(minDelID)",
							"        // Check data response",
							"        if((json.data_del[0].deleted_item.id === minDelID)){",
							"            msg = msgPassed;",
							"            msg.description = \"get list projects success\"",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"response null item\"",
							"        msg.description = \"Failed by bug https://floware.atlassian.net/browse/FB-103\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = json.description;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"});",
							"",
							"// Clear all variables for API - Projects",
							"postman.clearEnvironmentVariable(\"modifiedTime\");",
							"postman.clearEnvironmentVariable(\"modifiedLT\");",
							"postman.clearEnvironmentVariable(\"modifiedGTE_upd\");",
							"postman.clearEnvironmentVariable(\"minID_upd\");",
							"postman.clearEnvironmentVariable(\"minDelID_del\");",
							"postman.clearEnvironmentVariable(\"modifiedGTE_del\");",
							"postman.clearEnvironmentVariable(\"projectid50\");",
							"postman.clearEnvironmentVariable(\"projectid_success\");",
							"postman.clearEnvironmentVariable(\"projectid_updatefail\");",
							"postman.clearEnvironmentVariable(\"minID\");",
							"postman.clearEnvironmentVariable(\"projectid_get\");",
							"postman.clearEnvironmentVariable(\"minDelID\");",
							"postman.clearEnvironmentVariable(\"minDelID_del-1\");",
							"postman.clearEnvironmentVariable(\"stringJson\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "10f6f081-2951-4103-814f-0158afb6dcbb",
						"exec": [
							"var tempId = pm.environment.get(\"minDelID_del\");",
							"",
							"pm.environment.set(\"minDelID_del-1\", Number(tempId) - 1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/projects?keyapi={{keyapi_U1}}&has_del=1&modifiedGTE={{modifiedGTE_del}}&minDelID={{minDelID_del-1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"projects"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi_U1}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "modifiedGTE",
							"value": "{{modifiedGTE_del}}"
						},
						{
							"key": "minDelID",
							"value": "{{minDelID_del-1}}"
						}
					]
				}
			},
			"response": []
		}
	]
}