{
	"info": {
		"_postman_id": "15f043d0-32b4-4373-8395-af17216d6d51",
		"name": "API-CloudStorage v2.2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "pretest - Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "652489a9-2a87-4da5-8e8f-7189bd087754",
						"exec": [
							"var email_U1 = pm.environment.get(\"email_U1\");",
							"var email = pm.environment.get(\"email\");",
							"if(email_U1 === undefined){",
							"    pm.environment.set(\"email\",email);",
							"    pm.environment.set(\"password\",pm.environment.get(\"password\"));",
							"}else{",
							"    pm.environment.set(\"email\",email_U1);",
							"    pm.environment.set(\"password\",pm.environment.get(\"password_U1\"));",
							"}",
							"// Use the CryptoJS",
							"var hash = CryptoJS.MD5( CryptoJS.MD5(pm.environment.get(\"email\")+\":LeftCoastLogic:\"+pm.environment.get(\"password\"))+pm.environment.get(\"appreg\")).toString();",
							"",
							"console.log(\"sig: \" + hash);",
							"postman.setEnvironmentVariable(\"sig\", hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4224ece7-fe81-4a3e-bcb5-73157011c1d0",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var keyapi = CryptoJS.MD5( CryptoJS.MD5(pm.environment.get(\"email\") + pm.environment.get(\"appreg\")) + json.tokenapi).toString();",
							"",
							"postman.setEnvironmentVariable(\"token\", json.tokenapi);",
							"postman.setEnvironmentVariable(\"keyapi\", keyapi);",
							"",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Test Version: '+pm.environment.get('version')+'\\nFailed - Pretest - Login',",
							"    endpoint: pm.environment.get(\"version\")+\"/users/token.json\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Test Version: '+pm.environment.get('version')+'\\nPassed - Pretest - Login',",
							"    endpoint: pm.environment.get(\"version\")+\"/users/token.json\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var body = json.description;",
							"    if(body==\"Flo\"){",
							"        msg.description=body;",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=body;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"{{email}}\",\n\t\"alias\": \"{{alias}}\",\n\t\"sig\": \"{{sig}}\"\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/users/token.json",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"users",
						"token.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Cloud Storages - Require - Only bookmark_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b6c1903-989a-4fe4-909e-5729dae32124",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Create Cloud Storages - Require - Only bookmark_data',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Create Cloud Storages - Require - Only bookmark_data',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Create Cloud Storages only required param bookmark_data successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var bookmark = json.data[0].cloud_storage.bookmark_data;",
							"        if(bookmark==pm.environment.get(\"bookmark_data\")){",
							"        msg.description=\"create cloud storage success\";",
							"        pm.environment.set(\"id_storage\", json.data[0].cloud_storage.id);",
							"        pm.environment.set(\"uid_filename\", json.data[0].cloud_storage.uid_filename);",
							"        }else{",
							"        msg = msgFailed;",
							"        msg.description=\"bookmark_data name is: \"+bookmark;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"//Clean up",
							"//clean up",
							"postman.clearEnvironmentVariable(\"bookmark_data\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3085c103-dbc1-4caa-84c6-6e335a173844",
						"exec": [
							"postman.setEnvironmentVariable(\"bookmark_data\", \"Ym9vazwDAAAAAAQQMAAAAJy2yEyU9221\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Cloud Storages - Null markbook_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "60055b73-b6fa-4a0a-80c9-ce869f102027",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Create Cloud Storages - Null markbook_data',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Create Cloud Storages - Null markbook_data',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Not allow to Create Cloud Storages with null markbook_data successful\";",
							"    var count = json.data_err.length;",
							"    if(count !== 0){",
							"        var description = json.data_err[0].description;",
							"        if(description !==\"The item can not be saved.\"){",
							"            msg = msgFailed;",
							"            msg.description = \"Error show is not match with expected\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response do not show error with invalid data\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\t\n        \t\"real_filename\": \"real_filename1\",\n            \"ext\": \"ext\",\n            \"device_uid\":\"D735AC90-F13C-4F68-AFC4-92D23B1C830B\",\n            \"bookmark_data\": \"\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Cloud Storages - real_filename",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "532f9179-45cd-41bf-923d-3cf7fe37c76f",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"     //collection : title collection",
							"    collection:'API-CloudStorage'+pm.environment.get(\"version\"),",
							"    title: 'Failed - Create Cloud Storages - real_filename',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    //collection : title collection",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Create Cloud Storages - real_filename',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Create Cloud Storages with real_filename successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){    ",
							"        var bookmark = json.data[0].cloud_storage.bookmark_data;",
							"        var real_filename = json.data[0].cloud_storage.real_filename;",
							"",
							"    ",
							"        if((bookmark==pm.environment.get(\"bookmark_data\"))",
							"        &&(real_filename==pm.environment.get(\"real_filename\"))",
							"        ){",
							"            msg.description=\"create cloud storage success\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.description = \"cloud storage created is not match\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"//clean up",
							"postman.clearEnvironmentVariable(\"bookmark_data\");",
							"postman.clearEnvironmentVariable(\"real_filename\");",
							"postman.clearEnvironmentVariable(\"ext\");",
							"postman.clearEnvironmentVariable(\"device_uid\");",
							"postman.clearEnvironmentVariable(\"ref\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d1d3d97e-9a8a-4570-846e-e37105390ca0",
						"exec": [
							"postman.setEnvironmentVariable(\"bookmark_data\", \"Ym9vazwDAAAAAAQQMAAAAJy2yEyU9\");",
							"postman.setEnvironmentVariable(\"real_filename\", \"test_90\");",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\"\n        }\n        \n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Cloud Storages - ext",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "532f9179-45cd-41bf-923d-3cf7fe37c76f",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"     //collection : title collection",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Create Cloud Storages - ext',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    //collection : title collection",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Create Cloud Storages - ext',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Create Cloud Storages with ext successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){    ",
							"        var bookmark = json.data[0].cloud_storage.bookmark_data;",
							"        var ext = json.data[0].cloud_storage.ext;",
							"",
							"    ",
							"        if((bookmark==pm.environment.get(\"bookmark_data\"))",
							"        &&(ext==pm.environment.get(\"ext\"))",
							"        ){",
							"            msg.description=\"create cloud storage success\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.description = \"cloud storage created is not match\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"//clean up",
							"postman.clearEnvironmentVariable(\"bookmark_data\");",
							"postman.clearEnvironmentVariable(\"real_filename\");",
							"postman.clearEnvironmentVariable(\"ext\");",
							"postman.clearEnvironmentVariable(\"device_uid\");",
							"postman.clearEnvironmentVariable(\"ref\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d1d3d97e-9a8a-4570-846e-e37105390ca0",
						"exec": [
							"postman.setEnvironmentVariable(\"bookmark_data\", \"Ym9vazwDAAAAAAQQMAAAAJy2yEyU9\");",
							"",
							"postman.setEnvironmentVariable(\"ext\", \"jpg\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"ext\": \"{{ext}}\"\n        }\n        \n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Cloud Storages - device_uid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "532f9179-45cd-41bf-923d-3cf7fe37c76f",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"     //collection : title collection",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Create Cloud Storages - device_uid',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    //collection : title collection",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Create Cloud Storages - device_uid',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Create Cloud Storages with device_uid successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){    ",
							"        var bookmark = json.data[0].cloud_storage.bookmark_data;",
							"        var device_uid = json.data[0].cloud_storage.device_uid;",
							"    ",
							"        if((bookmark==pm.environment.get(\"bookmark_data\"))",
							"        &&(device_uid==pm.environment.get(\"device_uid\"))",
							"        ){",
							"            msg.description=\"create cloud storage success\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.description = \"cloud storage created is not match\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"//clean up",
							"postman.clearEnvironmentVariable(\"bookmark_data\");",
							"postman.clearEnvironmentVariable(\"real_filename\");",
							"postman.clearEnvironmentVariable(\"ext\");",
							"postman.clearEnvironmentVariable(\"device_uid\");",
							"postman.clearEnvironmentVariable(\"ref\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d1d3d97e-9a8a-4570-846e-e37105390ca0",
						"exec": [
							"postman.setEnvironmentVariable(\"bookmark_data\", \"Ym9vazwDAAAAAAQQMAAAAJy2yEyU9\");",
							"postman.setEnvironmentVariable(\"device_uid\", \"my_device\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"device_uid\":\"{{device_uid}}\"\n        }\n        \n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Cloud Storages - uid_filename",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "532f9179-45cd-41bf-923d-3cf7fe37c76f",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"     //collection : title collection",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Create Cloud Storages - uid_filename',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    //collection : title collection",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Create Cloud Storages - uid_filename',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Create Cloud Storages with uid_filename successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){    ",
							"        var bookmark = json.data[0].cloud_storage.bookmark_data;",
							"        var uid_filename = json.data[0].cloud_storage.uid_filename;",
							"    ",
							"        if((bookmark==pm.environment.get(\"bookmark_data\"))",
							"        &&(uid_filename!=\"1234\")",
							"        ){",
							"            msg.description=\"create cloud storage success\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.description = \"cloud storage created is not match\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"//clean up",
							"postman.clearEnvironmentVariable(\"bookmark_data\");",
							"postman.clearEnvironmentVariable(\"real_filename\");",
							"postman.clearEnvironmentVariable(\"ext\");",
							"postman.clearEnvironmentVariable(\"device_uid\");",
							"postman.clearEnvironmentVariable(\"ref\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d1d3d97e-9a8a-4570-846e-e37105390ca0",
						"exec": [
							"postman.setEnvironmentVariable(\"bookmark_data\", \"Ym9vazwDAAAAAAQQMAAAAJy2yEyU9\");",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"uid_filename\":\"1234\"\n        }\n        \n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Cloud Storages - ref",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "532f9179-45cd-41bf-923d-3cf7fe37c76f",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"     //collection : title collection",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Create Cloud Storages - ref',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    //collection : title collection",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Create Cloud Storages - ref',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Create Cloud Storages with ref successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){    ",
							"        var bookmark = json.data[0].cloud_storage.bookmark_data;",
							"        var ref = json.data[0].cloud_storage.ref;",
							"    ",
							"        if((bookmark==pm.environment.get(\"bookmark_data\"))",
							"        &&(ref==pm.environment.get(\"ref\"))",
							"        ){",
							"            msg.description=\"create cloud storage success\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.description = \"cloud storage created is not match\";",
							"",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"//clean up",
							"postman.clearEnvironmentVariable(\"bookmark_data\");",
							"postman.clearEnvironmentVariable(\"real_filename\");",
							"postman.clearEnvironmentVariable(\"ext\");",
							"postman.clearEnvironmentVariable(\"device_uid\");",
							"postman.clearEnvironmentVariable(\"ref\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d1d3d97e-9a8a-4570-846e-e37105390ca0",
						"exec": [
							"postman.setEnvironmentVariable(\"bookmark_data\", \"Ym9vazwDAAAAAAQQMAAAAJy2yEyU9\");",
							"postman.setEnvironmentVariable(\"ref\", \"abc\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"ref\":\"{{ref}}\"\n        }\n        \n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Cloud Storages - Normal Full Option",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "532f9179-45cd-41bf-923d-3cf7fe37c76f",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"     //collection : title collection",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Create Cloud Storages - Full Option',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    //collection : title collection",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Create Cloud Storages - Full Option',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Create Cloud Storages with full option successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){    ",
							"        var bookmark = json.data[0].cloud_storage.bookmark_data;",
							"        var real_filename = json.data[0].cloud_storage.real_filename;",
							"        var ext = json.data[0].cloud_storage.ext;",
							"        var device_uid = json.data[0].cloud_storage.device_uid;",
							"        var uid_filename = json.data[0].cloud_storage.uid_filename;",
							"        var ref = json.data[0].cloud_storage.ref;",
							"    ",
							"        if((bookmark==pm.environment.get(\"bookmark_data\"))",
							"        &&(real_filename==pm.environment.get(\"real_filename\"))",
							"        &&(ext==pm.environment.get(\"ext\"))",
							"        &&(device_uid==pm.environment.get(\"device_uid\"))",
							"        &&(ref==pm.environment.get(\"ref\"))",
							"        ){",
							"            msg.description=\"create cloud storage success\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.description = \"cloud storage created is not match\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"//clean up",
							"postman.clearEnvironmentVariable(\"bookmark_data\");",
							"postman.clearEnvironmentVariable(\"real_filename\");",
							"postman.clearEnvironmentVariable(\"ext\");",
							"postman.clearEnvironmentVariable(\"device_uid\");",
							"postman.clearEnvironmentVariable(\"ref\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d1d3d97e-9a8a-4570-846e-e37105390ca0",
						"exec": [
							"postman.setEnvironmentVariable(\"bookmark_data\", \"Ym9vaxQDAAAAAAQQMAAAAPK9rBAy4Rkw50kE+sdLuWlkUKQxqFDD+ysrCfR+O1D7BAIAAAQAAAADAwAAABgAKAUAAAABAQAAVXNlcnMAAAAKAAAAAQEAAHBodWNuZ3V5ZW4AAAcAAAABAQAARGVza3RvcAAoAAAAAQEAAFNjcmVlbiBTaG90IDIwMTktMDQtMDUgYXQgOS4wNS4zMiBBTS5wbmcQAAAAAQYAABAAAAAgAAAANAAAAEQAAAAIAAAABAMAAOzSCQAAAAAACAAAAAQDAADIcAoAAAAAAAgAAAAEAwAA4XAKAAAAAAAIAAAABAMAAFQNsQIAAAAAEAAAAAEGAACMAAAAnAAAAKwAAAC8AAAACAAAAAAEAABBwSt3t6GLpBgAAAABAgAAAQAAAAAAAAAPAAAAAAAAAAAAAAAAAAAACAAAAAQDAAACAAAAAAAAAAQAAAADAwAA9QEAAAgAAAABCQAAZmlsZTovLy8MAAAAAQEAAE1hY2ludG9zaCBIRAgAAAAEAwAAAGB\\/MxwAAAAIAAAAAAQAAEHAZdzNgAAAJAAAAAEBAAA3Nzc2NDZFOC04QTQxLTMxNEUtOEI1OS0wM0E1QkNDM0YwRTAYAAAAAQIAAIEAAAABAAAA7xMAAAEAAAAAAAAAAAAAAAEAAAABAQAALwAAAAAAAAABBQAAGgAAAAEBAABOU1VSTERvY3VtZW50SWRlbnRpZmllcktleQAABAAAAAMDAAC3owUA2AAAAP7\\/\\/\\/8BAAAAAAAAABEAAAAEEAAAdAAAAAAAAAAFEAAAzAAAAAAAAAAQEAAA9AAAAAAAAABAEAAA5AAAAAAAAAACIAAAwAEAAAAAAAAFIAAAMAEAAAAAAAAQIAAAQAEAAAAAAAARIAAAdAEAAAAAAAASIAAAVAEAAAAAAAATIAAAZAEAAAAAAAAgIAAAoAEAAAAAAAAwIAAAzAEAAAAAAAABwAAAFAEAAAAAAAARwAAAIAAAAAAAAAASwAAAJAEAAAAAAAAQ0AAABAAAAAAAAADUAQCA+AEAAAAAAAA=\");",
							"postman.setEnvironmentVariable(\"real_filename\", \"Screen Shot 2019-04-05 at 9.05.32 AM\");",
							"postman.setEnvironmentVariable(\"ext\", \"png\");",
							"postman.setEnvironmentVariable(\"device_uid\", \"C1MS8PYGH3QD\");",
							"postman.setEnvironmentVariable(\"ref\", \"132\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        }\n        \n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Cloud Storages - Normal Full Option Invalid Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0c96b4c0-d6f8-4834-80be-77b0c94a3170",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Create Cloud Storages - Normal Full Option Invalid Data',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Create Cloud Storages - Normal Full Option Invalid Data',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Cannot create Cloud Storages with invalid data successful\";",
							"    var count = json.data_err.length;",
							"    if(count !== 0){",
							"        var description = json.data_err[0].description;",
							"        if(description !==\"The item can not be saved.\"){",
							"            msg = msgFailed;",
							"            msg.description = \"Error show is not match with expected\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response do not show error with invalid data\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "4847c597-0b2c-4e56-a225-808f52e7ccbf",
						"exec": [
							"postman.setEnvironmentVariable(\"bookmark_data\", \"\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        }\n        \n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pretest - Get List Cloud Storages",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "350b4a8a-594d-4c15-b451-93dc4b3968ee",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var array=[];",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Prestest - Get List Cloud Storages',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Prestest - Get List Cloud Storages',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Cloud Storages successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"            for(var i = 0; i<count; i++){",
							"            array[i] = json.data[i].cloud_storage.id;",
							"        }postman.setEnvironmentVariable(\"deleteID\", array);",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "861db8ea-aac2-4720-8912-e4480886c920",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Cloud Storages - Multiple Big data 50 Items",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3bd1e186-2bcc-4251-8c7a-470163cd1dbe",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var array=[];",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Create Cloud Storages - Multiple Big Data 50 Items',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Create Cloud Storages - Multiple Big Data 50 Items',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"  ",
							"    if(count == 50){",
							"        msg.description=\"Create Cloud Storages 50 items sucessfully\";",
							"        for (var i = 0; i <count; i++) {",
							"            postman.setEnvironmentVariable(\"cloudid\"+i, json.data[i].cloud_storage.id);",
							"            array[i]=json.data[i].cloud_storage.id;",
							"        }",
							"        pm.environment.set(\"50Items\",array);",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number of cloud storage were created is not match\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3514068e-f816-4337-8b7d-0f948f8cd0ff",
						"exec": [
							"postman.setEnvironmentVariable(\"bookmark_data\", \"Ym9vazwDAAAAAAQQMAAAAJy2yEyU9\");",
							"postman.setEnvironmentVariable(\"real_filename\", \"test_90\");",
							"postman.setEnvironmentVariable(\"ext\", \"jpg\");",
							"postman.setEnvironmentVariable(\"device_uid\", \"my_device\");",
							"postman.setEnvironmentVariable(\"ref\", \"abc\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Cloud Storages - Multiple Big data 100 Items",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "12e0825f-5cf6-42e3-b402-bae6b671dcd1",
						"exec": [
							"postman.setEnvironmentVariable(\"bookmark_data\", \"Ym9vazwDAAAAAAQQMAAAAJy2yEyU9\");",
							"postman.setEnvironmentVariable(\"real_filename\", \"test_90\");",
							"postman.setEnvironmentVariable(\"ext\", \"jpg\");",
							"postman.setEnvironmentVariable(\"device_uid\", \"my_device\");",
							"postman.setEnvironmentVariable(\"ref\", \"abc\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2e6cbb72-f7c9-481e-890a-db53f43d1700",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var array=[];",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Create Cloud Storages - Multiple Big Data 100 Items',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Create Cloud Storages - Multiple Big Data 100 Items',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Not allow to create Cloud Storage over 50 items successful\";",
							"    var count = json.data.length;",
							"  ",
							"    if(count != 50){",
							"        msg = msgFailed;",
							"        msg.description = \"The number of cloud storage were created is not match.The count data response is: \"+count;",
							"    }",
							"    for(var i=0; i<count; i++){",
							"        array[i]=json.data[i].cloud_storage.id;",
							"    }",
							"    pm.environment.set(\"50idStorage\",array);",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"postman.clearEnvironmentVariable(\"bookmark_data\");",
							"postman.clearEnvironmentVariable(\"real_filename\");",
							"postman.clearEnvironmentVariable(\"ext\");",
							"postman.clearEnvironmentVariable(\"device_uid\");",
							"postman.clearEnvironmentVariable(\"ref\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n         {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Cloud Storage - 50 items",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "552630bf-8bc8-4370-8c6f-4df6f1dfd152",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Pretest - Failed - Delete Cloud Storage - 50 items',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Pretest - Passed - Delete Cloud Storage - 50 items',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Delete Cloud Storage - 50 items successful\";",
							"    var count = json.data.length;",
							"  ",
							"    for (var i=0; i<count; i++){",
							"        if(!dataResponse.includes(json.data[i].id)){",
							"            msg = msgFailed;",
							"            msg.description = \"Response data not include id deleted\";",
							"            break;",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&id={{50idStorage}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "id",
							"value": "{{50idStorage}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Cloud Storages- Require",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b33aaa32-34f6-4562-95a3-5a0f38f5ab70",
						"exec": [
							"postman.setEnvironmentVariable(\"bookmark_data\", \"update_Ym9vazwDAAAAAAQQMAAAAJy2yEyU9221\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4d2b4b6c-f2ea-4d3e-bfdd-1fb8ebf37f00",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Update Cloud Storages - Require',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Update Cloud Storages - Require',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var bookmark = json.data[0].cloud_storage.bookmark_data;",
							"        if(bookmark==pm.environment.get(\"bookmark_data\")){",
							"        msg.description=\"update cloud storage success\";",
							"        }else{",
							"        msg = msgFailed;",
							"        msg.description = \"Description response failed\";",
							"        msg.description=\"bookmark_data name is: \"+bookmark;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"//Clean up",
							"//clean up"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"keyapi\": \"{{keyapi}}\",\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"id\":\"{{id_storage}}\"\n        }\n    ]\n}\n"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Cloud Storages - Null markbook_data",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4c5efb05-c455-49c6-9097-b41e99192536",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2c380eac-3944-447b-9f07-0ae0cdf49780",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Update Cloud Storages - Null markbook_data',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Update Cloud Storages - Null markbook_data',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var bookmark = json.data[0].cloud_storage.bookmark_data;",
							"        if(bookmark==pm.environment.get(\"bookmark_data\")){",
							"        msg.description=\"update cloud storage success\";",
							"        }else{",
							"        msg = msgFailed;",
							"        msg.description = \"Description response failed\";",
							"        msg.description=\"bookmark_data name is: \"+bookmark;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"//Clean",
							"postman.clearEnvironmentVariable(\"bookmark_data\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"keyapi\": \"{{keyapi}}\",\n    \"cloud_storages\": [\n        {\n            \"real_filename\": \"123156\",\n            \"ext\": \"exe\",\n            \"device_uid\":\"my_device199\",\n            \"bookmark_data\": \"\",\n            \"id\":\"{{id_storage}}\",\n            \"size\":2048\n        }\n    ]\n}\n"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Cloud Storages - Normal Full Option",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd63d43a-9d53-4e5c-a8f7-886c82845900",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"     //collection : title collection",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Update Cloud Storages - Full Option',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    //collection : title collection",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Update Cloud Storages - Full Option',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var bookmark = json.data[0].cloud_storage.bookmark_data;",
							"        var real_filename = json.data[0].cloud_storage.real_filename;",
							"        var ext = json.data[0].cloud_storage.ext;",
							"        var device_uid = json.data[0].cloud_storage.device_uid;",
							"        var uid_filename = json.data[0].cloud_storage.uid_filename;",
							"        var ref = json.data[0].cloud_storage.ref;",
							"    ",
							"        if((bookmark==pm.environment.get(\"bookmark_data\"))",
							"        &&(real_filename==pm.environment.get(\"real_filename\"))",
							"        &&(ext==pm.environment.get(\"ext\"))",
							"        &&(device_uid==pm.environment.get(\"device_uid\"))",
							"        &&(ref==pm.environment.get(\"ref\"))",
							"        ){",
							"        msg.description=\"create cloud storage success\";",
							"        postman.setEnvironmentVariable(\"uid_filename\", uid_filename);",
							"        }else{",
							"        msg = msgFailed;",
							"        msg.description = \"cloud storage created is not match\";",
							"        msg.description=\"bookmark_data: \"+ bookmark+\" ,real_filename:\"+ real_filename+\" ,ext:\"+ ext+\" ,device_uid:\"+ device_uid+\" ,ref:\"+ ref;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"//clean up",
							"postman.clearEnvironmentVariable(\"bookmark_data\");",
							"postman.clearEnvironmentVariable(\"real_filename\");",
							"postman.clearEnvironmentVariable(\"ext\");",
							"postman.clearEnvironmentVariable(\"device_uid\");",
							"postman.clearEnvironmentVariable(\"ref\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "04f95320-cb30-4b58-89f4-efa4acd7264f",
						"exec": [
							"postman.setEnvironmentVariable(\"bookmark_data\", \"Ym9vaxQDAAAAAAQQMAAAAPK9rBAy4Rkw50kE+sdLuWlkUKQxqFDD+ysrCfR+O1D7BAIAAAQAAAADAwAAABgAKAUAAAABAQAAVXNlcnMAAAAKAAAAAQEAAHBodWNuZ3V5ZW4AAAcAAAABAQAARGVza3RvcAAoAAAAAQEAAFNjcmVlbiBTaG90IDIwMTktMDQtMDUgYXQgOS4wNS4zMiBBTS5wbmcQAAAAAQYAABAAAAAgAAAANAAAAEQAAAAIAAAABAMAAOzSCQAAAAAACAAAAAQDAADIcAoAAAAAAAgAAAAEAwAA4XAKAAAAAAAIAAAABAMAAFQNsQIAAAAAEAAAAAEGAACMAAAAnAAAAKwAAAC8AAAACAAAAAAEAABBwSt3t6GLpBgAAAABAgAAAQAAAAAAAAAPAAAAAAAAAAAAAAAAAAAACAAAAAQDAAACAAAAAAAAAAQAAAADAwAA9QEAAAgAAAABCQAAZmlsZTovLy8MAAAAAQEAAE1hY2ludG9zaCBIRAgAAAAEAwAAAGB\\/MxwAAAAIAAAAAAQAAEHAZdzNgAAAJAAAAAEBAAA3Nzc2NDZFOC04QTQxLTMxNEUtOEI1OS0wM0E1QkNDM0YwRTAYAAAAAQIAAIEAAAABAAAA7xMAAAEAAAAAAAAAAAAAAAEAAAABAQAALwAAAAAAAAABBQAAGgAAAAEBAABOU1VSTERvY3VtZW50SWRlbnRpZmllcktleQAABAAAAAMDAAC3owUA2AAAAP7\\/\\/\\/8BAAAAAAAAABEAAAAEEAAAdAAAAAAAAAAFEAAAzAAAAAAAAAAQEAAA9AAAAAAAAABAEAAA5AAAAAAAAAACIAAAwAEAAAAAAAAFIAAAMAEAAAAAAAAQIAAAQAEAAAAAAAARIAAAdAEAAAAAAAASIAAAVAEAAAAAAAATIAAAZAEAAAAAAAAgIAAAoAEAAAAAAAAwIAAAzAEAAAAAAAABwAAAFAEAAAAAAAARwAAAIAAAAAAAAAASwAAAJAEAAAAAAAAQ0AAABAAAAAAAAADUAQCA+AEAAAAAAAA=\");",
							"postman.setEnvironmentVariable(\"real_filename\", \"Screen Shot - Update\");",
							"postman.setEnvironmentVariable(\"ext\", \"png\");",
							"postman.setEnvironmentVariable(\"device_uid\", \"C1MS8PYGH3QD\");",
							"postman.setEnvironmentVariable(\"ref\", \"12312\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\":\"{{device_uid}}\",\n            \"uid_filename\":\"1234\", \n            \"ref\":\"{{ref}}\",\n            \"id\":\"{{id_storage}}\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Cloud Storages - Normal Full Option - invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e75aa1a2-b12b-4c3d-b510-588e802a562e",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Update Cloud Storages - Full Option - Invalid id',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Update Cloud Storages - Full Option - Invalid id',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Cannot create Cloud Storages with invalid id successful\";",
							"    var count = json.data_err.length;",
							"    if(count !== 0){",
							"        var description = json.data_err[0].description;",
							"        if(description !==\"The item can not be saved.\"){",
							"            msg = msgFailed;",
							"            msg.description = \"Error show is not match with expected\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response do not show error with invalid data\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5b681ed6-071e-45c1-a290-2440dd016e06",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"real_filename\",\n            \"ext\": \"ext\",\n            \"device_uid\":\"\",\n            \"uid_filename\":\"2312312312\",\n            \"ref\":134,\n            \"id\":13123\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Cloud Storages - Multiple Big data 50 Items",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fd83e2e6-56ef-49da-bf33-e278a332c5b8",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Update Cloud Storages - Multiple Big Data 50 Items',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Update Cloud Storages - Multiple Big Data 50 Items',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Update Cloud Storages 50 Items successful\";",
							"    var count = json.data.length;",
							"  ",
							"    if(count !== 50){",
							"        msg = msgFailed;",
							"        msg.description = \"The number of cloud storage were updated is not match.The number is \"+count;",
							"    }",
							"    postman.setEnvironmentVariable(\"updateTime\", json.data[0].cloud_storage.updated_date);",
							"        ",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"postman.clearEnvironmentVariable(\"bookmark_data\");",
							"postman.clearEnvironmentVariable(\"real_filename\");",
							"postman.clearEnvironmentVariable(\"ext\");",
							"postman.clearEnvironmentVariable(\"device_uid\");",
							"postman.clearEnvironmentVariable(\"ref\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1b140ed6-e325-4881-9148-b90baa4c33ea",
						"exec": [
							"postman.setEnvironmentVariable(\"bookmark_data\", \"Ym9vazwDAAAAAAQQMAAAAJy2yEyU9\");",
							"postman.setEnvironmentVariable(\"real_filename\", \"test_90\");",
							"postman.setEnvironmentVariable(\"ext\", \"jpg\");",
							"postman.setEnvironmentVariable(\"device_uid\", \"my_device\");",
							"postman.setEnvironmentVariable(\"ref\", \"abc\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cloud_storages\": [\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid0}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid1}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid2}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid3}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid4}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid5}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid6}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid7}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid8}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid9}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid10}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid11}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid12}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid13}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid14}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid15}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid16}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid17}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid18}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid19}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid20}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid21}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid22}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid23}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid24}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid25}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\": \"{{cloudid26}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid27}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid28}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid29}}\"\n        },\n        {\n           \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid30}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid31}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid32}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid33}}\"\n        },\n        {\n           \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid34}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid35}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid36}}\"\n        },\n        {\n           \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid37}}\"\n        },\n        {\n           \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid38}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid39}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid40}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid41}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid42}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid43}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid44}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid45}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid46}}\"\n        },\n        {\n            \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid47}}\"\n        },\n        {\n           \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid48}}\"\n        },\n        {\n           \"bookmark_data\": \"{{bookmark_data}}\",\n            \"real_filename\": \"{{real_filename}}\",\n            \"ext\": \"{{ext}}\",\n            \"device_uid\": \"{{device_uid}}\",\n            \"uid_filename\": \"1234\",\n            \"ref\": \"{{ref}}\",\n            \"id\":\"{{cloudid49}}\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Cloud Storages - Get All",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "350b4a8a-594d-4c15-b451-93dc4b3968ee",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Get List Cloud Storages',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Get List Cloud Storages',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get All List Cloud Storages successful\";",
							"  ",
							"    if(dataResponse.includes(\"data_error\")){",
							"        msg = msgFailed;",
							"        msg.description = \"Get All List Cloud Storages not successful\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "861db8ea-aac2-4720-8912-e4480886c920",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Cloud Storages - Get First Sync",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "350b4a8a-594d-4c15-b451-93dc4b3968ee",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Get List Cloud Storages - First Sync',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Get List Cloud Storages - First Sync',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get List Cloud Storages - First Sync successful\";",
							"  ",
							"    if(dataResponse.includes(\"data_error\")){",
							"        msg = msgFailed;",
							"        msg.description = \"Get List Cloud Storages - First Sync not successful\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "861db8ea-aac2-4720-8912-e4480886c920",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&minID=0&pItem=100",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "0"
						},
						{
							"key": "pItem",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Cloud Storages - Get Option ids, minID has_del, pItem 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21e0ef3f-a87e-4ad8-b08e-824a350d0ac5",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var dataResponse = pm.response.text();",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Get List Cloud Storages - Get Option1 ids=idcloud59, minID=cloudid12 , has_del=1, pItem =5',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Get List Cloud Storages - Get Option1 ids=idcloud59, minID=cloudid12 , has_del=1, pItem =5',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get List Cloud Storages - Get Option ids, minID has_del, pItem [1] successful\";",
							"    var count = json.data.length;",
							"    if(count == 1){",
							"        if(json.data[0].cloud_storage.id != pm.environment.get(\"cloudid13\")){",
							"            msg = msgFailed;",
							"            msg.description = \"parameter minID do not work\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"parameter ids do not work\";",
							"    }",
							"    if(!dataResponse.includes('data_del')){",
							"        msg = msgFailed;",
							"        msg.description = msg.error+\"- parameter has_del do not work\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ef7dc793-7ccf-47f9-9f57-516364e4f54a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&minID={{cloudid12}}&has_del=1&ids={{cloudid13}}&pItem=5",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "minID",
							"value": "{{cloudid12}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "ids",
							"value": "{{cloudid13}}"
						},
						{
							"key": "pItem",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Cloud Storages - Get Option ids, minID has_del, pItem 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21e0ef3f-a87e-4ad8-b08e-824a350d0ac5",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var dataResponse = pm.response.text();",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Get List Cloud Storages - Get Option2 ids=idcloud59, minID=cloudid13 , has_del=0, pItem =5',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Get List Cloud Storages - Get Option2 ids=idcloud59, minID=cloudid13 , has_del=0, pItem =5',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get List Cloud Storages - Get Option ids, minID has_del, pItem [2] successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        msg = msgFailed;",
							"        msg.description = \"Get list cloud storage must be null, with minID={{cloudid13}}, ids={{cloudid13}}\";",
							"    }",
							"    if(dataResponse.includes('data_del')){",
							"        msg = msgFailed;",
							"        msg.description = msg.error+\"- parameter has_del do not work\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ef7dc793-7ccf-47f9-9f57-516364e4f54a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&minID={{cloudid13}}&has_del=0&ids={{cloudid13}}&pItem=5",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "minID",
							"value": "{{cloudid13}}"
						},
						{
							"key": "has_del",
							"value": "0"
						},
						{
							"key": "ids",
							"value": "{{cloudid13}}"
						},
						{
							"key": "pItem",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Cloud Storages - Get Option ids, minID has_del, pItem 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21e0ef3f-a87e-4ad8-b08e-824a350d0ac5",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var dataResponse = pm.response.text();",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Get List Cloud Storages - Get Option3 minID=idcloud20 , has_del=1, pItem =5',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Get List Cloud Storages - Get Option3 minID=idcloud20 , has_del=1, pItem =5',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get List Cloud Storages - Get Option ids, minID has_del, pItem [3] successful\";",
							"    ",
							"    var count = json.data.length;",
							"    if(count == 5){",
							"        for(var i =0; i<count; i++){",
							"            if(json.data[i].cloud_storage.id <= pm.environment.get(\"cloudid20\")){",
							"                msg = msgFailed;",
							"                msg.description = \"- parameter minID do not work\"; ",
							"                break;",
							"            }",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"- parameter pItem do not work\";",
							"    }",
							"    if(!dataResponse.includes('data_del')){",
							"        msg = msgFailed;",
							"        msg.description = msg.error+\"- parameter has_del do not work\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ef7dc793-7ccf-47f9-9f57-516364e4f54a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&minID={{cloudid20}}&has_del=1&pItem=5",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "minID",
							"value": "{{cloudid20}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "ids",
							"value": "{{cloudid49}}",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Cloud Storages - Get Option ids, minID has_del, pItem 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21e0ef3f-a87e-4ad8-b08e-824a350d0ac5",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var dataResponse = pm.response.text();",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Get List Cloud Storages - Get Option4 minID=idcloud20 , has_del=0, pItem =10',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Get List Cloud Storages - Get Option4 minID=idcloud20 , has_del=0, pItem =10',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get List Cloud Storages - Get Option ids, minID has_del, pItem [4] successful\";",
							"    var count = json.data.length;",
							"    if(count == 10){",
							"        for(var i =0; i<count; i++){",
							"            if(json.data[i].cloud_storage.id <= pm.environment.get(\"cloudid20\")){",
							"                msg = msgFailed;",
							"                msg.description = \"- parameter minID do not work\"; ",
							"                break;",
							"            }",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"- parameter pItem do not work\";",
							"    }",
							"    if(dataResponse.includes('data_del')){",
							"        msg = msgFailed;",
							"        msg.description = msg.error+\"- parameter has_del do not work\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ef7dc793-7ccf-47f9-9f57-516364e4f54a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&minID={{cloudid20}}&has_del=0&pItem=10",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "minID",
							"value": "{{cloudid20}}"
						},
						{
							"key": "has_del",
							"value": "0"
						},
						{
							"key": "ids",
							"value": "{{cloudid49}}",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload File",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91365bc1-a6b0-4e3b-9553-a8fcde8dd21c",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Cloud Storages - Upload Success',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Cloud Storages - Upload Success',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var description = json.data.description;",
							"        if(description==\"Upload successful\"){",
							"            msg.description=description;",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.error = \"upload not successful\";",
							"            msg.description=description;",
							"            ",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1f865cde-0d8f-461a-8802-9da71729c73c",
						"exec": [
							"var Version = pm.environment.get(\"version\");",
							"if(Version.includes(\"api/v2\")){",
							"    pm.environment.set(\"server\",\"files.flomail.net\")",
							"}else{",
							"    pm.environment.set(\"server\",\"files.floware.com\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file5.jpg"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages/upload?keyapi={{keyapi}}&uid={{uid_filename}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "uid",
							"value": "{{uid_filename}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload File - Null File",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a51c9996-3118-413c-bee8-4e46a7cb481f",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Cloud Storages - Upload Null File',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Cloud Storages - Upload Null File',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var description = json.data.description;",
							"        if(description==\"Upload failed\"){",
							"        msg.description=description;",
							"        }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Upload was not failed as expected\";",
							"        msg.description=description;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7e45ef52-3283-451e-8fd4-7328cbc4069f",
						"exec": [
							"var Version = pm.environment.get(\"version\");",
							"if(Version.includes(\"api/v2\")){",
							"    pm.environment.set(\"server\",\"files.flomail.net\")",
							"}else{",
							"    pm.environment.set(\"server\",\"files.floware.com\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages/upload?keyapi={{keyapi}}&uid={{uid_filename}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "uid",
							"value": "{{uid_filename}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload File - Invalid uid_file",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2f5498b5-d049-4c5d-b0fb-1cedd08a4411",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Cloud Storages - Upload Invalid uid_file',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Cloud Storages - Upload Invalid uid_file',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"     var count = json.data.length;",
							"    if(count !== 0){",
							"        var description = json.data.description;",
							"        if(description==\"Upload failed\"){",
							"            msg.description=description;",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.error = \"Upload was not failed as expected\";",
							"            msg.description=description;",
							"        } ",
							"    } else{",
							"        msg = msgFailed;",
							"        msg.error = \"data response null\";",
							"    } ",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0b01ef99-9d41-47f3-9a76-d0e93744f16a",
						"exec": [
							"var Version = pm.environment.get(\"version\");",
							"if(Version.includes(\"api/v2\")){",
							"    pm.environment.set(\"server\",\"files.flomail.net\")",
							"}else{",
							"    pm.environment.set(\"server\",\"files.floware.com\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file5.jpg"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages/upload?keyapi={{keyapi}}&uid=8965124",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "uid",
							"value": "8965124"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload File - Big size",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a51c9996-3118-413c-bee8-4e46a7cb481f",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Cloud Storages - Upload Success Big size',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Cloud Storages - Upload Success Big size',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"var dataResponse = pm.response.text();",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.data.description;",
							"    if(description==\"Upload successful\"){",
							"        msg.description=description;",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"upload not successful\";",
							"        msg.description=description;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "7223bb6f-bfd4-4dac-9946-31d134d72bac",
						"exec": [
							"var Version = pm.environment.get(\"version\");",
							"if(Version.includes(\"api/v2\")){",
							"    pm.environment.set(\"server\",\"files.flomail.net\")",
							"}else{",
							"    pm.environment.set(\"server\",\"files.floware.com\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file1.pdf"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages/upload?keyapi={{keyapi}}&uid={{uid_filename}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "uid",
							"value": "{{uid_filename}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Dowload File - Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9e9df67a-bcc3-4323-a7a3-0708784db5c0",
						"exec": [
							"var json ",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Cloud Storages - Download File - Successful',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/download/uid=:uid\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Cloud Storages - Download File - Successful',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/download/uid=:uid\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"var dataResponse = pm.response.text();",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    try{",
							"        json = JSON.parse(responseBody);",
							"        if(json.error === undefined){",
							"        msg.description=\"Dowload successfull\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = json.error;",
							"        msg.description=json.description;",
							"    }",
							"    }catch(e){}",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5b39af4d-a6ca-46f3-a3f6-d53457beb9fc",
						"exec": [
							"var Version = pm.environment.get(\"version\");",
							"if(Version.includes(\"api/v2\")){",
							"    pm.environment.set(\"server\",\"files.flomail.net\")",
							"}else{",
							"    pm.environment.set(\"server\",\"files.floware.com\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages/download?keyapi={{keyapi}}&uid={{uid_filename}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages",
						"download"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "uid",
							"value": "{{uid_filename}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Dowload File - Invalid uid_file",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4d5405ed-85e7-45ff-ba91-fce5dd93a7fc",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Cloud Storages - Download File - Invalid uid_file',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/download/uid=:uid\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Cloud Storages - Download File - Invalid uid_file',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/download/uid=:uid\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"var dataResponse = pm.response.text();",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.description;",
							"    if(description==\"File not found\"){",
							"        msg.description=description;",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"description is not match\";",
							"        msg.description=description;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "e56a2f9c-7e38-4f70-803a-9b095baada24",
						"exec": [
							"var Version = pm.environment.get(\"version\");",
							"if(Version.includes(\"api/v2\")){",
							"    pm.environment.set(\"server\",\"files.flomail.net\")",
							"}else{",
							"    pm.environment.set(\"server\",\"files.floware.com\")",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages/download?keyapi={{keyapi}}&uid=8964125",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages",
						"download"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "uid",
							"value": "8964125"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Recovery",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f20fd1bc-be54-4c38-b4a3-36f1464d52eb",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Recovery Cloud Storages',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/recovery\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Recovery Cloud Storages',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages/recovery\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Recovery file successful\"",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        var id = json.data[0].id;",
							"        if(id!=pm.environment.get(\"cloudid49\")){",
							"            msg = msgFailed;",
							"            msg.description = \"id response is not match\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"data response null\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"//Clean up"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages/recovery?keyapi={{keyapi}}&id={{cloudid49}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages",
						"recovery"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "id",
							"value": "{{cloudid49}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Recovery - Invalid Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f20fd1bc-be54-4c38-b4a3-36f1464d52eb",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Recovery Cloud Storages - Invalid id',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Recovery Cloud Storages - Invalid id',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Cannot recovery file with invalid id successful\"",
							"    var count = json.data.length;",
							"    if(count===0){",
							"        msg.description=\"Data response is null as expected\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Data is not null\";",
							"        msg.description=\"Data response: id: \"+json.data[0].id;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages/recovery?keyapi={{keyapi}}&id=123456",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages",
						"recovery"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "id",
							"value": "123456"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Cloud Storage - Delete 7 items",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "552630bf-8bc8-4370-8c6f-4df6f1dfd152",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Pretest - Failed - Delete Cloud Storage - Delete 7 items',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Pretest - Passed - Delete Cloud Storage - Delete 7 items',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Delete Cloud Storage - Delete 7 items successful\";",
							"    var count = json.data.length;",
							"  ",
							"    if(count != 7){",
							"        msg = msgFailed;",
							"        msg.description = \"The number of cloud storage were is not match: \"+count;",
							"    }",
							"    pm.environment.set(\"minDelID\",json.data[0].id);",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&id={{deleteID}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "id",
							"value": "{{deleteID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Cloud Storages - Get Change modifiedGTE ids, minID has_del, pItem 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21e0ef3f-a87e-4ad8-b08e-824a350d0ac5",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var dataResponse = pm.response.text();",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Get List Cloud Storages - Get Change option1 ids=idcloud49, minID=idcloud48 , has_del=1, pItem =5',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Get List Cloud Storages - Get Change option1 ids=idcloud49, minID=idcloud48 , has_del=1, pItem =5',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get List Cloud Storages -  Get Change modifiedGTE ids, minID has_del, pItem [1] - successful\";",
							"  ",
							"    ",
							"   var count = json.data.length;",
							"    if(count == 1){",
							"        if(json.data[0].cloud_storage.updated_date <= pm.environment.get(\"updateTime\")){",
							"                msg = msgFailed;",
							"                msg.description = \"- parameter modifiedGTE do not work\"; ",
							"        }",
							"        if(json.data[0].cloud_storage.id <= pm.environment.get(\"cloudid48\")){",
							"            msg = msgFailed;",
							"            msg.description = \"parameter minID do not work\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"parameter ids do not work\";",
							"    }",
							"    if(!dataResponse.includes('data_del')){",
							"        msg = msgFailed;",
							"        msg.description = msg.error+\"- parameter has_del do not work\";",
							"    }else{",
							"        var count = json.data_del.length;",
							"        if(count !== 0){",
							"            for(var i =0; i<count; i++){",
							"                if(json.data_del[i].deleted_item.updated_date <= pm.environment.get(\"updateTime\")){",
							"                    msg = msgFailed;",
							"                    msg.description = \"- parameter modifiedGTE do not work\"; ",
							"                    break;",
							"                }",
							"            }",
							"        }  ",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ef7dc793-7ccf-47f9-9f57-516364e4f54a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&minID={{cloudid48}}&has_del=1&ids={{cloudid49}}&pItem=5&modifiedGTE={{updateTime}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "minID",
							"value": "{{cloudid48}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "ids",
							"value": "{{cloudid49}}"
						},
						{
							"key": "pItem",
							"value": "5"
						},
						{
							"key": "modifiedGTE",
							"value": "{{updateTime}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Cloud Storages - Get Change modifiedGTE ids, minID has_del, pItem 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21e0ef3f-a87e-4ad8-b08e-824a350d0ac5",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var dataResponse = pm.response.text();",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Get List Cloud Storages - Get Change Option2 ids=idcloud49, minID=idcloud49 , has_del=0, pItem =5',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Get List Cloud Storages - Get Change Option2 ids=idcloud49, minID=idcloud49 , has_del=0, pItem =5',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get List Cloud Storages -  Get Change modifiedGTE ids, minID has_del, pItem [2] - successful\";",
							"  ",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        msg = msgFailed;",
							"        msg.description = \"Get list cloud storage must be null, with minID={{cloudid49}}, ids={{cloudid49}}\";",
							"    }",
							"    if(dataResponse.includes('data_del')){",
							"        msg = msgFailed;",
							"        msg.description = msg.error+\"- parameter has_del do not work\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ef7dc793-7ccf-47f9-9f57-516364e4f54a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&minID={{cloudid49}}&has_del=0&ids={{cloudid49}}&pItem=5&modifiedGTE={{updateTime}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "minID",
							"value": "{{cloudid49}}"
						},
						{
							"key": "has_del",
							"value": "0"
						},
						{
							"key": "ids",
							"value": "{{cloudid49}}"
						},
						{
							"key": "pItem",
							"value": "5"
						},
						{
							"key": "modifiedGTE",
							"value": "{{updateTime}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Cloud Storages - Get Change modifiedGTE ids, minID has_del, pItem 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21e0ef3f-a87e-4ad8-b08e-824a350d0ac5",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var dataResponse = pm.response.text();",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Get List Cloud Storages - Get Change 3 minID=idcloud30 , has_del=1, pItem =5',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Get List Cloud Storages - Get Change 3 minID=idcloud30 , has_del=1, pItem =5',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get List Cloud Storages -  Get Change modifiedGTE ids, minID has_del, pItem [3] - successful\";",
							"  ",
							"    var count = json.data.length;",
							"    if(count == 5){",
							"        for(var i =0; i<count; i++){",
							"            if(json.data[i].cloud_storage.updated_date <= pm.environment.get(\"updateTime\")){",
							"                msg = msgFailed;",
							"                msg.description = \"- parameter modifiedGTE do not work\"; ",
							"                break;",
							"            }",
							"            ",
							"            if(json.data[i].cloud_storage.id <= pm.environment.get(\"cloudid30\")){",
							"                msg = msgFailed;",
							"                msg.description = msg.error+\"- parameter minID do not work\"; ",
							"                break;",
							"            }",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"- parameter pItem do not work\";",
							"    }",
							"    if(!dataResponse.includes('data_del')){",
							"        msg = msgFailed;",
							"        msg.description = msg.error+\"- parameter has_del do not work\";",
							"    }else{",
							"        var count = json.data_del.length;",
							"        if(count !== 0){",
							"            for(var i =0; i<count; i++){",
							"                if(json.data_del[i].deleted_item.updated_date <= pm.environment.get(\"updateTime\")){",
							"                    msg = msgFailed;",
							"                    msg.description = \"- parameter modifiedGTE do not work\"; ",
							"                    break;",
							"                }",
							"            }",
							"        }  ",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ef7dc793-7ccf-47f9-9f57-516364e4f54a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&minID={{cloudid30}}&has_del=1&pItem=5&modifiedGTE={{updateTime}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "minID",
							"value": "{{cloudid30}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "ids",
							"value": "{{cloudid49}}",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "5"
						},
						{
							"key": "modifiedGTE",
							"value": "{{updateTime}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Cloud Storages - Get Change modifiedGTE ids, minID has_del, pItem 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "22ceacbd-3c72-4352-932a-287943e56c52",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var dataResponse = pm.response.text();",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Get List Cloud Storages - Get Change 4 minID=idcloud30 , has_del=0, pItem =10',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Get List Cloud Storages - Get Change 4 minID=idcloud30 , has_del=0, pItem =10',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get List Cloud Storages -  Get Change modifiedGTE ids, minID has_del, pItem [4] - successful\";",
							"  ",
							"    var count = json.data.length;",
							"    if(count == 10){",
							"        for(var i =0; i<count; i++){",
							"            if(json.data[i].cloud_storage.updated_date <= pm.environment.get(\"updateTime\")){",
							"                msg = msgFailed;",
							"                msg.description = \"- parameter modifiedGTE do not work\"; ",
							"                break;",
							"            }",
							"            ",
							"            if(json.data[i].cloud_storage.id <= pm.environment.get(\"cloudid30\")){",
							"                msg = msgFailed;",
							"                msg.description = \"- parameter minID do not work\"; ",
							"                break;",
							"            }",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"- parameter pItem do not work\";",
							"    }",
							"    if(dataResponse.includes('data_del')){",
							"        msg = msgFailed;",
							"        msg.description = msg.error+\"- parameter has_del do not work\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "786096e9-7275-4ffa-a4a5-e0b98f3f9601",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&minID={{cloudid30}}&has_del=0&pItem=10&modifiedGTE={{updateTime}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "minID",
							"value": "{{cloudid30}}"
						},
						{
							"key": "has_del",
							"value": "0"
						},
						{
							"key": "ids",
							"value": "{{cloudid49}}",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "10"
						},
						{
							"key": "modifiedGTE",
							"value": "{{updateTime}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Cloud Storage - Invalid Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f20fd1bc-be54-4c38-b4a3-36f1464d52eb",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Delete Cloud Storages - Invalid id',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Delete Cloud Storages - Invalid id',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count===0){",
							"        msg.description=\"Data response is null as expected\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Data is not null\";",
							"        msg.description=\"Data response: id: \"+json.data[0].id;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&id=147852",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "id",
							"value": "147852"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Cloud Storage - Delete 50 items",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "552630bf-8bc8-4370-8c6f-4df6f1dfd152",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Pretest - Failed - Delete Cloud Storage - Delete 50 items',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Pretest - Passed - Delete Cloud Storage - Delete 50 items',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Delete Cloud Storage - Delete 50 items successful\";",
							"    var count = json.data.length;",
							"  ",
							"    if(count !== 50){",
							"        msg = msgFailed;",
							"        msg.description = \"The number of cloud storage were is not match: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&id={{50Items}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "id",
							"value": "{{50Items}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pretest - Get List Cloud Storages",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "350b4a8a-594d-4c15-b451-93dc4b3968ee",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Get List Cloud Storages',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Get List Cloud Storages',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Cloud Storage successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        for (var i = 0; i <count; i++) ",
							"        {",
							"            array[i] = json.data[i].cloud_storage.id;",
							"        }",
							"        postman.setEnvironmentVariable(\"cloudid\", array);",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "861db8ea-aac2-4720-8912-e4480886c920",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Cloud Storage - Big Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "552630bf-8bc8-4370-8c6f-4df6f1dfd152",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"",
							"var msgFailed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Failed - Delete Cloud Storage Big Data',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-CloudStorage',",
							"    title: 'Passed - Delete Cloud Storage Big Data',",
							"    endpoint: pm.environment.get(\"version\")+\"/cloud_storages\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"",
							"    var count = json.data.length;",
							"  ",
							"    if(!dataResponse.includes(\"data_error\")){",
							"        msg.description=\"Delete Cloud Storages Big Data Success\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"The number of cloud storage were is not match\";",
							"        msg.description=\"The number of cloud storage were is: \"+count;",
							"    }",
							"    ",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							"//Clean",
							"postman.clearEnvironmentVariable(\"id_storage\");",
							"postman.clearEnvironmentVariable(\"cloudid\");",
							"postman.clearEnvironmentVariable(\"uid_filename\");",
							"postman.clearEnvironmentVariable(\"minDelID\");",
							"postman.clearEnvironmentVariable(\"allLink1\");",
							"postman.clearEnvironmentVariable(\"deleteID\");",
							"postman.clearEnvironmentVariable(\"50idStorage\");",
							"postman.clearEnvironmentVariable(\"50Items\");",
							"for(var i =0 ; i<200; i++){",
							"    postman.clearEnvironmentVariable(\"cloudid\"+i);",
							"}",
							"postman.clearEnvironmentVariable(\"updateTime\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/cloud_storages?keyapi={{keyapi}}&id={{cloudid}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"cloud_storages"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "id",
							"value": "{{cloudid}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e2941b5a-092f-4de6-8a77-5770feaccdc7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "3bfbf65b-0ff3-40f3-9f83-266772080da3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}