{
	"info": {
		"_postman_id": "cf8efece-20d4-4244-b770-96c7fa690e17",
		"name": "API - File Version 2.2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "RUN ALL SCRIPTS API - FILE",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e1b744bb-acc2-4081-aac1-a4f8c9a6cfbb",
						"exec": [
							"// Use the CryptoJS",
							"var hash = CryptoJS.MD5( CryptoJS.MD5(pm.environment.get(\"email\")+\":LeftCoastLogic:\"+pm.environment.get(\"password\"))+pm.environment.get(\"appreg\")).toString();",
							"",
							"console.log(\"sig: \" + hash);",
							"postman.setEnvironmentVariable(\"sig\", hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "64ab487d-2eda-44c8-b027-39943e652ed9",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var keyapi = CryptoJS.MD5( CryptoJS.MD5(pm.environment.get(\"email\") + pm.environment.get(\"appreg\")) + json.tokenapi).toString();",
							"",
							"postman.setEnvironmentVariable(\"token\", json.tokenapi);",
							"postman.setEnvironmentVariable(\"keyapi\", keyapi);",
							"",
							"var msgFailed = {",
							"    collection:'API-File',",
							"    title: 'Test Version: '+pm.environment.get('version')+'\\nFailed - Pretest - Login',",
							"    endpoint: pm.environment.get('version')+\"/users/token.json\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-File',",
							"    title: 'Test Version: '+pm.environment.get('version')+'\\nPassed - Pretest - Login',",
							"    endpoint: pm.environment.get('version')+\"/users/token.json\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var body = json.description;",
							"    if(body==\"Flo\"){",
							"        msg.description=body;",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=body;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\"",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"{{email}}\",\n\t\"alias\": \"{{alias}}\",\n\t\"sig\": \"{{sig}}\"\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/users/token.json",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"users",
						"token.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload - without source file",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ebbfcf17-3ed2-497c-b8b2-64b7f84841a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c9dcec43-86c7-46d2-a9e2-1cbb3793c411",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Upload - without source file',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Upload - without source file',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.description;",
							"    if(description==\"Upload fail.Can not found file upload\"){",
							"        msg.description=description;",
							"        msg.error = \"error\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"upload successful\";",
							"        msg.description=description;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"    ",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": ""
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/upload?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload - update a file",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ebbfcf17-3ed2-497c-b8b2-64b7f84841a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c9dcec43-86c7-46d2-a9e2-1cbb3793c411",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Upload - update a file',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Upload - update a file',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text(); ",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.description;",
							"    if(description==\"Upload successful.\"){",
							"        msg.description=description;",
							"        pm.environment.set(\"clientID\",json.file.client_id);",
							"        pm.environment.set(\"DateUploadFile\",json.file.updated_date);",
							"        pm.environment.set(\"UID\",json.file.uid);",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"upload not successful\";",
							"        msg.description=description;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"    ",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file.pdf"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/upload?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List File - Get a file uploaded",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e0b649d3-357f-41af-b625-249da38c8018",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Get List File - Get a file uploaded',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Get List File - Get a file uploaded',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var uid = pm.environment.get(\"UID\");",
							"var msg;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(dataResponse.includes(\"files\") && uid == json.data[0].files.uid){",
							"        msg.description=\"Get file updated successful\";",
							"        pm.environment.set(\"id_1\",json.data[0].files.id-1);",
							"        ",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Get file updated not successful\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files?keyapi={{keyapi}}&modifiedGTE={{DateUploadFile}}&fields=id,uid,filename,updated_date,client_id,ext&client_ids={{clientID}}&uids={{UID}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files"
					],
					"query": [
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "1",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "obj_ids",
							"value": "aa5bcede-017b-45f1-a6d4-16f85ab76957",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "140793",
							"disabled": true
						},
						{
							"key": "ref",
							"value": "",
							"disabled": true
						},
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "modifiedGTE",
							"value": "{{DateUploadFile}}"
						},
						{
							"key": "fields",
							"value": "id,uid,filename,updated_date,client_id,ext"
						},
						{
							"key": "client_ids",
							"value": "{{clientID}}"
						},
						{
							"key": "uids",
							"value": "{{UID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload - update a file 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ebbfcf17-3ed2-497c-b8b2-64b7f84841a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c9dcec43-86c7-46d2-a9e2-1cbb3793c411",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Upload - update a file 1',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Upload - update a file 1',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.description;",
							"    if(description==\"Upload successful.\"){",
							"        msg.description= \"Upload file 1 successful\";",
							"        ",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"upload file not successful\";",
							"        msg.description = dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"    ",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file1.pdf"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/upload?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload - update a file 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ebbfcf17-3ed2-497c-b8b2-64b7f84841a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c9dcec43-86c7-46d2-a9e2-1cbb3793c411",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Upload - update a file 2',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Upload - update a file 2',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.description;",
							"    if(description==\"Upload successful.\"){",
							"        msg.description= \"Upload file 2 successful\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"upload file not successful\";",
							"        msg.description = dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"    ",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file2.csv"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/upload?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload - update a file 3",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ebbfcf17-3ed2-497c-b8b2-64b7f84841a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c9dcec43-86c7-46d2-a9e2-1cbb3793c411",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Upload - update a file 3',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Upload - update a file 3',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.description;",
							"    if(description==\"Upload successful.\"){",
							"        msg.description= \"Upload file 3 successful\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"upload file not successful\";",
							"        msg.description = dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"    ",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file3.doc"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/upload?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload - update a file 4",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ebbfcf17-3ed2-497c-b8b2-64b7f84841a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c9dcec43-86c7-46d2-a9e2-1cbb3793c411",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Upload - update a file 4',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Upload - update a file 4',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.description;",
							"    if(description==\"Upload successful.\"){",
							"        msg.description= \"Upload file 4 successful\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"upload file not successful\";",
							"        msg.description = dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"    ",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file4.png"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/upload?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload - update a file 5",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ebbfcf17-3ed2-497c-b8b2-64b7f84841a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c9dcec43-86c7-46d2-a9e2-1cbb3793c411",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Upload - update a file 5',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Upload - update a file 5',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.description;",
							"    if(description==\"Upload successful.\"){",
							"        msg.description= \"Upload file 5 successful\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"upload file not successful\";",
							"        msg.description = dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"    ",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file5.jpg"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/upload?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload - update a file 6",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ebbfcf17-3ed2-497c-b8b2-64b7f84841a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c9dcec43-86c7-46d2-a9e2-1cbb3793c411",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Upload - update a file 6',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Upload - update a file 6',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.description;",
							"    if(description==\"Upload successful.\"){",
							"        msg.description= \"Upload file 6 successful\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"upload file not successful\";",
							"        msg.description = dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"    ",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file6.mp3"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/upload?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload - update a file 7",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ebbfcf17-3ed2-497c-b8b2-64b7f84841a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c9dcec43-86c7-46d2-a9e2-1cbb3793c411",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Upload - update a file 7',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Upload - update a file 7',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.description;",
							"    if(description==\"Upload successful.\"){",
							"        msg.description= \"Upload file 7 successful\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"upload file not successful\";",
							"        msg.description = dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"    ",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file7.xlsx"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/upload?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload - update a file 8",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ebbfcf17-3ed2-497c-b8b2-64b7f84841a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c9dcec43-86c7-46d2-a9e2-1cbb3793c411",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Upload - update a file 8',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Upload - update a file 8',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.description;",
							"    if(description==\"Upload successful.\"){",
							"        msg.description= \"Upload file 8 successful\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"upload file not successful\";",
							"        msg.description = dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"    ",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file8.pdf"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/upload?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload - update a file 9",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ebbfcf17-3ed2-497c-b8b2-64b7f84841a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c9dcec43-86c7-46d2-a9e2-1cbb3793c411",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Upload - update a file 9',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Upload - update a file 9',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.description;",
							"    if(description==\"Upload successful.\"){",
							"        msg.description= \"Upload file 9 successful\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"upload file not successful\";",
							"        msg.description = dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"    ",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file9.docx"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/upload?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Upload - Big size",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a51c9996-3118-413c-bee8-4e46a7cb481f",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Upload - Big size',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Upload - Big size',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var description = json.description;",
							"    if(description==\"Upload successful.\"){",
							"        msg.description=description;",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"upload not successful\";",
							"        msg.description=description;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"    ",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "../Postman_Collections_APIs/FilesForUpload/file_app_FLOM.dmg"
						}
					]
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/upload?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"upload"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List File - Get all files",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "608de623-81f1-4ae6-9527-bd6504b2f724",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Get List File - Get all files',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Get List File - Get all files',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(dataResponse.includes(\"files\")){",
							"        msg.description=\"Get all files successful\";",
							"        var count = json.data.length;",
							"        var uid = [];",
							"        var id = [];",
							"        for(var i = 0; i < count; i++){",
							"            uid[i] = json.data[i].files.uid;",
							"        }",
							"        // Set all uid and id file in environment.",
							"        pm.environment.set(\"uidAllFiles\",uid);",
							"        ",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Get all files not successful\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files?keyapi={{keyapi}}&fields=id,uid,filename,updated_date,client_id,ext&minID={{id_1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files"
					],
					"query": [
						{
							"key": "uids",
							"value": "1f20bb8f-ddb3-41e7-918e-cbd7e63f5231",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "{{DateUploadFile}}",
							"disabled": true
						},
						{
							"key": "modifiedLT",
							"value": "",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "",
							"disabled": true
						},
						{
							"key": "ref",
							"value": "",
							"disabled": true
						},
						{
							"key": "client_ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "obj_ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "fields",
							"value": "id,uid,filename,updated_date,client_id,ext"
						},
						{
							"key": "minID",
							"value": "{{id_1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update File - Update file without uid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "183fbf4f-a895-4998-b290-bdc9c77ec857",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Update File - Update file without uid',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Update File - Update file without uid',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg;",
							"if(statusResponse == 200){",
							"    var count = json.data.length;",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(count === 0){",
							"        msg.error = \"Cannot update file without uid\";",
							"        msg.description=dataResponse;",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"ext\": \".jpg\",\n        \"filename\": \"an ninh mang.jpg\",\n        \"local_path\": \"\",\n        \"source\":0,\n        \"url\":\"day la cai url\",\n        \"obj_id\": \"012345\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/update?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"update"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update File - Update file with null uid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "183fbf4f-a895-4998-b290-bdc9c77ec857",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Update File - Update file with null uid',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Update File - Update file with null uid',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg;",
							"if(statusResponse == 200){",
							"    var count = json.data.length;",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(dataResponse.includes(\"data_error\")){",
							"        msg.error=\"Cannot update file with null uid\";",
							"        msg.description=dataResponse;",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"ext\": \".jpg\",\n        \"uid\":\"\",\n        \"filename\": \"an ninh mang.jpg\",\n        \"local_path\": \"\",\n        \"source\":0,\n        \"url\":\"day la cai url\",\n        \"obj_id\": \"012345\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/update?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"update"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update File - Update file with invalid uid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a5e999b9-7948-4895-a07a-8eb2ca573207",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Update File - Update file with invalid uid',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Update File - Update file with invalid uid',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg;",
							"if(statusResponse == 200){",
							"    var count = json.data.length;",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(dataResponse.includes(\"data_error\")){",
							"        msg.error=\"Cannot update file with invalid uid\";",
							"        msg.description=dataResponse;",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"ext\": \".jpg\",\n        \"filename\": \"an ninh mang.jpg\",\n        \"local_path\": \"\",\n        \"source\":0,\n        \"uid\":\"123\",\n        \"url\":\"day la cai url\",\n        \"obj_id\": \"012345\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/update?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"update"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update File - Update file with valid uid",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f91aed97-9b39-49bc-bf8d-9659dc6332f3",
						"exec": [
							"",
							"pm.environment.set(\"update_filename\",\"Update file\");",
							"pm.environment.set(\"update_local_path\",\"Download\");",
							"pm.environment.set(\"update_url\",\"https://floware.com\");",
							"pm.environment.set(\"update_obj_type\",\"VTODO\");",
							"pm.environment.set(\"update_client_id\",\"f147a173-0933-44c4-96dd-2f4e2edb5fc7\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "56543cbe-ea0f-48d1-a848-d1565ebb8b85",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Update File - Update file with valid uid',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Update File - Update file with valid uid',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"",
							"var txt2 = pm.environment.get(\"update_filename\");",
							"var txt3 = pm.environment.get(\"update_local_path\");",
							"var txt4 = pm.environment.get(\"update_url\");",
							"var txt5 = pm.environment.get(\"update_obj_type\");",
							"var txt6 = pm.environment.get(\"update_client_id\");",
							"",
							"var msg;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(!dataResponse.includes(\"error\")){",
							"        var update_text = json.data[0].files.ext;",
							"        var update_filename = json.data[0].files.filename;",
							"        var update_local_path = json.data[0].files.local_path;",
							"        var update_url = json.data[0].files.url;",
							"        var update_obj_type = json.data[0].files.obj_type;",
							"        var update_client_id = json.data[0].files.client_id;",
							"        if(update_filename == txt2 && update_local_path == txt3 && update_url == txt4 && update_obj_type == txt5 && update_client_id == txt6){",
							"            msg.description= \"Update file successful\";",
							"            pm.environment.set(\"DateUploadFile\",json.data[0].files.updated_date)",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.error=\"Update file is not correctly\";",
							"            msg.description=dataResponse;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error=\"Response include data error\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n    \t\"uid\": \"{{UID}}\",\n        \"filename\": \"{{update_filename}}\",\n        \"local_path\": \"{{update_local_path}}\",\n        \"source\": 0,\n        \"url\": \"{{update_url}}\",\n        \"obj_id\": 1,\n        \"obj_type\": \"{{update_obj_type}}\",\n        \"client_id\": \"{{update_client_id}}\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/update?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"update"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update File - Update file with invalid value inputted",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f91aed97-9b39-49bc-bf8d-9659dc6332f3",
						"exec": [
							"",
							"pm.environment.set(\"update_filename\",\"Update file\");",
							"pm.environment.set(\"update_local_path\",\"Download\");",
							"pm.environment.set(\"update_url\",\"https://floware.com\");",
							"pm.environment.set(\"update_obj_type\",\"VTODO\");",
							"pm.environment.set(\"update_client_id\",\"f147a173-0933-44c4-96dd-2f4e2edb5fc7\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "56543cbe-ea0f-48d1-a848-d1565ebb8b85",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Update File - Update file with invalid value inputted',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Update File - Update file with invalid value inputted',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"",
							"var txt2 = pm.environment.get(\"update_filename\");",
							"var txt3 = pm.environment.get(\"update_local_path\");",
							"var txt4 = pm.environment.get(\"update_url\");",
							"var txt5 = pm.environment.get(\"update_obj_type\");",
							"var txt6 = pm.environment.get(\"update_client_id\");",
							"",
							"var msg;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(dataResponse.includes(\"error\")){",
							"        msg.error=\"Cannot update file with invalid value inputted\";",
							"        msg.description=dataResponse;",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error=\"Allow to update file with invalid value inputted\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n    \t\"uid\": \"{{UID}}\",\n        \"filename\": \"{{update_filename}}\",\n        \"local_path\": \"{{update_local_path}}\",\n        \"source\": 0,\n        \"url\": \"{{update_url}}\",\n        \"obj_id\": 1,\n        \"obj_type\": \"{{update_obj_type}}\",\n        \"client_id\": \"#12automationqcflo@gmail.automationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.comautomationqcflo@gmail.com\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/update?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"update"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List File - Get Change file updated",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e0b649d3-357f-41af-b625-249da38c8018",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - File - Get Change file updated',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - File - Get Change file updated',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(dataResponse.includes(\"files\")){",
							"        msg.description=\"Get change file updated successful\";",
							"        var count = json.data.length;",
							"        var uid = [];",
							"        var id = [];",
							"        for(var i = 0; i < count; i++){",
							"            uid[i] = json.data[i].files.uid;",
							"            id[i] = json.data[i].files.id;",
							"        }",
							"        pm.environment.set(\"idFile\",id);",
							"        ",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Get file updated not successful\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files?keyapi={{keyapi}}&modifiedGTE={{DateUploadFile}}&fields=id,uid,filename,updated_date,client_id,ext&client_ids={{update_client_id}}&uids={{UID}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files"
					],
					"query": [
						{
							"key": "ids",
							"value": "3003",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "1",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "obj_ids",
							"value": "aa5bcede-017b-45f1-a6d4-16f85ab76957",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "140793",
							"disabled": true
						},
						{
							"key": "ref",
							"value": "",
							"disabled": true
						},
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "modifiedGTE",
							"value": "{{DateUploadFile}}"
						},
						{
							"key": "fields",
							"value": "id,uid,filename,updated_date,client_id,ext"
						},
						{
							"key": "client_ids",
							"value": "{{update_client_id}}"
						},
						{
							"key": "uids",
							"value": "{{UID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Download File - Download a file",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e2c22d08-c8a7-4c49-8b96-c3e2fd9c19fd",
						"exec": [
							"",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Download File - Download a file',",
							"    endpoint: pm.environment.get('version')+\"/files/download\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Download File - Download a file',",
							"    endpoint: pm.environment.get('version')+\"/files/download\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(dataResponse.includes(\"Download failed, find not found\")){",
							"        var json = JSON.parse(responseBody);",
							"        msg = msgFailed;",
							"        msg.error = \"Download file failed\nBug: https://floware.atlassian.net/browse/FB-46\";",
							"        msg.description=json.description;",
							"    }else{",
							"        msg.description=\"Download file successful\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/download?keyapi={{keyapi}}&uid={{UID}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"download"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "uid",
							"value": "{{UID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete File - Delete file with invalid uid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "39e77338-104b-4d22-a2d6-7bcda26607db",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Delete File - Delete file with invalid uid',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Delete File - Delete file with invalid uid',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg;",
							"if(statusResponse == 200){",
							"    var count = json.data.length;",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(count === 0){",
							"        msg.error = \"Cannot delete file with invalid uid\";",
							"        msg.description=dataResponse;",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/0a123?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"0a123"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete File - Delete file with valid uid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b94b2259-8bc0-48fc-89c4-2637d31d3900",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Delete File - Delete file with valid uid',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Delete File - Delete file with valid uid',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg;",
							"if(statusResponse == 200){",
							"    var count = json.data.length;",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(count > 0){",
							"        msg.description = \"Delete file with valid uid successful.\\nData Response: \\n\"+dataResponse;",
							"        pm.environment.set(\"item_id\",json.data[0].id);",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/{{UID}}?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"{{UID}}"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List File - Get Change - 1 file deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e0b649d3-357f-41af-b625-249da38c8018",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Get List File - Get Change - 1 file deleted',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Get List File - Get Change - 1 file deleted',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var idFile = pm.environment.get(\"item_id\");",
							"var msg;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"",
							"    if(dataResponse.includes(\"data_del\") && json.data_del[0].deleted_item.item_id == idFile){",
							"        msg.description=\"Get a file deleted correctly\";",
							"        pm.environment.set(\"ModifiedGTE_1\",json.data_del[0].deleted_item.updated_date);",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Get a file deleted not correctly\";",
							"        msg.description = dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files?has_del=1&ids={{item_id}}&keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files"
					],
					"query": [
						{
							"key": "uids",
							"value": "067e2280-0e11-4c05-a395-da7b029b6284",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "10",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "id,uid,filename,updated_date,client_id,ext",
							"disabled": true
						},
						{
							"key": "client_ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "obj_ids",
							"value": "aa5bcede-017b-45f1-a6d4-16f85ab76957",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "",
							"disabled": true
						},
						{
							"key": "ref",
							"value": "",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "ids",
							"value": "{{item_id}}"
						},
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List File - Get all files - Pre-Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "608de623-81f1-4ae6-9527-bd6504b2f724",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - File - Get all files',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - File - Get all files',",
							"    endpoint: pm.environment.get('version')+\"/files/upload\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(dataResponse.includes(\"files\")){",
							"        msg.description=\"Get all files successful\";",
							"        var count = json.data.length;",
							"        var uid = [];",
							"        var id = [];",
							"        for(var i = 0; i < count; i++){",
							"            uid[i] = json.data[i].files.uid;",
							"            id[i] = json.data[i].files.id;",
							"        }",
							"        // Set all uid and id file in environment.",
							"        pm.environment.set(\"uidAllFiles\",uid);",
							"        pm.environment.set(\"idAllFiles\",id);",
							"        ",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Get all files not successful\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files?keyapi={{keyapi}}&fields=id,uid,filename,updated_date,client_id,ext&minID={{id_1}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files"
					],
					"query": [
						{
							"key": "uids",
							"value": "",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "",
							"disabled": true
						},
						{
							"key": "modifiedLT",
							"value": "",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "",
							"disabled": true
						},
						{
							"key": "ref",
							"value": "",
							"disabled": true
						},
						{
							"key": "client_ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "obj_ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "fields",
							"value": "id,uid,filename,updated_date,client_id,ext"
						},
						{
							"key": "minID",
							"value": "{{id_1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete File - Delete all files uploaded",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f22c05e2-ffcf-44ca-832e-4495952b84a3",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - Delete File - Delete all files uploaded',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - Delete File - Delete all files uploaded',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(!dataResponse.includes(\"data_error\")){",
							"        var count = json.data.length;",
							"        // convert Array to String",
							"        for(var i = 0; i < count; i++){",
							"            var uid = pm.environment.get(\"uidAllFiles\").toString();",
							"            var listUID = uid.split(\",\")[i];",
							"            var idAccount = json.data[i].id;",
							"            if(listUID === idAccount){",
							"                msg.description = \"Delete all files uploaded successful.\";",
							"            }else{",
							"                msg = msgFailed;",
							"                msg.error = \"Not found filed uploaded to delete\";",
							"                msg.description=\"Delete all files uploaded not successful\";",
							"                break;",
							"        }",
							"    }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Not found item to delete\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files/{{uidAllFiles}}?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files",
						"{{uidAllFiles}}"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List File - Get Change files deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e0b649d3-357f-41af-b625-249da38c8018",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-FILE',",
							"    title: 'Failed - File - Get Change files deleted',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-FILE',",
							"    title: 'Passed - File - Get Change files deleted',",
							"    endpoint: pm.environment.get('version')+\"/files\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var item_id = pm.environment.get(\"item_id\");",
							"var msg;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(dataResponse.includes(\"data_del\") && dataResponse.includes(item_id)){",
							"        msg.description=\"Get change file deleted successful\";",
							"        var count = parseInt(json.data_del.length);",
							"        pm.environment.set(\"minDelID\",json.data_del[count-2].deleted_item.id);",
							"        pm.environment.set(\"updated_date_deleted\",json.data_del[count-1].deleted_item.updated_date);",
							"        ",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Get file updated not successful\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files?keyapi={{keyapi}}&modifiedGTE={{ModifiedGTE_1}}&has_del=1&uids={{item_id}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files"
					],
					"query": [
						{
							"key": "ids",
							"value": "171664",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "1",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "id,uid,filename,updated_date,client_id,ext",
							"disabled": true
						},
						{
							"key": "client_ids",
							"value": "{{clientID}}",
							"disabled": true
						},
						{
							"key": "obj_ids",
							"value": "aa5bcede-017b-45f1-a6d4-16f85ab76957",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "171664",
							"disabled": true
						},
						{
							"key": "ref",
							"value": "",
							"disabled": true
						},
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "modifiedGTE",
							"value": "{{ModifiedGTE_1}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "uids",
							"value": "{{item_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List File - Clean up",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "608de623-81f1-4ae6-9527-bd6504b2f724",
						"exec": [
							"    pm.environment.unset(\"DateUploadFile\");",
							"    pm.environment.unset(\"UID\");",
							"    pm.environment.unset(\"clientID\");",
							"    pm.environment.unset(\"uidAllFiles\");",
							"    pm.environment.unset(\"update_client_id\");",
							"    pm.environment.unset(\"update_ext\");",
							"    pm.environment.unset(\"update_filename\");",
							"    pm.environment.unset(\"update_local_path\");",
							"    pm.environment.unset(\"update_obj_type\");",
							"    pm.environment.unset(\"update_url\");",
							"    pm.environment.unset(\"idFile\");",
							"    pm.environment.unset(\"item_id\");",
							"    pm.environment.unset(\"idAllFiles\");",
							"    pm.environment.unset(\"minDelID\");",
							"    pm.environment.unset(\"updated_date_deleted\");",
							"    pm.environment.unset(\"ModifiedGTE_1\");",
							"    pm.environment.unset(\"id_1\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/files?keyapi={{keyapi}}&fields=id,uid,filename,updated_date,client_id,ext",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"files"
					],
					"query": [
						{
							"key": "uids",
							"value": "",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "",
							"disabled": true
						},
						{
							"key": "modifiedLT",
							"value": "",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "",
							"disabled": true
						},
						{
							"key": "ref",
							"value": "",
							"disabled": true
						},
						{
							"key": "client_ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "obj_ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "fields",
							"value": "id,uid,filename,updated_date,client_id,ext"
						}
					]
				}
			},
			"response": []
		}
	]
}