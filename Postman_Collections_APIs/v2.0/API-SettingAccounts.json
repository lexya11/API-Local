{
	"info": {
		"_postman_id": "4de02e46-d0e2-4ecd-b138-d5738785e445",
		"name": "API - Setting Accounts Version 2.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "RUN ALL SCRIPTS API - SETTING ACCOUNTS",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e1b744bb-acc2-4081-aac1-a4f8c9a6cfbb",
						"exec": [
							"// Use the CryptoJS",
							"var hash = CryptoJS.MD5( CryptoJS.MD5(pm.environment.get(\"email\")+\":LeftCoastLogic:\"+pm.environment.get(\"password\"))+pm.environment.get(\"appreg\")).toString();",
							"",
							"console.log(\"sig: \" + hash);",
							"postman.setEnvironmentVariable(\"sig\", hash);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "64ab487d-2eda-44c8-b027-39943e652ed9",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var keyapi = CryptoJS.MD5( CryptoJS.MD5(pm.environment.get(\"email\") + pm.environment.get(\"appreg\")) + json.tokenapi).toString();",
							"",
							"postman.setEnvironmentVariable(\"token\", json.tokenapi);",
							"postman.setEnvironmentVariable(\"keyapi\", keyapi);",
							"",
							"var msgFailed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Test Version: '+pm.environment.get('version')+'\\nFailed - Pretest - Login',",
							"    endpoint: pm.environment.get('version')+\"/users/token.json\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Test Version: '+pm.environment.get('version')+'\\nPassed - Pretest - Login',",
							"    endpoint: pm.environment.get('version')+\"/users/token.json\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var body = json.description;",
							"    if(body==\"Flo\"){",
							"        msg.description=body;",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=body;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\"",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"{{email}}\",\n\t\"alias\": \"{{alias}}\",\n\t\"sig\": \"{{sig}}\"\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/users/token.json",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"users",
						"token.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Setting Account - Create Google account",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e42c0c6d-16fd-4f1d-af84-7864ea2c0d96",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Failed - Create Setting Account - Create Google account',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Passed - Create Setting Account - Create Google account',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    if(dataResponse.includes(\"set_accounts\")){",
							"        msg.description = \"Create Google account success\";",
							"        // create new data variable",
							"        pm.environment.set(\"idGoogle\",json.data[0].set_accounts.id);",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description = \"Create Google account failed\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"user_income\": \"test_api@gmail.com\",\n        \"server_income\": \"imap.gmail.com\",\n        \"port_income\": 993,\n        \"pass_income\":\"password\",\n        \"useSSL_income\": 1,\n        \"type_income\": 1,\n        \"server_smtp\": \"smtp.gmail.com\",\n        \"user_smtp\": \"test_api@gmail.com\",\n        \"port_smtp\": 465,\n        \"pass_smtp\":\"password\",\n        \"useSSL_smtp\": 1,\n        \"auth_type_smtp\": 256,\n    \t\"server_caldav\":  \"https://apidata.googleusercontent.com\",\n        \"server_path_caldav\": \"/caldav/v2/undefined/\",\n        \"port_caldav\": 443,\n        \"useSSL_caldav\": 1,\n        \"useKerberos_caldav\": 0,\n        \"auth_type\": 256,\n        \"account_type\": 1,\n        \"account_sync\": \"{\\\"Email\\\":0,\\\"Calendar\\\":0}\",\n        \"auth_key\":0,\n        \"full_name\": \"Dinh Nguyen\",\n        \"description\": \"Google - Test API\",\n        \"refresh_token\": \"1/Xhm5PtkTy9P9ogGTV-V6MXaDoeFVLrJA719O0AOC6D0\",\n        \"provider\": \"\",\n        \"icloud_user_id\": \"\",\n        \"user_caldav\": \"\",\n        \"email_address\": null,\n        \"token_expire\": 0,\n        \"activated_push\": 0,\n        \"signature\": \"\",\n        \"ref\": \"55582AD2-0968-4E93-B963-F6E1C842F741\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts.json?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts.json"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Setting Account - Create Yahoo account",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e42c0c6d-16fd-4f1d-af84-7864ea2c0d96",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Failed - Create Setting Account - Create Google account',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Passed - Create Setting Account - Create Yahoo account',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    if(dataResponse.includes(\"set_accounts\")){",
							"        msg.description = \"Create Yahoo account success\";",
							"        // create new data variable",
							"        pm.environment.set(\"idYahoo\",json.data[0].set_accounts.id);",
							"        pm.environment.set(\"user_income_Yahoo\",json.data[0].set_accounts.user_income);",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description = \"Create Yahoo account failed\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"user_income\": \"test_api@yahoo.com\",\n        \"server_income\": \"imap.mail.yahoo.com\",\n        \"port_income\": 993,\n        \"pass_income\":\"password\",\n        \"useSSL_income\": 1,\n        \"type_income\": 1,\n        \"server_smtp\": \"smtp.mail.yahoo.com\",\n        \"user_smtp\": \"test_api@yahoo.com\",\n        \"port_smtp\": 465,\n        \"pass_smtp\":\"password\",\n        \"useSSL_smtp\": 1,\n        \"auth_type_smtp\": 256,\n    \t\"server_caldav\":  \"https://caldav.calendar.yahoo.com\",\n        \"server_path_caldav\": \"\\/dav\\/test_api@yahoo.com\\/Calendar\\/\",\n        \"port_caldav\": 443,\n        \"useSSL_caldav\": 1,\n        \"useKerberos_caldav\": 0,\n        \"auth_type\": 256,\n        \"account_type\": 2,\n        \"account_sync\": \"{\\\"Email\\\":1,\\\"Calendar\\\":1}\",\n        \"auth_key\":0,\n        \"full_name\": \"Yahoo\",\n        \"description\": \"Yahoo - Test API\",\n        \"refresh_token\": \"1/Xhm5PtkTy9P9ogGTV-V6MXaDoeFVLrJA719O0AOC6D0\",\n        \"provider\": \"\",\n        \"icloud_user_id\": \"\",\n        \"user_caldav\": \"\",\n        \"email_address\": null,\n        \"token_expire\": 0,\n        \"activated_push\": 0,\n        \"signature\": \"\",\n        \"ref\": \"55582AD2-0968-4E93-B963-F6E1C842F741\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts.json?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts.json"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Setting Account - Null param user_income",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e42c0c6d-16fd-4f1d-af84-7864ea2c0d96",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Failed - Create Setting Account - Null param user_income',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Passed - Create Setting Account - Null param user_income',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    if(dataResponse.includes(\"null\")){",
							"        msg.description = json.data_error[0].description;",
							"        msg.error = \"Cannot Create Setting Accounts if input parameter user_icome as 'null'\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"user_income\": null,\n        \"server_income\": \"imap.gmail.com\",\n        \"port_income\": 993,\n        \"pass_income\":\"password\",\n        \"useSSL_income\": 1,\n        \"type_income\": 1,\n        \"server_smtp\": \"smtp.gmail.com\",\n        \"user_smtp\": \"test_api@gmail.com\",\n        \"port_smtp\": 465,\n        \"pass_smtp\":\"password\",\n        \"useSSL_smtp\": 1,\n        \"auth_type_smtp\": 256,\n    \t\"server_caldav\":  \"https://apidata.googleusercontent.com\",\n        \"server_path_caldav\": \"/caldav/v2/undefined/\",\n        \"port_caldav\": 443,\n        \"useSSL_caldav\": 1,\n        \"useKerberos_caldav\": 0,\n        \"auth_type\": 256,\n        \"account_type\": 1,\n        \"account_sync\": \"{\\\"Email\\\":0,\\\"Calendar\\\":0}\",\n        \"auth_key\":0,\n        \"full_name\": \"Dinh Nguyen\",\n        \"description\": \"Google - Test API\",\n        \"refresh_token\": \"1/Xhm5PtkTy9P9ogGTV-V6MXaDoeFVLrJA719O0AOC6D0\",\n        \"provider\": \"\",\n        \"icloud_user_id\": \"\",\n        \"user_caldav\": \"\",\n        \"email_address\": null,\n        \"token_expire\": 0,\n        \"activated_push\": 0,\n        \"signature\": \"\",\n        \"ref\": \"55582AD2-0968-4E93-B963-F6E1C842F741\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Setting Account - None param user_income",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e42c0c6d-16fd-4f1d-af84-7864ea2c0d96",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Failed - Create Setting Account - None param user_income',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Passed - Create Setting Account - None param user_income',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    if(dataResponse.includes(\"error\")){",
							"        msg.description = json.data_error[0].description;",
							"        msg.error = \"Cannot Create Setting Accounts if input not parameter user_income\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \n        \"server_income\": \"imap.gmail.com\",\n        \"port_income\": 993,\n        \"pass_income\":\"password\",\n        \"useSSL_income\": 1,\n        \"type_income\": 1,\n        \"server_smtp\": \"smtp.gmail.com\",\n        \"user_smtp\": \"test_api@gmail.com\",\n        \"port_smtp\": 465,\n        \"pass_smtp\":\"password\",\n        \"useSSL_smtp\": 1,\n        \"auth_type_smtp\": 256,\n    \t\"server_caldav\":  \"https://apidata.googleusercontent.com\",\n        \"server_path_caldav\": \"/caldav/v2/undefined/\",\n        \"port_caldav\": 443,\n        \"useSSL_caldav\": 1,\n        \"useKerberos_caldav\": 0,\n        \"auth_type\": 256,\n        \"account_type\": 1,\n        \"account_sync\": \"{\\\"Email\\\":0,\\\"Calendar\\\":0}\",\n        \"auth_key\":0,\n        \"full_name\": \"Dinh Nguyen\",\n        \"description\": \"Google - Test API\",\n        \"refresh_token\": \"1/Xhm5PtkTy9P9ogGTV-V6MXaDoeFVLrJA719O0AOC6D0\",\n        \"provider\": \"\",\n        \"icloud_user_id\": \"\",\n        \"user_caldav\": \"\",\n        \"email_address\": null,\n        \"token_expire\": 0,\n        \"activated_push\": 0,\n        \"signature\": \"\",\n        \"ref\": \"55582AD2-0968-4E93-B963-F6E1C842F741\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts.json?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts.json"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Setting Account - None param account_type",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e42c0c6d-16fd-4f1d-af84-7864ea2c0d96",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Failed - Create Setting Account - None param account_type',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Passed - Create Setting Account - None param account_type',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;    ",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    if(dataResponse.includes(\"\")){",
							"        msg.description = json.data_error[0].description;",
							"        msg.error = \"Cannot Create Setting Accounts if input not parameter account_type\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \n        \"server_income\": \"imap.gmail.com\",\n        \"port_income\": 993,\n        \"pass_income\":\"password\",\n        \"useSSL_income\": 1,\n        \"type_income\": 1,\n        \"server_smtp\": \"smtp.gmail.com\",\n        \"user_smtp\": \"test_api@gmail.com\",\n        \"port_smtp\": 465,\n        \"pass_smtp\":\"password\",\n        \"useSSL_smtp\": 1,\n        \"auth_type_smtp\": 256,\n    \t\"server_caldav\":  \"https://apidata.googleusercontent.com\",\n        \"server_path_caldav\": \"/caldav/v2/undefined/\",\n        \"port_caldav\": 443,\n        \"useSSL_caldav\": 1,\n        \"useKerberos_caldav\": 0,\n        \"auth_type\": 256,\n        \"account_type\": 1,\n        \"account_sync\": \"{\\\"Email\\\":0,\\\"Calendar\\\":0}\",\n        \"auth_key\":0,\n        \"full_name\": \"Dinh Nguyen\",\n        \"description\": \"Google - Test API\",\n        \"refresh_token\": \"1/Xhm5PtkTy9P9ogGTV-V6MXaDoeFVLrJA719O0AOC6D0\",\n        \"provider\": \"\",\n        \"icloud_user_id\": \"\",\n        \"user_caldav\": \"\",\n        \"email_address\": null,\n        \"token_expire\": 0,\n        \"activated_push\": 0,\n        \"signature\": \"\",\n        \"ref\": \"55582AD2-0968-4E93-B963-F6E1C842F741\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts.json?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts.json"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Setting Account - Input param user_income as type int",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e42c0c6d-16fd-4f1d-af84-7864ea2c0d96",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Failed - Create Setting Account - Input param user_income as type int',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Passed - Create Setting Account - Input param user_income as type int',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    if(!dataResponse.includes(\"error\")){",
							"        msg.description = \"Create Setting Account, input param user_income as type int successful\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"user_income\": 123,\n        \"server_income\": \"imap.gmail.com\",\n        \"port_income\": 993,\n        \"pass_income\":\"password\",\n        \"useSSL_income\": 1,\n        \"type_income\": 1,\n        \"server_smtp\": \"smtp.gmail.com\",\n        \"user_smtp\": \"test_api@gmail.com\",\n        \"port_smtp\": 465,\n        \"pass_smtp\":\"password\",\n        \"useSSL_smtp\": 1,\n        \"auth_type_smtp\": 256,\n    \t\"server_caldav\":  \"https://apidata.googleusercontent.com\",\n        \"server_path_caldav\": \"/caldav/v2/undefined/\",\n        \"port_caldav\": 443,\n        \"useSSL_caldav\": 1,\n        \"useKerberos_caldav\": 0,\n        \"auth_type\": 256,\n        \"account_type\": 1,\n        \"account_sync\": \"{\\\"Email\\\":0,\\\"Calendar\\\":0}\",\n        \"auth_key\":0,\n        \"full_name\": \"Dinh Nguyen\",\n        \"description\": \"Google - Test API\",\n        \"refresh_token\": \"1/Xhm5PtkTy9P9ogGTV-V6MXaDoeFVLrJA719O0AOC6D0\",\n        \"provider\": \"\",\n        \"icloud_user_id\": \"\",\n        \"user_caldav\": \"\",\n        \"email_address\": null,\n        \"token_expire\": 0,\n        \"activated_push\": 0,\n        \"signature\": \"\",\n        \"ref\": \"55582AD2-0968-4E93-B963-F6E1C842F741\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts.json",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Setting Account - Input param user_income without domain",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e42c0c6d-16fd-4f1d-af84-7864ea2c0d96",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Failed - Create Setting Account - Input param user_income without domain',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Passed - Create Setting Account - Input param user_income without domain',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    if(!dataResponse.includes(\"error\")){",
							"        msg.description = \"Create Setting Account, input param user_income without domain successful\";",
							"        ",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"user_income\": \"api_test\",\n        \"server_income\": \"imap.gmail.com\",\n        \"port_income\": 993,\n        \"pass_income\":\"password\",\n        \"useSSL_income\": 1,\n        \"type_income\": 1,\n        \"server_smtp\": \"smtp.gmail.com\",\n        \"user_smtp\": \"test_api@gmail.com\",\n        \"port_smtp\": \"465\",\n        \"pass_smtp\":\"password\",\n        \"useSSL_smtp\": 1,\n        \"auth_type_smtp\": 256,\n    \t\"server_caldav\":  \"https://apidata.googleusercontent.com\",\n        \"server_path_caldav\": \"/caldav/v2/undefined/\",\n        \"port_caldav\": 443,\n        \"useSSL_caldav\": 1,\n        \"useKerberos_caldav\": 0,\n        \"auth_type\": 256,\n        \"account_type\": 1,\n        \"account_sync\": \"{\\\"Email\\\":0,\\\"Calendar\\\":0}\",\n        \"auth_key\":0,\n        \"full_name\": \"Dinh Nguyen\",\n        \"description\": \"Google - Test API\",\n        \"refresh_token\": \"1/Xhm5PtkTy9P9ogGTV-V6MXaDoeFVLrJA719O0AOC6D0\",\n        \"provider\": \"\",\n        \"icloud_user_id\": \"\",\n        \"user_caldav\": \"\",\n        \"email_address\": null,\n        \"token_expire\": 0,\n        \"activated_push\": 0,\n        \"signature\": \"\",\n        \"ref\": \"55582AD2-0968-4E93-B963-F6E1C842F741\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts.json",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Setting Account - Input param user_income invalid value",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e42c0c6d-16fd-4f1d-af84-7864ea2c0d96",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Failed - Create Setting Account - Input param user_income invalid value',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Passed - Create Setting Account - Input param user_income invalid value',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    if(dataResponse.includes(\"error\")){",
							"        msg.description = json.data_error[0].description;",
							"        msg.error = \"Input param user_income invalid value\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"user_income\": \"test_api@gmail.comtest_api@gmail.comtest_api@gmail.comtest_api@gmail.comtest_api@gmail.comtest_api@gmail.comtest_api@gmail.comtest_api@gmail.comtest_api@gmail.comtest_api@gmail.comtest_api@gmail.comtest_api@gmail.comtest_api@gmail.comtest_api@gmail.comtest_api@gmail.comtest_api@gmail.com\",\n        \"port_income\": 993,\n        \"pass_income\":\"password\",\n        \"useSSL_income\": 1,\n        \"type_income\": 1,\n        \"server_smtp\": \"smtp.gmail.com\",\n        \"user_smtp\": \"test_api@gmail.com\",\n        \"port_smtp\": \"465\",\n        \"pass_smtp\":\"password\",\n        \"useSSL_smtp\": 1,\n        \"auth_type_smtp\": 256,\n    \t\"server_caldav\":  \"https://apidata.googleusercontent.com\",\n        \"server_path_caldav\": \"/caldav/v2/undefined/\",\n        \"port_caldav\": 443,\n        \"useSSL_caldav\": 1,\n        \"useKerberos_caldav\": 0,\n        \"auth_type\": 256,\n        \"account_type\": 1,\n        \"account_sync\": \"{\\\"Email\\\":0,\\\"Calendar\\\":0}\",\n        \"auth_key\":0,\n        \"full_name\": \"Dinh Nguyen\",\n        \"description\": \"Google - Test API\",\n        \"refresh_token\": \"1/Xhm5PtkTy9P9ogGTV-V6MXaDoeFVLrJA719O0AOC6D0\",\n        \"provider\": \"\",\n        \"icloud_user_id\": \"\",\n        \"user_caldav\": \"\",\n        \"email_address\": null,\n        \"token_expire\": 0,\n        \"activated_push\": 0,\n        \"signature\": \"\",\n        \"ref\": \"55582AD2-0968-4E93-B963-F6E1C842F741\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts.json",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Setting Account - Input body same account created",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e42c0c6d-16fd-4f1d-af84-7864ea2c0d96",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Failed - Create Setting Account - Input body same account created',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Passed - Create Setting Account - Input body same account created',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    if(dataResponse.includes(\"error\")){",
							"        msg.description = json.data_error[0].description;",
							"        msg.error = \"Input body same item existed\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n    \t\"user_income\":\"{{user_income_Yahoo}}\"\n        \n    },\n    {\n    \t\"user_income\":\"{{user_income_Yahoo}}\"\n        \n    }\n    \n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Setting Account - Not input server imap and smtp",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e42c0c6d-16fd-4f1d-af84-7864ea2c0d96",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Failed - Create Setting Account - Not input server imap and smtp',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-SettingAccounts',",
							"    title: 'Passed - Create Setting Account - Not input server imap and smtp',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status code response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    if(!dataResponse.includes(\"error\")){",
							"        msg.description = \"Create Setting Account, not input server imap and smtp successful\";",
							"        ",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ecb352fb-f477-42da-945c-00063a5b8bf8",
						"exec": [
							"var random = Math.random( );",
							"pm.environment.set(\"user_income_random\",\"api_test\"+random+\"@yahoo.com\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"useSSL_income\":1,\n        \"account_type\":2,\n        \"server_path_caldav\":\"\\/dav\\/{{user_income_random}}\\/Calendar\\/\",\n        \"auth_type_smtp\":0,\n        \"user_caldav\":\"{{user_income_random}}\",\n        \"server_caldav\":\"https://caldav.calendar.yahoo.com\",\n        \"user_income\":\"{{user_income_random}}\",\n        \"auth_key\":\"\",\n        \"user_smtp\":\"{{user_income_random}}\",\n        \"useSSL_smtp\":1,\n        \"port_caldav\":\"\",\n        \"auth_type\":0,\n        \"useKerberos_caldav\":0,\n        \"full_name\":\"\",\n        \"port_smtp\":\"465\",\n        \"port_income\":\"993\",\n        \"useSSL_caldav\":0,\n        \"ref\":\"55582AD2-0968-4E93-B963-F6E1C842F741\",\n        \"email_address\":\"thi.tran22@yahoo.com\",\n        \"description\":\"Yahoo\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts.json",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Setting Account - Create 50 accounts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e42c0c6d-16fd-4f1d-af84-7864ea2c0d96",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Create Setting Account - Create Setting 50 accounts',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Create Setting Account - Create Setting 50 accounts',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"",
							"var msg ;",
							"var array =[];",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    var count = json.data.length;",
							"    if(count === 50){",
							"        for(var i=0; i<count; i++){",
							"             array[i] = json.data[i].set_accounts.id;",
							"        }",
							"        pm.environment.set(\"50idAccounts[]\",array);",
							"        msg = msgPassed;",
							"        msg.status = statusResponse;",
							"        msg.description=\"Create Settings 50 accounts successful\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"Create Settings 50 accounts failed\";",
							"        msg.error = \"Error\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ecb352fb-f477-42da-945c-00063a5b8bf8",
						"exec": [
							"var numberRandom = Math.floor(Math.random()*10000000);",
							"for(var i=0;i<50;i++){",
							"    pm.environment.set(\"user_income_random\"+i,\"api_test\"+numberRandom+i+\"@yahoo.com\");",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n    \t\"user_income\":\"{{user_income_random0}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random1}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random2}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random3}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random4}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random5}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random6}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random7}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random8}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random9}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random10}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random11}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random12}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random13}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random14}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random15}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random16}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random17}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random18}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random19}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random20}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random21}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random22}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random23}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random24}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random25}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random26}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random27}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random28}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random29}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random30}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random31}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random32}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random33}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random34}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random35}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random36}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random37}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random38}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random39}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random40}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random41}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random42}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random43}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random44}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random45}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random46}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random47}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random48}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    },\n    {\n    \t\"user_income\":\"{{user_income_random49}}\",\n        \"account_type\":2,\n        \"description\":\"Yahoo\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Setting Accounts - Get all - list setting accounts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8f4b862-46a8-4eb1-b0c4-fec667aafed3",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Get List Setting Accounts - Get all list setting accounts',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Get List Setting Accounts - Get all list setting accounts',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"",
							"var msg ;",
							"",
							"if(statusResponse == 200){",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    if(!dataResponse.includes(\"error\")){",
							"        msg.description=\"Get List Setting Accounts successful\";",
							"        var count = json.data.length;",
							"        var id = [];",
							"        for(var i = 0; i < count; i++){",
							"            id[i] = json.data[i].set_accounts.id;",
							"        }",
							"        // Set all in environment.",
							"        pm.environment.set(\"allIDAccounts[]\",id);",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Get List Setting Accounts not successful\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts?fields=account_sync,id,created_date,updated_date,email_address,user_income",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					],
					"query": [
						{
							"key": "modifiedGTE",
							"value": "",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "account_sync,id,created_date,updated_date,email_address,user_income"
						},
						{
							"key": "has_del",
							"value": "",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Setting Accounts - Get 20 setting accounts list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8f4b862-46a8-4eb1-b0c4-fec667aafed3",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Get List Setting Accounts - Get 20 setting accounts list',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Get List Setting Accounts - Get 20 setting accounts list',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"",
							"var msg ;",
							"",
							"",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count>0){",
							"        if(count ==20){",
							"            msg.description = \"Get 20 setting accounts list successful\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.error = \"Description response failed\";",
							"            msg.description=\"Get 20 setting accounts list not successful\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.status = statusResponse;",
							"        msg.error = \"Return null Data\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts?pItem=20",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					],
					"query": [
						{
							"key": "modifiedGTE",
							"value": "",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "account_sync,id,created_date,updated_date,email_address,user_income",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "20"
						},
						{
							"key": "minDelID",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Setting Accounts - Get a specific id (Google account)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8f4b862-46a8-4eb1-b0c4-fec667aafed3",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Get List Setting Accounts - Get a specific id (Google account)',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Get List Setting Accounts - Get a specific id (Google account)',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    var count = json.data.length;",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(count>0){",
							"        var idGoogle = pm.environment.get(\"idGoogle\");",
							"        if(dataResponse.includes(idGoogle)){",
							"            msg.description = \"Get a specific id: \"+idGoogle+\" (Google account) successful\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.error = \"Description response failed\";",
							"            msg.description=\"Get a specific id (Google account) incorrectly\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.status = statusResponse;",
							"        msg.error = \"Return null Data\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts?ids={{idGoogle}}&fields=account_sync,id,created_date,updated_date,email_address,user_income",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					],
					"query": [
						{
							"key": "modifiedGTE",
							"value": "",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "{{idGoogle}}"
						},
						{
							"key": "fields",
							"value": "account_sync,id,created_date,updated_date,email_address,user_income"
						},
						{
							"key": "has_del",
							"value": "",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "3770",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Setting Accounts - Get list setting 10 accounts with minID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8f4b862-46a8-4eb1-b0c4-fec667aafed3",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Get List Setting Accounts - Get list setting accounts - minID',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Get List Setting Accounts - Get list setting accounts - minID',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"var array10=[];",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    // Get minID, Select id of Google account",
							"    var minID = pm.environment.get(\"idGoogle\");",
							"    if(count>0){",
							"        for(var i = 0; i < count; i++){",
							"        array10[i] = json.data[i].set_accounts.id;",
							"        var listIDAccount = json.data[i].set_accounts.id;",
							"        }",
							"        // Set 10 array id accounts to Environment",
							"        pm.environment.set(\"10idAccounts[]\",array10);",
							"        // Compare with frist id",
							"            if(listIDAccount > minID && count == 10){",
							"                msg.description = \"Get List 10 Setting Accounts has id than minID: \"+minID+\" successfull\";",
							"            }else{",
							"                msg = msgFailed;",
							"                msg.error = \"Description response failed\";",
							"                msg.description=\"Get List 10 Setting Accounts has id than minID: \"+minID+\" not successfull\";",
							"            }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.status = statusResponse;",
							"        msg.error = \"Return null Data\";",
							"        msg.description=dataResponse;",
							"    }",
							"    ",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts?minID={{idGoogle}}&pItem=10",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					],
					"query": [
						{
							"key": "modifiedGTE",
							"value": "",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "account_sync,id,created_date,updated_date,email_address,user_income",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "{{idGoogle}}"
						},
						{
							"key": "pItem",
							"value": "10"
						},
						{
							"key": "minDelID",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Setting Account - Update invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "92b0c938-9acc-47d8-8ed5-9add4ac94728",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Update Setting Account - Update invalid id',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Update Setting Account - Update invalid id',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(dataResponse.includes(\"data_error\")){",
							"        msg.description = dataResponse;",
							"        msg.error = \"Cannot update with invalid id\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.status = 200;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\":12743,\n\t\"user_income\":\"tu_qa1@abc.com\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n\t\"server_income\": \"mail.abc.com\",\n    \"port_income\": \"456\",\n    \"useSSL_income\": \"mail.abc.com\",\n    \"server_smtp\": \"mail.abc.com\",\n    \"user_smtp\": \"tu_qa1@abc.com\",\n    \"port_smtp\": \"123\",\n    \"server_caldav\": \"https://apidata.googleusercontent.com\",\n    \"server_path_caldav\": \"/caldav/v2/path/\",\n    \"full_name\": \"TEST API\",\n    \"description\": \"Description API\",\n    \"refresh_token\": \"\",\n    \"provider\": \"\",\n    \"icloud_user_id\": \"\",\n    \"user_caldav\": \"\",\n    \"email_address\": \"tu_qa1@abc.com\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts/update",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Setting Account - Update null id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "92b0c938-9acc-47d8-8ed5-9add4ac94728",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Update Setting Account - Update Null id',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Update Setting Account - Update Null id',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(dataResponse.includes(\"data_error\")){",
							"        msg.description = dataResponse;",
							"        msg.error = \"Cannot update with Null id\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\":\"\",\n\t\"user_income\":\"tu_qa1@abc.com\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n\t\"server_income\": \"mail.abc.com\",\n    \"port_income\": \"456\",\n    \"useSSL_income\": \"mail.abc.com\",\n    \"server_smtp\": \"mail.abc.com\",\n    \"user_smtp\": \"tu_qa1@abc.com\",\n    \"port_smtp\": \"123\",\n    \"server_caldav\": \"https://apidata.googleusercontent.com\",\n    \"server_path_caldav\": \"/caldav/v2/path/\",\n    \"full_name\": \"TEST API\",\n    \"description\": \"Description API\",\n    \"refresh_token\": \"\",\n    \"provider\": \"\",\n    \"icloud_user_id\": \"\",\n    \"user_caldav\": \"\",\n    \"email_address\": \"tu_qa1@abc.com\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts/update",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Setting Account - Update with none id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "92b0c938-9acc-47d8-8ed5-9add4ac94728",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Update Setting Account - Update with none id',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Update Setting Account - Update with none id',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count === 0){",
							"        msg.description = dataResponse;",
							"        msg.error = \"Cannot update with none id\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n[\n    {\n        \"user_income\":\"cong@gmail.com\",\n        \"pass_income\":\"123456\",\n        \"account_sync\":\"abc\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts/update",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Setting Account - Update null param user_income",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "92b0c938-9acc-47d8-8ed5-9add4ac94728",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Update Setting Account - Update null param user_income',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Update Setting Account - Update null param user_income',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(dataResponse.includes(\"data_error\")){",
							"        msg.description = dataResponse;",
							"        msg.error = \"Cannot update null param user_income\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\":\"{{idGoogle}}\",\n\t\"user_income\": \"\",\n        \"server_income\": \"imap.gmail.com\",\n        \"port_income\": 993,\n        \"pass_income\":\"password\",\n        \"useSSL_income\": 1,\n        \"type_income\": 1,\n        \"server_smtp\": \"smtp.gmail.com\",\n        \"user_smtp\": \"test_api@gmail.com\",\n        \"port_smtp\": 465,\n        \"pass_smtp\":\"password\",\n        \"useSSL_smtp\": 1,\n        \"auth_type_smtp\": 256,\n    \t\"server_caldav\":  \"https://apidata.googleusercontent.com\",\n        \"server_path_caldav\": \"/caldav/v2/\",\n        \"port_caldav\": 443,\n        \"useSSL_caldav\": 1,\n        \"useKerberos_caldav\": 0,\n        \"auth_type\": 256,\n        \"account_type\": 1,\n        \"account_sync\": \"{\\\"Email\\\":0,\\\"Calendar\\\":0}\",\n        \"auth_key\":0,\n        \"full_name\": \"API - SETTING ACCOUNTS\",\n        \"description\": \"Google - Test API\",\n        \"refresh_token\": \"1/Xhm5PtkTy9P9ogGTV-V6MXaDoeFVLrJA719O0AOC6D0\",\n        \"provider\": \"\",\n        \"icloud_user_id\": \"\",\n        \"user_caldav\": \"\",\n        \"email_address\": null,\n        \"token_expire\": 0,\n        \"activated_push\": 0,\n        \"signature\": \"\",\n        \"ref\": \"55582AD2-0968-4E93-B963-F6E1C842F741\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts/update",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Setting Account - Update input param user_income as type int",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "92b0c938-9acc-47d8-8ed5-9add4ac94728",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Update Setting Account - Update input param user_income as type int',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Update Setting Account - Update input param user_income as type int',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(dataResponse.includes(\"data_error\")){",
							"        msg.description = \"Cannot Update input param user_income as type int\";",
							"        msg.error = \"Error\";",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\":\"{{idGoogle}}\",\n\t\"user_income\": 123,\n        \"server_income\": \"imap.gmail.com\",\n        \"port_income\": 993,\n        \"pass_income\":\"password\",\n        \"useSSL_income\": 1,\n        \"type_income\": 1,\n        \"server_smtp\": \"smtp.gmail.com\",\n        \"user_smtp\": \"test_api@gmail.com\",\n        \"port_smtp\": 465,\n        \"pass_smtp\":\"password\",\n        \"useSSL_smtp\": 1,\n        \"auth_type_smtp\": 256,\n    \t\"server_caldav\":  \"https://apidata.googleusercontent.com\",\n        \"server_path_caldav\": \"/caldav/v2/\",\n        \"port_caldav\": 443,\n        \"useSSL_caldav\": 1,\n        \"useKerberos_caldav\": 0,\n        \"auth_type\": 256,\n        \"account_type\": 1,\n        \"account_sync\": \"{\\\"Email\\\":0,\\\"Calendar\\\":0}\",\n        \"auth_key\":0,\n        \"full_name\": \"API - SETTING ACCOUNTS\",\n        \"description\": \"Google - Test API\",\n        \"refresh_token\": \"1/Xhm5PtkTy9P9ogGTV-V6MXaDoeFVLrJA719O0AOC6D0\",\n        \"provider\": \"\",\n        \"icloud_user_id\": \"\",\n        \"user_caldav\": \"\",\n        \"email_address\": null,\n        \"token_expire\": 0,\n        \"activated_push\": 0,\n        \"signature\": \"\",\n        \"ref\": \"55582AD2-0968-4E93-B963-F6E1C842F741\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts/update",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Setting Account - Update a specific id (Google account)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "92b0c938-9acc-47d8-8ed5-9add4ac94728",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Update Setting Account - Update a specific id (Google account)',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Update Setting Account - Update a specific id (Google account)',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var idGoogle = pm.environment.get(\"idGoogle\");",
							"    if(dataResponse.includes(idGoogle)){",
							"        msg.description = \"Update a specific id: \"+idGoogle+\" (Google account) successful\";",
							"        pm.environment.set(\"updated_date\",json.data[0].set_accounts.updated_date);",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=\"Update a specific id (Google account) incorrectly not successful\";",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\":\"{{idGoogle}}\",\n\t\"user_income\": \"test_api@gmail.com\",\n        \"server_income\": \"imap.gmail.com\",\n        \"port_income\": 993,\n        \"pass_income\":\"password\",\n        \"useSSL_income\": 1,\n        \"type_income\": 1,\n        \"server_smtp\": \"smtp.gmail.com\",\n        \"user_smtp\": \"test_api@gmail.com\",\n        \"port_smtp\": 465,\n        \"pass_smtp\":\"password\",\n        \"useSSL_smtp\": 1,\n        \"auth_type_smtp\": 256,\n    \t\"server_caldav\":  \"https://apidata.googleusercontent.com\",\n        \"server_path_caldav\": \"/caldav/v2/\",\n        \"port_caldav\": 443,\n        \"useSSL_caldav\": 1,\n        \"useKerberos_caldav\": 0,\n        \"auth_type\": 256,\n        \"account_type\": 1,\n        \"account_sync\": \"{\\\"Email\\\":0,\\\"Calendar\\\":0}\",\n        \"auth_key\":0,\n        \"full_name\": \"API - SETTING ACCOUNTS\",\n        \"description\": \"Google - Test API\",\n        \"refresh_token\": \"1/Xhm5PtkTy9P9ogGTV-V6MXaDoeFVLrJA719O0AOC6D0\",\n        \"provider\": \"\",\n        \"icloud_user_id\": \"\",\n        \"user_caldav\": \"\",\n        \"email_address\": null,\n        \"token_expire\": 0,\n        \"activated_push\": 0,\n        \"signature\": \"google account\",\n        \"ref\": \"55582AD2-0968-4E93-B963-F6E1C842F741\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts/update",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Setting Accounts - Get change - Google account updated with modifiedGTE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8f4b862-46a8-4eb1-b0c4-fec667aafed3",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Get List Setting Accounts - Get change - Google account updated with modifiedGTE',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Get List Setting Accounts - Get change - Google account updated with modifiedGTE',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"",
							"if(statusResponse == 200){    ",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count>0){",
							"        // Get updated date from Environment",
							"        var getModifiedLGT = pm.environment.get(\"updated_date\");",
							"        // Get frist updated date in data response to compare",
							"        var idAccounts = json.data[0].set_accounts.updated_date;",
							"            if(idAccounts => getModifiedLGT && count == 1){",
							"                msg.description = \"Get change - Google account updated with modifiedGTE: \"+getModifiedLGT+\" successful\";",
							"            }else{",
							"                msg = msgFailed;",
							"                msg.error = \"Description response failed\";",
							"                msg.description=\"Get change - Google account updated with modifiedGTE: \"+getModifiedLGT+\" not successful\";",
							"            }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.status = statusResponse;",
							"        msg.error = \"Return null Data\";",
							"        msg.description=dataResponse;",
							"    }",
							"    ",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts?modifiedGTE={{updated_date}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					],
					"query": [
						{
							"key": "modifiedGTE",
							"value": "{{updated_date}}"
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "account_sync,id,created_date,updated_date,email_address,user_income",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Setting Account - Update setting 50 accounts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "92b0c938-9acc-47d8-8ed5-9add4ac94728",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Update Setting Account - Update setting 50 accounts',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Update Setting Account - Update setting 50 accounts',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts/update\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count === 50){",
							"        for(var i = 0; i < count; i++){",
							"            var accountID = parseInt(pm.environment.get(\"Accountid-\"+i)); // convernt string to int",
							"            var idAccount = json.data[i].set_accounts.id; // int",
							"            if(accountID === idAccount){",
							"                msg.description = \"Update setting 50 accounts successful\";",
							"                msg.error = \"No Error\";",
							"                pm.environment.set(\"updated_date_0\",json.data[0].set_accounts.updated_date);",
							"            }else{",
							"                msg = msgFailed;",
							"                msg.error = \"Description response failed\";",
							"                msg.description=\"Update setting 50 accounts not successful\";",
							"                break;",
							"            }",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=\"Update setting 50 accounts not successful\";",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "81340e04-ea3c-486b-9ef3-aad0cb6dccd8",
						"exec": [
							"var Array_50idAccounts = pm.environment.get(\"50idAccounts[]\");",
							"console.log(Array_50idAccounts);",
							"var count = Array_50idAccounts.length;",
							"// convert Array to String",
							"var idAccounts = Array_50idAccounts.toString();",
							"for(var i = 0; i<count; i++){",
							"    var listIDAccount = idAccounts.split(\",\")[i];",
							"    pm.environment.set(\"Accountid-\"+i,listIDAccount);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n\t{\n\t\"id\":\"{{Accountid-0}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-0}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-1}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-1}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-2}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-2}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-3}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-3}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-4}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-4}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-5}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-5}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-6}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-6}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-7}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-7}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-8}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-8}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-9}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-9}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-10}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-10}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-11}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-11}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-12}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-12}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-13}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-13}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-14}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-14}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-15}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-15}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-16}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-16}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-17}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-17}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-18}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-18}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-19}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-19}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-20}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-20}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-21}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-21}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-22}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-22}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-23}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-23}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-24}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-24}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-25}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-25}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-26}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-26}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-27}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-27}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-28}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-28}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-29}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-29}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-30}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-30}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-31}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-31}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-32}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-32}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-33}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-33}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-34}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-34}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-35}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-35}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-36}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-36}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-37}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-37}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-38}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-38}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-39}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-39}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-40}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-40}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-41}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-41}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-42}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-42}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-43}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-43}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-44}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-44}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-45}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-45}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-46}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-46}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-47}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-47}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-48}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-48}}\"\n\t},\n\t{\n\t\"id\":\"{{Accountid-49}}\",\n\t\"pass_income\":\"string hash RSA\",\n\t\"account_sync\":\"{\\\"Email Updated\\\":1,\\\"Calendar\\\":1}\",\n\t\"account_type\": 1,\n    \"port_income\": \"456\",\n    \"port_smtp\": \"123\",\n    \"full_name\": \"TEST API {{Accountid-49}}\"\n\t}\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts/update",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Setting Accounts - Get change - list setting 50 accounts updated with modifiedGTE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8f4b862-46a8-4eb1-b0c4-fec667aafed3",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Get List Setting Accounts - Get change - list setting 50 accounts updated with modifiedGTE',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Get List Setting Accounts - Get change - list setting 50 accounts updated with modifiedGTE',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count>0){",
							"        // Get updated date from Environment",
							"        var getModifiedLGT = pm.environment.get(\"updated_date_0\");",
							"        // Get frist updated date in data response to compare",
							"        var idAccounts = json.data[0].set_accounts.updated_date;",
							"            if(idAccounts => getModifiedLGT && count === 50){",
							"                msg.description = \"Get change - list setting 50 accounts updated with modifiedGTE: \"+getModifiedLGT+\" successful\";",
							"                pm.environment.set(\"minID[29]\",json.data[29].set_accounts.id);",
							"            }else{",
							"                msg = msgFailed;",
							"                msg.error = \"Description response failed\";",
							"                msg.description=\"Get change - list setting 50 accounts updated with modifiedGTE: \"+getModifiedLGT+\" not successful\";",
							"            }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Return null Data\";",
							"        msg.description=dataResponse;",
							"    }",
							"    ",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts?modifiedGTE={{updated_date_0}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					],
					"query": [
						{
							"key": "modifiedGTE",
							"value": "{{updated_date_0}}"
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "account_sync,id,created_date,updated_date,email_address,user_income",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "{{idGoogle}}",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "10",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Setting Accounts - Get change - list setting 10 accounts with modifiedGTE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8f4b862-46a8-4eb1-b0c4-fec667aafed3",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Get List Setting Accounts - Get change - list setting 10 accounts with modifiedGTE',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Get List Setting Accounts - Get change - list setting 10 accounts with modifiedGTE',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count>0){",
							"        // Get updated date from Environment",
							"        var getModifiedLGT = pm.environment.get(\"updated_date_0\");",
							"        var minID29 = pm.environment.get(\"minID[29]\");",
							"        // Get frist updated date in data response to compare",
							"        var idAccounts = json.data[0].set_accounts.updated_date;",
							"            if(idAccounts => getModifiedLGT && count == 10){",
							"                msg.description = \"Get change - list setting 10 accounts > id \"+minID29+\" with modifiedGTE: \"+getModifiedLGT+\" successful\";",
							"            }else{",
							"                msg = msgFailed;",
							"                msg.error = \"Description response failed\";",
							"                msg.description=\"Get change - list setting 10 accounts > id \"+minID29+\" with modifiedGTE: \"+getModifiedLGT+\" not successful\";",
							"            }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Return null Data\";",
							"        msg.description=dataResponse;",
							"    }",
							"    ",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts?modifiedGTE={{updated_date_0}}&fields=account_sync,id,created_date,updated_date,email_address,user_income&minID={{minID[29]}}&pItem=10",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					],
					"query": [
						{
							"key": "modifiedGTE",
							"value": "{{updated_date_0}}"
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "account_sync,id,created_date,updated_date,email_address,user_income"
						},
						{
							"key": "has_del",
							"value": "",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "{{minID[29]}}"
						},
						{
							"key": "pItem",
							"value": "10"
						},
						{
							"key": "minDelID",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Setting Account - Delete Google Account setting",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea5bc5ba-47db-4c9b-bd16-7a6cbdf44ed2",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Delete Setting Account - Delete Google Account setting',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Delete Setting Account - Delete Google Account setting',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"",
							"var msg ;",
							"// Get id Google from environment",
							"var idGoogle = pm.environment.get(\"idGoogle\");",
							"",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count>0){",
							"        // Get id items đeleted",
							"        var idAccount = parseInt(json.data[0].id);",
							"        if(idAccount === idGoogle){",
							"            msg.description = \"Delete Google Account setting successful\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.error = \"Description response failed\";",
							"            msg.description=\"Delete Google Account setting not successful\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Return null Data\";",
							"        msg.description=dataResponse;",
							"    }",
							"    ",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts/{{idGoogle}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts",
						"{{idGoogle}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Setting Account - Delete Yahoo Account setting",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9ad954ef-f316-422f-b59b-b75393b1984f",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Delete Setting Account - Delete Yahoo Account setting',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Delete Setting Account - Delete Yahoo Account setting',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"// Get id Yahoo from environment",
							"var idYahoo = pm.environment.get(\"idYahoo\");",
							"",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count>0){",
							"        // Get id items đeleted",
							"        var idAccount = parseInt(json.data[0].id);",
							"        if(idAccount === idYahoo){",
							"            msg.description = \"Delete Yahoo Account setting successful.\";",
							"            msg.error = \"No Error\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.error = \"Description response failed\";",
							"            msg.description=\"Delete Yahoo Account setting not successful\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Return null Data\";",
							"        msg.description=dataResponse;",
							"    }",
							"    ",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts/{{idYahoo}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts",
						"{{idYahoo}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Setting Accounts - Get change - 2 accounts after deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8f4b862-46a8-4eb1-b0c4-fec667aafed3",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Get List Setting Accounts - Get change - 2 accounts after deleted',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Get List Setting Accounts - Get change - 2 accounts after deleted',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var array10 =[];",
							"",
							"",
							"var msg ;",
							"// Get id Google and Yahoo from environment",
							"",
							"var idGoogle = pm.environment.get(\"idGoogle\");",
							"var idYahoo = pm.environment.get(\"idYahoo\");",
							"",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data_del.length;",
							"    if(count>0){",
							"        // Get 2 id items đeleted",
							"        var idAccount1 = parseInt(json.data_del[0].set_accounts.item_id);",
							"        var idAccount2 = parseInt(json.data_del[1].set_accounts.item_id);",
							"        if(idAccount1 === idGoogle && idAccount2 === idYahoo){",
							"            msg.description = \"Get change - 2 accounts after deleted successful.\";",
							"            // Set minDell ID on environment",
							"            pm.environment.set(\"minDElID\",json.data_del[0].set_accounts.id);",
							"            pm.environment.set(\"updated_date_0\",json.data_del[0].set_accounts.updated_date);",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.error = \"Description response failed\";",
							"            msg.description=\"Get change - 2 accounts after deleted not successful\";",
							"        }    ",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Return null Data\";",
							"        msg.description=dataResponse;",
							"    }",
							"    ",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts?ids={{idGoogle}},{{idYahoo}}&has_del=1",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					],
					"query": [
						{
							"key": "modifiedGTE",
							"value": "",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "{{idGoogle}},{{idYahoo}}"
						},
						{
							"key": "fields",
							"value": "account_sync,id,created_date,updated_date,email_address,user_income",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "minID",
							"value": "",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Setting Account - Delete setting 50 accounts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9b0de22f-fe94-4110-b8cb-5ee41899db2a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Delete Setting Account - Delete setting 50 accounts',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Delete Setting Account - Delete setting 50 accounts',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(!dataResponse.includes(\"data_error\")){",
							"        var count = json.data.length;",
							"        // convert Array to String",
							"        for(var i = 0; i < count; i++){",
							"        var accountID = pm.environment.get(\"Accountid-\"+i);",
							"        var idAccount = json.data[i].id;",
							"        if(accountID === idAccount){",
							"            msg.description = \"Delete setting 50 accounts successful.\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.error = \"Description response failed\";",
							"            msg.description=\"Delete setting 50 accounts not successful\";",
							"            break;",
							"        }",
							"    }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"50 accounts not found\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "2fd30414-cc22-47fd-8e64-30fbbf3b27df",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts/{{50idAccounts[]}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts",
						"{{50idAccounts[]}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Setting Accounts - Get change - 50 account deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8f4b862-46a8-4eb1-b0c4-fec667aafed3",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Get List Setting Accounts - Get change - 50 accounts deleted with minDelID',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Get List Setting Accounts - Get change - 50 accounts deleted with minDelID',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var modifiedGTE = pm.environment.get(\"updated_date_0\");",
							"var getMinDelID = parseInt(pm.environment.get(\"minDElID\"));",
							"var msg ;",
							"",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data_del.length;",
							"    if(count>0){",
							"        var minDelIDAccount = parseInt(json.data_del[0].set_accounts.id);",
							"        if(count === 50 && minDelIDAccount > getMinDelID){",
							"            msg.description = \"Get change - 50 accounts deleted > minDelID: \"+getMinDelID+\" with modifiedGTE: \"+modifiedGTE+\" successful\";",
							"            msg.error = \"No Error\";",
							"            pm.environment.set(\"minDelID[29]\",json.data_del[29].set_accounts.id);",
							"            ",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.error = \"Not show enough 50 accounts deleted\";",
							"            msg.description=\"Get change - 50 accounts deleted > minDelID: \"+getMinDelID+\" with modifiedGTE: \"+modifiedGTE+\" not successful\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.status = statusResponse;",
							"        msg.error = \"Null Data\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts?modifiedGTE={{updated_date_0}}&has_del=1&pItem=50&minDelID={{minDElID}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					],
					"query": [
						{
							"key": "modifiedGTE",
							"value": "{{updated_date_0}}"
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "account_sync,id,created_date,updated_date,email_address,user_income",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "minID",
							"value": "",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "50"
						},
						{
							"key": "minDelID",
							"value": "{{minDElID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Setting Accounts - Get change - 10 accounts deleted with minDelID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8f4b862-46a8-4eb1-b0c4-fec667aafed3",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Get List Setting Accounts - Get change - 10 accounts deleted with minDelID',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Get List Setting Accounts - Get change - 10 accounts deleted with minDelID',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"",
							"var getMinDelID = parseInt(pm.environment.get(\"minDelID[29]\"));",
							"var msg ;",
							"",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data_del.length;",
							"    if(count>0){",
							"        var minDelIDAccount = parseInt(json.data_del[0].set_accounts.id);",
							"        if(count === 10 && minDelIDAccount > getMinDelID){",
							"            msg.description = \"Get change - 10 accounts deleted > minDelID: \"+getMinDelID+\" successful\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.error = \"Not show enough 10 accounts deleted\";",
							"            msg.description=\"Get change - 10 accounts deleted > minDelID: \"+getMinDelID+\" not successful\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Response null Data\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts?has_del=1&pItem=10&minDelID={{minDelID[29]}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					],
					"query": [
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "account_sync,id,created_date,updated_date,email_address,user_income",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "minID",
							"value": "",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "10"
						},
						{
							"key": "minDelID",
							"value": "{{minDelID[29]}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pre-test: Get List Setting Accounts - Get all - list setting accounts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8f4b862-46a8-4eb1-b0c4-fec667aafed3",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Get List Setting Accounts - Get all list setting accounts',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Get List Setting Accounts - Get all list setting accounts',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"",
							"var msg ;",
							"var array = [];",
							"",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count>0){",
							"        for(var i=0; i<count; i++){",
							"        array[i] = json.data[i].set_accounts.id;",
							"        }",
							"        pm.environment.set(\"allIDAccounts[]\",array);",
							"        msg.description = \"Get All List Setting Accounts!\";",
							"    }else{",
							"        msg.error = \"Return null Data\";",
							"        msg.description=dataResponse;",
							"        pm.environment.set(\"allIDAccounts[]\",\"\");",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts?fields=account_sync,id,created_date,updated_date,email_address,user_income",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					],
					"query": [
						{
							"key": "modifiedGTE",
							"value": "",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "account_sync,id,created_date,updated_date,email_address,user_income"
						},
						{
							"key": "has_del",
							"value": "",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Setting Account - Delete all accounts setting",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fad5688e-a0f1-42a1-ac83-c84d9ddff52c",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Delete Setting Account - Delete all accounts setting created',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Delete Setting Account - Delete all accounts setting created',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(!dataResponse.includes(\"data_error\")){",
							"        var count = json.data.length;",
							"        // convert Array to String",
							"        for(var i = 0; i < count; i++){",
							"            var idAccounts = pm.environment.get(\"allIDAccounts[]\").toString();",
							"            var listIDAccount = idAccounts.split(\",\")[i];",
							"            var idAccount = json.data[i].id;",
							"            if(listIDAccount === idAccount){",
							"                msg.description = \"Delete all accounts setting created successful.\";",
							"            }else{",
							"                msg = msgFailed;",
							"                msg.error = \"Not found item to delete\";",
							"                msg.description=\"Delete all accounts setting created not successful\";",
							"                break;",
							"        }",
							"    }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Not found item to delete\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "token",
						"value": "{{keyapi}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts/{{allIDAccounts[]}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts",
						"{{allIDAccounts[]}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Setting Accounts - Get change - all setting accounts deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "72204808-b266-449b-b207-a930043a5590",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Get List Setting Accounts - Get change - all setting accounts deleted',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Get List Setting Accounts - Get change - all setting accounts deleted',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    if(!dataResponse.includes(\"data_error\")){",
							"        var minDelIDAccount = parseInt(json.data_del[0].set_accounts.id);",
							"        var getMinDelID = parseInt(pm.environment.get(\"minDElID\"));",
							"        if(minDelIDAccount > getMinDelID){",
							"            msg.description = \"Get all setting accounts deleted successful\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.description = \"Response not include setting accounts deleted\";",
							"            msg.error = \"Error\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Return error Data\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts?has_del=1&minDelID={{minDElID}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					],
					"query": [
						{
							"key": "modifiedGTE",
							"value": "",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "account_sync,id,created_date,updated_date,email_address,user_income",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "pItem",
							"value": "1",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "{{minDElID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Setting Account - Delete with id = 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fad5688e-a0f1-42a1-ac83-c84d9ddff52c",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var msgFailed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Failed - Delete Setting Account - Delete with id = 0',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection: \"API-SettingAccounts\",",
							"    title: 'Passed - Delete Setting Account - Delete with id = 0',",
							"    endpoint: pm.environment.get('version')+\"/setaccounts\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"// Status response",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"// Get id Yahoo from environment",
							"var idYahoo = pm.environment.get(\"idYahoo\");",
							"",
							"if(statusResponse == 200){",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    });",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count===0){",
							"        if(!dataResponse.includes(\"error\")){",
							"            msg.description = dataResponse;",
							"            msg.error = \"Return null data when delete with id = 0 successful\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.error = \"Description response failed\";",
							"            msg.description=\"Not response null when data with id = 0\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Return null Data\";",
							"        msg.description=dataResponse;",
							"    }",
							"}else{",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							"",
							"var Url_report = pm.environment.get(\"url_report\");",
							"pm.sendRequest({",
							"    url: Url_report,",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts/0",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Setting Accounts - Clean Up",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "72204808-b266-449b-b207-a930043a5590",
						"exec": [
							"// Clean up environment",
							"pm.environment.unset(\"allIDAccounts[]\");",
							"pm.environment.unset(\"idGoogle\");",
							"pm.environment.unset(\"user_income_Google\");",
							"pm.environment.unset(\"idYahoo\");",
							"pm.environment.unset(\"user_income_Yahoo\");",
							"pm.environment.unset(\"updated_date\");",
							"pm.environment.unset(\"updated_date_0\");",
							"pm.environment.unset(\"minID[29]\");",
							"pm.environment.unset(\"minDElID\");",
							"pm.environment.unset(\"minDelID[29]\");",
							"pm.environment.unset(\"50idAccounts[]\");",
							"pm.environment.unset(\"10idAccounts[]\");",
							"pm.environment.unset(\"user_income_random\");",
							"for(var i = 0; i<50; i++){",
							"    pm.environment.unset(\"user_income_random\"+i);",
							"    pm.environment.unset(\"Accountid-\"+i);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "token",
						"type": "text",
						"value": "{{keyapi}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/setaccounts?fields=account_sync,id,created_date,updated_date,email_address,user_income",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"setaccounts"
					],
					"query": [
						{
							"key": "modifiedGTE",
							"value": "",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "account_sync,id,created_date,updated_date,email_address,user_income"
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "1",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "{{minDElID}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}