{
	"info": {
		"_postman_id": "bc95e024-0045-4ec8-8092-43783e569c62",
		"name": "API-Link v2.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "pretest - Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1bda41a4-5419-4d56-83a7-911151792891",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var keyapi = CryptoJS.MD5( CryptoJS.MD5(pm.environment.get(\"email\") + pm.environment.get(\"appreg\")) + json.tokenapi).toString();",
							"",
							"postman.setEnvironmentVariable(\"token\", json.tokenapi);",
							"postman.setEnvironmentVariable(\"keyapi\", keyapi);",
							"",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Test Version: '+pm.environment.get('version')+'\\nFailed - Pretest - Login',",
							"    endpoint: pm.environment.get(\"version\")+\"/users/token.json\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Test Version: '+pm.environment.get('version')+'\\nPassed - Pretest - Login',",
							"    endpoint: pm.environment.get(\"version\")+\"/users/token.json\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var body = json.description;",
							"    if(body==\"Flo\"){",
							"        msg.description=body;",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"Description response failed\";",
							"        msg.description=body;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1c08c603-e7d0-4913-921b-c3ac7e42ea9f",
						"exec": [
							"// Use the CryptoJS",
							"var hash = CryptoJS.MD5( CryptoJS.MD5(pm.environment.get(\"email\")+\":LeftCoastLogic:\"+pm.environment.get(\"password\"))+pm.environment.get(\"appreg\")).toString();",
							"",
							"console.log(\"sig: \" + hash);",
							"postman.setEnvironmentVariable(\"sig\", hash);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"{{email}}\",\n\t\"alias\": \"{{alias}}\",\n\t\"sig\": \"{{sig}}\"\n}"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/users/token.json",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"users",
						"token.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Require",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "948059f1-c156-464f-b9d0-d6c2510410f3",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",\"51573111-5f6f-41ca-8798-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"VTODO\");",
							"postman.setEnvironmentVariable(\"source_id\",\"a3633e15-794e-41d9-8cc8-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"source_type\",\"VTODO\");",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "532f7b33-847a-404a-83f0-24e9ed718121",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - required: destination_id,destination_type,source_id,source_type',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - required: destination_id,destination_type,source_id,source_type',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ){",
							"            msg = msgFailed;",
							"            msg.error = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type;",
							"        }else{",
							"            msg.description = \"Response data create Link with parameters required successful\";",
							"            pm.environment.set('linkid1',json.data[0].link.id);",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"Status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"destination_id\":\"{{destination_id}}\",\n        \"destination_type\":\"{{destination_type}}\",\n        \"source_id\":\"{{source_id}}\",\n        \"source_type\":\"{{source_type}}\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Null require destination_id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4393bf1e-7ae6-4298-a59e-7e6525df7a81",
						"exec": [
							"postman.setEnvironmentVariable(\"destination_id\",\"51573111-5f6f-41ca-8798-4659c642ec999\");",
							"postman.setEnvironmentVariable(\"destination_type\",\"VTODO\");",
							"postman.setEnvironmentVariable(\"source_id\",\"a3633e15-794e-41d9-8cc8-a5676e569123\");",
							"postman.setEnvironmentVariable(\"source_type\",\"VTODO\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3cd03e4f-1cbd-4075-98da-e394e2234cae",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Null required destination_id',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Null required destination_id',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        msg = msgFailed;",
							"        msg.description = \"The response data is not null.\";",
							"    }else{",
							"        var countError = json.data_error.length;",
							"        if(countError != 1){",
							"            msg = msgFailed;",
							"            msg.description = \"The response data is not show error\";",
							"        }else{",
							"            msg.description = \"Response data show error. Cannot creat link with null required destination_id\";",
							"        }",
							"         ",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"destination_type\":\"{{destination_type}}\",\n        \"source_id\":\"{{source_id}}\",\n        \"source_type\":\"{{source_type}}\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Null require destination_type",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4393bf1e-7ae6-4298-a59e-7e6525df7a81",
						"exec": [
							"postman.setEnvironmentVariable(\"destination_id\",\"51573111-5f6f-41ca-8798-4659c642ec999\");",
							"postman.setEnvironmentVariable(\"destination_type\",\"VTODO\");",
							"postman.setEnvironmentVariable(\"source_id\",\"a3633e15-794e-41d9-8cc8-a5676e569123\");",
							"postman.setEnvironmentVariable(\"source_type\",\"VTODO\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3cd03e4f-1cbd-4075-98da-e394e2234cae",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Null required destination_type',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Null required destination_type',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        msg = msgFailed;",
							"        msg.description = \"The response data is not null.\";",
							"    }else{",
							"        var countError = json.data_error.length;",
							"        if(countError != 1){",
							"            msg = msgFailed;",
							"            msg.description = \"The response data is not show error\";",
							"        }else{",
							"            msg.description = \"Response data show error. Cannot creat link with null required destination_type\";",
							"        }",
							"         ",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"destination_id\":\"{{destination_id}}\",\n        \"source_id\":\"{{source_id}}\",\n        \"source_type\":\"{{source_type}}\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Null require source_id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4393bf1e-7ae6-4298-a59e-7e6525df7a81",
						"exec": [
							"postman.setEnvironmentVariable(\"destination_id\",\"51573111-5f6f-41ca-8798-4659c642ec999\");",
							"postman.setEnvironmentVariable(\"destination_type\",\"VTODO\");",
							"postman.setEnvironmentVariable(\"source_id\",\"a3633e15-794e-41d9-8cc8-a5676e569123\");",
							"postman.setEnvironmentVariable(\"source_type\",\"VTODO\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3cd03e4f-1cbd-4075-98da-e394e2234cae",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Null required source_id',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Null required source_id',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        msg = msgFailed;",
							"        msg.description = \"The response data is not null.\";",
							"    }else{",
							"        var countError = json.data_error.length;",
							"        if(countError != 1){",
							"            msg = msgFailed;",
							"            msg.description = \"The response data is not show error\";",
							"        }else{",
							"            msg.description = \"Response data show error. Cannot creat link with null required source_id\";",
							"        }",
							"         ",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"destination_id\":\"{{destination_id}}\",\n        \"destination_type\":\"{{destination_type}}\",\n        \"source_type\":\"{{source_type}}\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Null require source_type",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4393bf1e-7ae6-4298-a59e-7e6525df7a81",
						"exec": [
							"postman.setEnvironmentVariable(\"destination_id\",\"51573111-5f6f-41ca-8798-4659c642ec999\");",
							"postman.setEnvironmentVariable(\"destination_type\",\"VTODO\");",
							"postman.setEnvironmentVariable(\"source_id\",\"a3633e15-794e-41d9-8cc8-a5676e569123\");",
							"postman.setEnvironmentVariable(\"source_type\",\"VTODO\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3cd03e4f-1cbd-4075-98da-e394e2234cae",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Null required source_type',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Null required source_type',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        msg = msgFailed;",
							"        msg.description = \"The response data is not null.\";",
							"    }else{",
							"        var countError = json.data_error.length;",
							"        if(countError != 1){",
							"            msg = msgFailed;",
							"            msg.description = \"The response data is not show error\";",
							"        }else{",
							"            msg.description = \"Response data show error. Cannot creat link with null required source_type\";",
							"        }",
							"         ",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description=dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"destination_id\":\"{{destination_id}}\",\n        \"destination_type\":\"{{destination_type}}\",\n        \"source_id\":\"{{source_id}}\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Duplicate",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3dd3b9c9-656c-445f-8f2b-0d21723aafab",
						"exec": [
							"postman.setEnvironmentVariable(\"destination_id\",\"51573111-5f6f-41ca-8798-4659c642ec111\");",
							"postman.setEnvironmentVariable(\"destination_type\",\"VTODO\");",
							"postman.setEnvironmentVariable(\"source_id\",\"a3633e15-794e-41d9-8cc8-a5676e56111\");",
							"postman.setEnvironmentVariable(\"source_type\",\"VTODO\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a741c665-3a1a-413b-b8f6-9c68881e39c4",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - duplicate Link',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - duplicate Link',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    var countError = json.data_error.length;",
							"    if(!dataResponse.includes(\"data_error\")){",
							"        msg = msgFailed;",
							"        sg.description = \"Allow to create duplicate Link\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"destination_id\":\"{{destination_id}}\",\n        \"destination_type\":\"{{destination_type}}\",\n        \"source_id\":\"{{source_id}}\",\n        \"source_type\":\"{{source_type}}\"\n    },\n    {\n        \"destination_id\":\"{{destination_id}}\",\n        \"destination_type\":\"{{destination_type}}\",\n        \"source_id\":\"{{source_id}}\",\n        \"source_type\":\"{{source_type}}\"\n    }\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Note with Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "aeb31427-0813-4321-b797-2bc028048976",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",\"aebb1cef-25f2-4429-8da8-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"VJOURNAL\");",
							"",
							"postman.setEnvironmentVariable(\"source_id\",\"51176\");",
							"postman.setEnvironmentVariable(\"source_type\",\"FOLDER\");",
							"",
							"postman.setEnvironmentVariable(\"ref\",\"196\");",
							"postman.setEnvironmentVariable(\"destination_root_uid\",\"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a957fed0-13a8-0136-b9c6-0ae6aa7dd0d9\\/\");",
							"postman.setEnvironmentVariable(\"updated_date\",1553150458.511143);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "52c59f4e-25d7-4cdc-ba45-5c327c705b0f",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Note with Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Note with Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Response data create link Note with Project successful\";",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        var ref = json.data[0].link.ref;",
							"        var destination_root_uid = json.data[0].link.destination_root_uid;",
							"        var updated_date = json.data[0].link.updated_date;",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ||(ref != pm.environment.get('ref'))",
							"        ||(destination_root_uid != pm.environment.get('destination_root_uid'))",
							"        // ||(updated_date != pm.environment.get('updated_date'))",
							"        ){",
							"            msg = msgFailed;",
							"            msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type+",
							"            \". ref response is:\"+ref+",
							"            \". destination_root_uid response is:\"+destination_root_uid;",
							"            // \". updated_date response is:\"+updated_date;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"\",\n\t\"destination_type\": \"{{destination_type}}\",\n\t\"updated_date\": \"{{updated_date}}\",\n\t\"destination_root_uid\": \"{{destination_root_uid}}\",\n\t\"meta_data\": {},\n\t\"source_type\": \"{{source_type}}\",\n\t\"source_id\": \"{{source_id}}\",\n\t\"destination_account\": \"\",\n\t\"destination_id\": \"{{destination_id}}\",\n\t\"ref\": \"{{ref}}\",\n\t\"source_root_uid\": \"\",\n\t\"source_account\": \"\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Event with Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2ac634ab-bae4-4aae-8b46-f4c174562dd6",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",\"E082E631-3F74-4344-AB52-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"VEVENT\");",
							"",
							"postman.setEnvironmentVariable(\"source_id\",\"51176\");",
							"postman.setEnvironmentVariable(\"source_type\",\"FOLDER\");",
							"",
							"postman.setEnvironmentVariable(\"ref\",\"225\");",
							"postman.setEnvironmentVariable(\"destination_root_uid\",\"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a957d180-13a8-0136-b9c4-0ae6aa7dd0d9\\/\");",
							"postman.setEnvironmentVariable(\"updated_date\",1553150458.511143);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "796976c3-0fec-43f6-ac07-2901c7c2079a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Event with Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Event with Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Response data create link Event with Project successful\";",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        var ref = json.data[0].link.ref;",
							"        var destination_root_uid = json.data[0].link.destination_root_uid;",
							"        var updated_date = json.data[0].link.updated_date;",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ||(ref != pm.environment.get('ref'))",
							"        ||(destination_root_uid != pm.environment.get('destination_root_uid'))",
							"        // ||(updated_date != pm.environment.get('updated_date'))",
							"        ){",
							"            msg = msgFailed;",
							"            msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type+",
							"            \". ref response is:\"+ref+",
							"            \". destination_root_uid response is:\"+destination_root_uid;",
							"            // \". updated_date response is:\"+updated_date;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"\",\n\t\"destination_type\": \"{{destination_type}}\",\n\t\"updated_date\": 1553497780.6833959,\n\t\"destination_root_uid\": \"{{destination_root_uid}}\",\n\t\"meta_data\": {},\n\t\"source_type\": \"{{source_type}}\",\n\t\"source_id\": \"{{source_id}}\",\n\t\"destination_account\": \"\",\n\t\"destination_id\": \"{{destination_id}}\",\n\t\"ref\": \"{{ref}}\",\n\t\"source_root_uid\": \"\",\n\t\"source_account\": \"\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Todo with Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "46e27cc8-7a1a-409f-86e0-a01f6f7d90d0",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",\"E082E631-3F74-4344-AB52-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"VTODO\");",
							"",
							"postman.setEnvironmentVariable(\"source_id\",\"51176\");",
							"postman.setEnvironmentVariable(\"source_type\",\"FOLDER\");",
							"",
							"postman.setEnvironmentVariable(\"ref\",\"226\");",
							"postman.setEnvironmentVariable(\"destination_root_uid\",\"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a957d180-13a8-0136-b9c4-0ae6aa7dd0d9\\/\");",
							"postman.setEnvironmentVariable(\"updated_date\",1553150458.511143);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "28539b59-739d-4bb3-b9eb-a73b3ed37492",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Todo with Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Todo with Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Response data create link Todo with Project successful\";",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        var ref = json.data[0].link.ref;",
							"        var destination_root_uid = json.data[0].link.destination_root_uid;",
							"        var updated_date = json.data[0].link.updated_date;",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ||(ref != pm.environment.get('ref'))",
							"        ||(destination_root_uid != pm.environment.get('destination_root_uid'))",
							"        // ||(updated_date != pm.environment.get('updated_date'))",
							"        ){",
							"            msg = msgFailed;",
							"            msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type+",
							"            \". ref response is:\"+ref+",
							"            \". destination_root_uid response is:\"+destination_root_uid;",
							"            // \". updated_date response is:\"+updated_date;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"\",\n\t\"destination_type\": \"{{destination_type}}\",\n\t\"updated_date\": 1553497780.6833959,\n\t\"destination_root_uid\": \"{{destination_root_uid}}\",\n\t\"meta_data\": {},\n\t\"source_type\": \"{{source_type}}\",\n\t\"source_id\": \"{{source_id}}\",\n\t\"destination_account\": \"\",\n\t\"destination_id\": \"{{destination_id}}\",\n\t\"ref\": \"{{ref}}\",\n\t\"source_root_uid\": \"\",\n\t\"source_account\": \"\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - File with Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7a64dd4b-5234-4be9-8973-cc6c63992820",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"FILE\");",
							"",
							"postman.setEnvironmentVariable(\"source_id\",\"51176\");",
							"postman.setEnvironmentVariable(\"source_type\",\"FOLDER\");",
							"",
							"postman.setEnvironmentVariable(\"ref\",\"229\");",
							"postman.setEnvironmentVariable(\"destination_root_uid\",\"\");",
							"postman.setEnvironmentVariable(\"updated_date\",1553150458.511143);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a5e29903-44c0-4d01-8007-f106473ac3ef",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - File with Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - File with Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Response data create link File with Project successful\";",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        var ref = json.data[0].link.ref;",
							"        var destination_root_uid = json.data[0].link.destination_root_uid;",
							"        var updated_date = json.data[0].link.updated_date;",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ||(ref != pm.environment.get('ref'))",
							"        ||(destination_root_uid != pm.environment.get('destination_root_uid'))",
							"        // ||(updated_date != pm.environment.get('updated_date'))",
							"        ){",
							"            msg = msgFailed;",
							"            msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type+",
							"            \". ref response is:\"+ref+",
							"            \". destination_root_uid response is:\"+destination_root_uid;",
							"            // \". updated_date response is:\"+updated_date;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"\",\n\t\"destination_type\": \"{{destination_type}}\",\n\t\"updated_date\": 1553498266.387183,\n\t\"destination_root_uid\": \"{{destination_root_uid}}\",\n\t\"meta_data\": {},\n\t\"source_type\": \"{{source_type}}\",\n\t\"source_id\": \"{{source_id}}\",\n\t\"destination_account\": \"\",\n\t\"destination_id\": \"{{destination_id}}\",\n\t\"ref\": \"{{ref}}\",\n\t\"source_root_uid\": \"\",\n\t\"source_account\": \"\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Contact with Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "14130e19-b88f-4838-ac2f-3dca5f47a52a",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",\"AEFCCDC9-AFC4-4BFA-85CE-FF\"+numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"VCARD\");",
							"",
							"postman.setEnvironmentVariable(\"source_id\",\"51176\");",
							"postman.setEnvironmentVariable(\"source_type\",\"FOLDER\");",
							"",
							"postman.setEnvironmentVariable(\"ref\",\"260\");",
							"postman.setEnvironmentVariable(\"destination_root_uid\",\"\\/addressbookserver.php\\/addressbooks\\/flo_automation@flomail.net\\/flo_automation@flomail.net\\/\");",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d08c38fd-8cca-475b-9178-34f36f33e9e6",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Contact with Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Contact with Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Response data create link Contact with Project successful\";",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        var ref = json.data[0].link.ref;",
							"        var destination_root_uid = json.data[0].link.destination_root_uid;",
							"        var updated_date = json.data[0].link.updated_date;",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ||(ref != pm.environment.get('ref'))",
							"        ||(destination_root_uid != pm.environment.get('destination_root_uid'))",
							"        // ||(updated_date != pm.environment.get('updated_date'))",
							"        ){",
							"            msg = msgFailed;",
							"            msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type+",
							"            \". ref response is:\"+ref+",
							"            \". destination_root_uid response is:\"+destination_root_uid;",
							"            // \". updated_date response is:\"+updated_date;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n        \"id\": \"\",\n        \"destination_type\": \"VCARD\",\n        \"updated_date\": 1553498345.0204082,\n        \"destination_root_uid\": \"{{destination_root_uid}}\",\n        \"meta_data\": {},\n        \"source_type\": \"{{source_type}}\",\n        \"source_id\": \"{{source_id}}\",\n        \"destination_account\": \"\",\n        \"destination_id\": \"{{destination_id}}\",\n        \"ref\": \"{{ref}}\",\n        \"source_root_uid\": \"\",\n        \"source_account\": \"\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - URL with Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "244866b5-1aa0-4f8a-899c-7a0438709d43",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"URL\");",
							"",
							"postman.setEnvironmentVariable(\"source_id\",\"51176\");",
							"postman.setEnvironmentVariable(\"source_type\",\"FOLDER\");",
							"",
							"postman.setEnvironmentVariable(\"ref\",\"299\");",
							"postman.setEnvironmentVariable(\"destination_root_uid\",\"\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f49824cc-4193-45cc-a8db-ab558f4ff0a3",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - URL with Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - URL with Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Response data create link URL with Project successful\";",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        var ref = json.data[0].link.ref;",
							"        var destination_root_uid = json.data[0].link.destination_root_uid;",
							"        var updated_date = json.data[0].link.updated_date;",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ||(ref != pm.environment.get('ref'))",
							"        ||(destination_root_uid != pm.environment.get('destination_root_uid'))",
							"        // ||(updated_date != pm.environment.get('updated_date'))",
							"        ){",
							"            msg = msgFailed;",
							"            msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type+",
							"            \". ref response is:\"+ref+",
							"            \". destination_root_uid response is:\"+destination_root_uid;",
							"            // \". updated_date response is:\"+updated_date;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"} ",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n        \"id\": \"\",\n        \"destination_type\": \"{{destination_type}}\",\n        \"updated_date\": 1553498521.9921551,\n        \"destination_root_uid\": \"\",\n        \"meta_data\": {},\n        \"source_type\": \"{{source_type}}\",\n        \"source_id\": \"{{source_id}}\",\n        \"destination_account\": \"\",\n        \"destination_id\": \"{{destination_id}}\",\n        \"ref\": \"{{ref}}\",\n        \"source_root_uid\": \"\",\n        \"source_account\": \"\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Todo Note",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "78be0f03-9881-4480-96a2-c568334b98e6",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",\"AE5CD150-2BD8-4871-98A3-0A\"+numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"VTODO\");",
							"",
							"postman.setEnvironmentVariable(\"source_id\",\"2E837C97-52EB-4594-B113-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"source_type\",\"VJOURNAL\");",
							"",
							"postman.setEnvironmentVariable(\"ref\",\"191\");",
							"postman.setEnvironmentVariable(\"destination_root_uid\",\"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a9581510-13a8-0136-b9c7-0ae6aa7dd0d9\\/\");",
							"postman.setEnvironmentVariable(\"source_root_uid\",\"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a9581510-13a8-0136-b9c7-0ae6aa7dd0d9\\/\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7cb1ef68-9de3-4038-b524-089e46dbdd8e",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Todo with Note',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Todo with Note',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Response data create link Todo with Note successful\";",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        var ref = json.data[0].link.ref;",
							"        var destination_root_uid = json.data[0].link.destination_root_uid;",
							"        var source_root_uid = json.data[0].link.source_root_uid;",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ||(ref != pm.environment.get('ref'))",
							"        ||(destination_root_uid != pm.environment.get('destination_root_uid'))",
							"        ||(source_root_uid != pm.environment.get('source_root_uid'))",
							"        ){",
							"            msg = msgFailed;",
							"            msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type+",
							"            \". ref response is:\"+ref+",
							"            \". destination_root_uid response is:\"+destination_root_uid+",
							"            \". source_root_uid response is:\"+source_root_uid;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description =  dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"\",\n\t\"destination_type\": \"{{destination_type}}\",\n\t\"updated_date\": 1553140071.3173709,\n\t\"destination_root_uid\": \"{{destination_root_uid}}\",\n\t\"meta_data\": {},\n\t\"source_type\": \"{{source_type}}\",\n\t\"source_id\": \"{{source_id}}\",\n\t\"destination_account\": \"\",\n\t\"destination_id\": \"{{destination_id}}\",\n\t\"ref\": \"{{ref}}\",\n\t\"source_root_uid\": \"{{source_root_uid}}\",\n\t\"source_account\": \"\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Note Note",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1ea95516-e9a7-4d66-aebc-7cea300739e1",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",\"5FADE950-F914-4697-A8E5-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"VJOURNAL\");",
							"",
							"postman.setEnvironmentVariable(\"source_id\",\"2E837C97-52EB-4594-B113-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"source_type\",\"VJOURNAL\");",
							"",
							"postman.setEnvironmentVariable(\"ref\",\"456\");",
							"postman.setEnvironmentVariable(\"destination_root_uid\",\"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a9581510-13a8-0136-b9c7-0ae6aa7dd0d9\\/\");",
							"postman.setEnvironmentVariable(\"source_root_uid\",\"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a9581510-13a8-0136-b9c7-0ae6aa7dd0d9\\/\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "887f9a72-27af-4c33-afa5-0130e70e4a27",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Note with Note',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Note with Note',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Response data create link Note with Note successful\";",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        var ref = json.data[0].link.ref;",
							"        var destination_root_uid = json.data[0].link.destination_root_uid;",
							"        var source_root_uid = json.data[0].link.source_root_uid;",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ||(ref != pm.environment.get('ref'))",
							"        ||(destination_root_uid != pm.environment.get('destination_root_uid'))",
							"        ||(source_root_uid != pm.environment.get('source_root_uid'))",
							"        ){",
							"            msg = msgFailed;",
							"            msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type+",
							"            \". ref response is:\"+ref+",
							"            \". destination_root_uid response is:\"+destination_root_uid+",
							"            \". source_root_uid response is:\"+source_root_uid;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"\",\n\t\"destination_type\": \"{{destination_type}}\",\n\t\"updated_date\": 1553140666.1326189,\n\t\"destination_root_uid\": \"{{destination_root_uid}}\",\n\t\"meta_data\": {},\n\t\"source_type\": \"{{source_type}}\",\n\t\"source_id\": \"{{source_id}}\",\n\t\"destination_account\": \"\",\n\t\"destination_id\": \"{{destination_id}}\",\n\t\"ref\": \"{{ref}}\",\n\t\"source_root_uid\": \"{{source_root_uid}}\",\n\t\"source_account\": \"\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - To do Email meta_data special character",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a773eb06-0119-4f11-8cda-a8275f83faf0",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",\"AE5CD150-2BD8-4871-98A3-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"VTODO\");",
							"",
							"postman.setEnvironmentVariable(\"source_id\",\"ewogICJwYXRoIiA6ICJPbW5pIiwKICAidGl0bGUiIDogIltBdXRvbWF0aW9uIGlQaG9uZV0gLSBFbWFpbCAxNTUgdG8gbWlrdHJhbjE5OTRAeWFob28uY29tIC0gMjAxOFwvMTFcLzI4IDIxOjU0OjQwIiwKICAidWlkIiA6IDYwLAogICJzZXRfYWNjIiA6ICIwIgp91\");",
							"postman.setEnvironmentVariable(\"source_type\",\"EMAIL\");",
							"",
							"postman.setEnvironmentVariable(\"ref\",\"185\");",
							"postman.setEnvironmentVariable(\"destination_root_uid\",\"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a9581510-13a8-0136-b9c7-0ae6aa7dd0d9\\/\");",
							"postman.setEnvironmentVariable(\"source_root_uid\",\"\");",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3a582441-1ad3-4a42-9537-b7700b1744ee",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Todo with Email(meta_data special character)',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Todo with Email(meta_data special character)',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Response data create link Todo with Email(meta_data special character) successful\";",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        var ref = json.data[0].link.ref;",
							"        var destination_root_uid = json.data[0].link.destination_root_uid;",
							"        var meta_data = json.data[0].link.meta_data;",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ||(ref != pm.environment.get('ref'))",
							"        ||(destination_root_uid != pm.environment.get('destination_root_uid'))",
							"        // ||(meta_data != \"{\\\"source\\\"=>{\\\"sent_time\\\"=>1543417069, \\\"from\\\"=>\\\"flo_automation@flomail.net\\\", \\\"message_id\\\"=>101, \\\"subject\\\"=>\\\"[Automation iPhone] - Email 155 to miktran1994@yahoo.com - 2018/11/28 21:54:40🔥💻🎵🎮\\\", \\\"bcc\\\"=>[], \\\"to\\\"=>[\\\"miktran1994@yahoo.com\\\"], \\\"received_time\\\"=>1553137173.122826, \\\"cc\\\"=>[\\\"automationqcflo@gmail.com\\\"]\")",
							"        ){",
							"            msg = msgFailed;",
							"            msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type+",
							"            \". ref response is:\"+ref+",
							"            \". destination_root_uid response is:\"+destination_root_uid+",
							"            \". meta_data response is:\"+meta_data;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"\",\n\t\"destination_type\": \"{{destination_type}}\",\n\t\"updated_date\": 1553137203.2020159,\n\t\"destination_root_uid\": \"{{destination_root_uid}}\",\n\t\"meta_data\": \"{\\\"source\\\"=>{\\\"sent_time\\\"=>1543417069, \\\"from\\\"=>\\\"flo_automation@flomail.net\\\", \\\"message_id\\\"=>101, \\\"subject\\\"=>\\\"[Automation iPhone] - Email 155 to miktran1994@yahoo.com - 2018/11/28 21:54:40🔥💻🎵🎮\\\", \\\"bcc\\\"=>[], \\\"to\\\"=>[\\\"miktran1994@yahoo.com\\\"], \\\"received_time\\\"=>1553137173.122826, \\\"cc\\\"=>[\\\"automationqcflo@gmail.com\\\"]\",\n\t\"source_type\": \"{{source_type}}\",\n\t\"source_id\": \"{{source_id}}\",\n\t\"destination_account\": \"\",\n\t\"destination_id\": \"{{destination_id}}\",\n\t\"ref\": \"{{ref}}\",\n\t\"source_root_uid\": \"\",\n\t\"source_account\": \"\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Email with Email",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8ca4c793-6f0e-46de-8262-6dcc8f0ac729",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",\"ewogICJwYXRoIiA6ICJPbW5pIiwKICAidGl0bGUiIDogIltBdXRvbWF0aW9uIGlQaG9uZV0gLSBFbWFpbCAxNTUgdG8gbWlrdHJhbjE5OTRAeWFob28uY29tIC0gMjAxOFwvMTFcLzI4IDIxOjU0OjQwIiwKICAidWlkIiA6IDYwLAogICJzZXRfYWNjI\"+numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"EMAIL\");",
							"",
							"postman.setEnvironmentVariable(\"source_id\",\"ewogICJwYXRoIiA6ICJJTkJPWCIsCiAgInRpdGxlIiA6ICJFbWFpbCAxIiwKICAidWlkIiA6IDk0MiwKICAic2V0X2FjYyIgOiA\"+numberRandom);",
							"postman.setEnvironmentVariable(\"source_type\",\"EMAIL\");",
							"",
							"postman.setEnvironmentVariable(\"ref\",\"198\");",
							"postman.setEnvironmentVariable(\"destination_root_uid\",\"\");",
							"postman.setEnvironmentVariable(\"source_root_uid\",\"\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8453c8e5-554e-4cf6-9020-927360d0a804",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Email and Email',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Email and Email',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Response data create link Email with Email successful\";",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        var ref = json.data[0].link.ref;",
							"        var destination_root_uid = json.data[0].link.destination_root_uid;",
							"        var meta_data = json.data[0].link.meta_data;",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ||(ref != pm.environment.get('ref'))",
							"        ||(destination_root_uid != pm.environment.get('destination_root_uid'))",
							"        // ||(meta_data != \"{\\\"destination\\\"=>{\\\"sent_time\\\"=>1543417069.8908978, \\\"from\\\"=>\\\"flo_automation@flomail.net\\\", \\\"message_id\\\"=>101, \\\"subject\\\"=>\\\"[Automation iPhone] - Email 155 to miktran1994@yahoo.com - 2018/11/28 21:54:403!@#!@#😀😀😀😀😀$%^$%^$\\\\#$@#!@$@\\\\#$@#%$%gmmauo...cad\\\", \\\"bcc\\\"=>[\\\"miktran1994@yahoo.com\\\", \\\"miktran1997@yahoo.com\\\", \\\"miktran1999@yahoo.com\\\"], \\\"to\\\"=>[\\\"miktran1994@yahoo.com\\\"], \\\"received_time\\\"=>1553064598.150478, \\\"cc\\\"=>[\\\"automationqcflo@gmail.com\\\", \\\"automationqcflojf2@gmail12.com\\\", \\\"123@1234.com\\\"]}, \\\"source\\\"=>{\\\"sent_time\\\"=>1551425629.8797896, \\\"from\\\"=>\\\"flo_automation@flomail.net\\\", \\\"message_id\\\"=>1, \\\"subject\\\"=>\\\"Email 1@\\\\#$@\\\\#$8942342\\\\#$@\\\\#$@^%$^%&%^&%@@#!@\\\\#@$@😀$@\\\\#$😀$^$%^😀$%^$%^&$😀545345345345\\\", \\\"bcc\\\"=>[\\\"flo_automation@flomail.net\\\"], \\\"to\\\"=>[\\\"flo_automation@flomail.net\\\"], \\\"received_time\\\"=>1553069296.2172852, \\\"cc\\\"=>[\\\"flo_automation@flomail.net\\\"]}}\")",
							"        ){",
							"            msg = msgFailed;",
							"            msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type+",
							"            \". ref response is:\"+ref+",
							"            \". destination_root_uid response is:\"+destination_root_uid+",
							"            \". meta_data response is:\"+meta_data;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"\",\n\t\"destination_type\": \"{{destination_type}}\",\n\t\"updated_date\": 1553069329.486506,\n\t\"destination_root_uid\": \"\",\n\t\"meta_data\": {\n\t\t\"destination\": {\n\t\t\t\"sent_time\": 1543417069.8908978,\n\t\t\t\"from\": \"flo_automation@flomail.net\",\n\t\t\t\"message_id\": 101,\n\t\t\t\"subject\": \"[Automation iPhone] - Email 155 to miktran1994@yahoo.com - 2018\\/11\\/28 21:54:403!@#!@#😀😀😀😀😀$%^$%^$#$@#!@$@#$@#%$%gmmauo...cad\",\n\t\t\t\"bcc\": [\"miktran1994@yahoo.com\",\"miktran1997@yahoo.com\",\"miktran1999@yahoo.com\"],\n\t\t\t\"to\": [\"miktran1994@yahoo.com\"],\n\t\t\t\"received_time\": 1553064598.1504779,\n\t\t\t\"cc\": [\"automationqcflo@gmail.com\", \"automationqcflojf2@gmail12.com\", \"123@1234.com\"]\n\t\t},\n\t\t\"source\": {\n\t\t\t\"sent_time\": 1551425629.8797897,\n\t\t\t\"from\": \"flo_automation@flomail.net\",\n\t\t\t\"message_id\": 1,\n\t\t\t\"subject\": \"Email 1@#$@#$8942342#$@#$@^%$^%&%^&%@@#!@#@$@😀$@#$😀$^$%^😀$%^$%^&$😀545345345345\",\n\t\t\t\"bcc\": [\"flo_automation@flomail.net\"],\n\t\t\t\"to\": [\"flo_automation@flomail.net\"],\n\t\t\t\"received_time\": 1553069296.2172852,\n\t\t\t\"cc\": [\"flo_automation@flomail.net\"]\n\t\t}\n\t},\n\t\"source_type\": \"{{source_type}}\",\n\t\"source_id\": \"{{source_id}}\",\n\t\"destination_account\": \"\",\n\t\"destination_id\": \"{{destination_id}}\",\n\t\"ref\": \"{{ref}}\",\n\t\"source_root_uid\": \"\",\n\t\"source_account\": \"\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Email 3rd",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6b0ff341-e8d8-4544-ae69-cc58d51529b5",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",\"2E837C97-52EB-4594-B113-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"VJOURNAL\");",
							"",
							"postman.setEnvironmentVariable(\"source_id\",\"ewogICJwYXRoIiA6ICJJTkJPWCIsCiAgInRpdGxlIiA6ICJ5YSBqdXN0IGRvbuKAmXQiLAogICJ1aWQiIDogMjU3LAogICJzZXRfYWNjIiC\"+numberRandom);",
							"postman.setEnvironmentVariable(\"source_type\",\"EMAIL\");",
							"",
							"postman.setEnvironmentVariable(\"ref\",\"205\");",
							"postman.setEnvironmentVariable(\"destination_root_uid\",\"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a9581510-13a8-0136-b9c7-0ae6aa7dd0d9\\/\");",
							"postman.setEnvironmentVariable(\"source_root_uid\",\"\");",
							"postman.setEnvironmentVariable(\"source_account\",\"13370\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7741763b-539a-4a47-aeb8-ce69af22b696",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Email 3rd party and Note',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Email 3rd party and Note',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Response data create link Email 3rd party and Note successful\";",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        var ref = json.data[0].link.ref;",
							"        var destination_root_uid = json.data[0].link.destination_root_uid;",
							"        var source_account = json.data[0].link.source_account;",
							"        var meta_data = json.data[0].link.meta_data;",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ||(ref != pm.environment.get('ref'))",
							"        ||(destination_root_uid != pm.environment.get('destination_root_uid'))",
							"        ||(source_account != pm.environment.get('source_account'))",
							"        // // ||(meta_data != \"{\\\"source\\\"=>{\\\"sent_time\\\"=>1539762991, \\\"from\\\"=>\\\"thuy015@flomail.net\\\", \\\"message_id\\\"=>206, \\\"subject\\\"=>\\\"ya just don’t\\\", \\\"bcc\\\"=>[], \\\"to\\\"=>[\\\"automationqcflo@gmail.com\\\"], \\\"received_time\\\"=>1553139736.683837, \\\"cc\\\"=>[]}}\")",
							"        ){",
							"            msg = msgFailed;",
							"            msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type+",
							"            \". ref response is:\"+ref+",
							"            \". destination_root_uid response is:\"+destination_root_uid+",
							"            \". source_account response is:\"+source_account+",
							"            \". meta_data response is:\"+meta_data;",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"\",\n\t\"destination_type\": \"{{destination_type}}\",\n\t\"updated_date\": 1553139762.436389,\n\t\"destination_root_uid\": \"{{destination_root_uid}}\",\n\t\"meta_data\": {\n\t\t\"source\": {\n\t\t\t\"sent_time\": 1539762991,\n\t\t\t\"from\": \"thuy015@flomail.net\",\n\t\t\t\"message_id\": 206,\n\t\t\t\"subject\": \"ya just don’t\",\n\t\t\t\"bcc\": [],\n\t\t\t\"to\": [\"automationqcflo@gmail.com\"],\n\t\t\t\"received_time\": 1553139736.6838369,\n\t\t\t\"cc\": []\n\t\t}\n\t},\n\t\"source_type\": \"{{source_type}}\",\n\t\"source_id\": \"{{source_id}}\",\n\t\"destination_account\": \"\",\n\t\"destination_id\": \"{{destination_id}}\",\n\t\"ref\": \"{{ref}}\",\n\t\"source_root_uid\": \"\",\n\t\"source_account\": \"{{source_account}}\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - Calendar object with Multiple Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9eec5630-8adb-4e4e-9cea-ff2d8c44972f",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",\"aebb1cef-25f2-4429-8da8-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"VJOURNAL\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5bc5ad73-6125-448d-b4a6-afe96743f52a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - Calendar Object with multiple Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - Calendar Object with multiple Project',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Response data create link Calendar Object with multiple Project successful\";",
							"    var count = json.data.length;",
							"    if(count ===4){",
							"        for(var i =0; i<4; i++){",
							"           var destination_id = json.data[i].link.destination_id;",
							"            var destination_type = json.data[i].link.destination_type;",
							"            var source_id = json.data[i].link.source_id;",
							"            var source_type = json.data[i].link.source_type;",
							"            var ref = json.data[i].link.ref;",
							"            var destination_root_uid = json.data[i].link.destination_root_uid;",
							"            var updated_date = json.data[i].link.updated_date;",
							"            var source_id_expected = 34404+i;",
							"        ",
							"            if((destination_id != pm.environment.get('destination_id'))",
							"            ||(destination_type != pm.environment.get('destination_type'))",
							"            ||(source_id != source_id_expected)",
							"            ||(source_type != \"FOLDER\")",
							"            ||(ref != 222+i)",
							"            ||(destination_root_uid != \"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a957e950-13a8-0136-b9c5-0ae6aa7dd0d9\\/\")",
							"            // ||(updated_date != pm.environment.get('updated_date'))",
							"            ){",
							"                msg = msgFailed;",
							"                msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"                \". destination_type response is:\"+destination_type+",
							"                \". source_id response is:\"+source_id+",
							"                \". source_type response is:\"+source_type+",
							"                \". ref response is:\"+ref+",
							"                \". destination_root_uid response is:\"+destination_root_uid;",
							"                // \". updated_date response is:\"+updated_date;",
							"                break;",
							"            } ",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"\",\n\t\"destination_type\": \"{{destination_type}}\",\n\t\"updated_date\": 1553496953.865114,\n\t\"destination_root_uid\": \"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a957e950-13a8-0136-b9c5-0ae6aa7dd0d9\\/\",\n\t\"meta_data\": {},\n\t\"source_type\": \"FOLDER\",\n\t\"source_id\": \"34404\",\n\t\"destination_account\": \"\",\n\t\"destination_id\": \"{{destination_id}}\",\n\t\"ref\": 222,\n\t\"source_root_uid\": \"\",\n\t\"source_account\": \"\"\n}, {\n\t\"id\": \"\",\n\t\"destination_type\": \"{{destination_type}}\",\n\t\"updated_date\": 1553496954.1697111,\n\t\"destination_root_uid\": \"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a957e950-13a8-0136-b9c5-0ae6aa7dd0d9\\/\",\n\t\"meta_data\": {},\n\t\"source_type\": \"FOLDER\",\n\t\"source_id\": \"34405\",\n\t\"destination_account\": \"\",\n\t\"destination_id\": \"{{destination_id}}\",\n\t\"ref\": 223,\n\t\"source_root_uid\": \"\",\n\t\"source_account\": \"\"\n}, {\n\t\"id\": \"\",\n\t\"destination_type\": \"{{destination_type}}\",\n\t\"updated_date\": 1553496954.1721349,\n\t\"destination_root_uid\": \"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a957e950-13a8-0136-b9c5-0ae6aa7dd0d9\\/\",\n\t\"meta_data\": {},\n\t\"source_type\": \"FOLDER\",\n\t\"source_id\": \"34406\",\n\t\"destination_account\": \"\",\n\t\"destination_id\": \"{{destination_id}}\",\n\t\"ref\": 224,\n\t\"source_root_uid\": \"\",\n\t\"source_account\": \"\"\n}, {\n\t\"id\": \"\",\n\t\"destination_type\": \"{{destination_type}}\",\n\t\"updated_date\": 1553496954.1743832,\n\t\"destination_root_uid\": \"\\/calendarserver.php\\/calendars\\/flo_automation@flomail.net\\/a957e950-13a8-0136-b9c5-0ae6aa7dd0d9\\/\",\n\t\"meta_data\": {},\n\t\"source_type\": \"FOLDER\",\n\t\"source_id\": \"34407\",\n\t\"destination_account\": \"\",\n\t\"destination_id\": \"{{destination_id}}\",\n\t\"ref\": 225,\n\t\"source_root_uid\": \"\",\n\t\"source_account\": \"\"\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pre-test - Get All List Link Created",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Prtest - Failed - Get All List Link Created',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Prtest - Passed - Get All List Link Created',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link - Full successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        for (var i = 0; i <count; i++) ",
							"        {",
							"            array[i] = json.data[i].link.id;",
							"        }",
							"        pm.environment.set(\"allLink1\",array)",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number data response is not match. The number data is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "68e00d6a-1c09-4d54-a30a-1d1a3699eda1",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=0",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "pItem",
							"value": "30",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "141167",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - 50 Items",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "589b5659-0bba-490c-ab04-edf71bf8eaba",
						"exec": [
							"postman.setEnvironmentVariable(\"destination_id\",\"aebb1cef-25f2-4429-8da8-451dc0365adf\");",
							"postman.setEnvironmentVariable(\"destination_type\",\"VJOURNAL\");",
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"pm.environment.set(\"numberRandom\",numberRandom);",
							"var stringJson = \"\";",
							"for(var i = 0; i< 50; i++){",
							"    stringJson = (stringJson === \"\" ? stringJson : stringJson+', ')+'{\"id\": \"\",\"destination_type\": \"{{destination_type}}\",\"updated_date\": 1553500307.556402,\"destination_root_uid\": \"\",\"meta_data\": {},\"source_type\": \"FOLDER\",\"source_id\": \"'+numberRandom+''+i+'\",\"destination_account\": \"\",\"destination_id\": \"{{destination_id}}\",\"ref\": 237,\"source_root_uid\": \"\",\"source_account\": \"\"}';",
							"}",
							"pm.environment.set(\"Create50Links\", stringJson);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e9050d69-388f-443e-837c-7378245ed1c4",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var array = [];",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - 50 Items',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - 50 Items',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count ===50){",
							"        for (var i = 0; i <10; i++) ",
							"        {",
							"            array[i]= json.data[i].link.id;",
							"            postman.setEnvironmentVariable(\"deleteId\"+i, json.data[i].link.id);",
							"        }",
							"",
							"        postman.setEnvironmentVariable(\"deleteId\", array);",
							"        ",
							"        for (var i = 0; i <count; i++) ",
							"        {",
							"            postman.setEnvironmentVariable(\"updateLinkId\"+i, json.data[i].link.id);",
							"        }",
							"        ",
							"  ",
							"        for(var i =0; i<50; i++){",
							"           var destination_id = json.data[i].link.destination_id;",
							"            var destination_type = json.data[i].link.destination_type;",
							"            var source_id = json.data[i].link.source_id;",
							"            var source_type = json.data[i].link.source_type;",
							"            var ref = json.data[i].link.ref;",
							"            var destination_root_uid = json.data[i].link.destination_root_uid;",
							"            var updated_date = json.data[i].link.updated_date;",
							"            var source_id_expected = pm.environment.get(\"numberRandom\")+i;",
							"        ",
							"            if((destination_id == pm.environment.get('destination_id'))",
							"            ||(destination_type == pm.environment.get('destination_type'))",
							"            ||(source_id == source_id_expected)",
							"            ||(source_type == \"FOLDER\")",
							"            ||(ref == 237)",
							"            ){",
							"                msg.description = \"Response data create Link - 50 Items successful\";",
							"            }else{",
							"                msg = msgFailed;",
							"                msg.description = \"Response data create Link - 50 Items NOT successful\";",
							"            }",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n\t{{Create50Links}}\n\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create Link - 51 Items",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "589b5659-0bba-490c-ab04-edf71bf8eaba",
						"exec": [
							"postman.setEnvironmentVariable(\"destination_id\",\"aebb1cef-25f2-4429-8da8-451dc0365adf\");",
							"postman.setEnvironmentVariable(\"destination_type\",\"VJOURNAL\");",
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"pm.environment.set(\"numberRandom\",numberRandom);",
							"var stringJson = \"\";",
							"for(var i = 0; i< 51; i++){",
							"    stringJson = (stringJson === \"\" ? stringJson : stringJson+', ')+'{\"id\": \"\",\"destination_type\": \"{{destination_type}}\",\"updated_date\": 1553500307.556402,\"destination_root_uid\": \"\",\"meta_data\": {},\"source_type\": \"FOLDER\",\"source_id\": \"'+numberRandom+''+i+'\",\"destination_account\": \"\",\"destination_id\": \"{{destination_id}}\",\"ref\": 237,\"source_root_uid\": \"\",\"source_account\": \"\"}';",
							"}",
							"pm.environment.set(\"Create51Links\", stringJson);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e9050d69-388f-443e-837c-7378245ed1c4",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"var array = [];",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Create Link - 51 Items',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Create Link - 51 Items',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"POST\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    var count = json.data.length;",
							"    if(count == 50){",
							"        ",
							"        for(var i =0; i<count; i++){",
							"           var destination_id = json.data[i].link.destination_id;",
							"            var destination_type = json.data[i].link.destination_type;",
							"            var source_id = json.data[i].link.source_id;",
							"            var source_type = json.data[i].link.source_type;",
							"            var ref = json.data[i].link.ref;",
							"            var destination_root_uid = json.data[i].link.destination_root_uid;",
							"            var updated_date = json.data[i].link.updated_date;",
							"            var source_id_expected = pm.environment.get(\"numberRandom\")+i;",
							"        ",
							"            if((destination_id == pm.environment.get('destination_id'))",
							"            ||(destination_type == pm.environment.get('destination_type'))",
							"            ||(source_id == source_id_expected)",
							"            ||(source_type == \"FOLDER\")",
							"            ||(ref == 237)",
							"            ",
							"            ){",
							"                msg.description = \"Response data not allow to create Link - 51 Items successful\";",
							"                ",
							"            }else{",
							"                msg = msgFailed;",
							"                msg.description = \"Response data allow to create Link - 51 Items successful\";",
							"            }",
							"            array[i] = json.data[i].link.id;",
							"        }",
							"        pm.environment.set(\"allLink\",array)",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.error = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n\t{{Create51Links}}\n\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Link - Big Data 50 items",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Delete Link - Big Data 50 items',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Delete Link - Big Data 50 items',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Delete Link - Big Data successful\";",
							"    var count = json.data.length;",
							"    for(var i=0; i<count; i++){",
							"        if(dataResponse.includes(json.data[i].id)){",
							"            msg.description = \"Delete all links successful\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.description = \"Data response not includes id deleted\";",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "4da5f18d-7adf-4706-a34b-fa6d95423618",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links/{{allLink}}?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links",
						"{{allLink}}"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "141167",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update Link - require",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b77ad2f4-e4e2-4caa-8fb9-1380761be3f0",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",\"up_51573111-5f6f-41ca-8798-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"VEVENT\");",
							"postman.setEnvironmentVariable(\"source_id\",\"up_a3633e15-794e-41d9-8cc8-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"source_type\",\"VEVENT\");",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "056227d4-d525-41be-a8b4-aa8bd485d914",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Update Link - required destination_id,destination_type,source_id,source_type',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Update Link - required destination_id,destination_type,source_id,source_type',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Response data update link with required destination_id,destination_type,source_id,source_type successful\";",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ){",
							"            msg = msgFailed;",
							"            msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type;",
							"        }else{",
							"            pm.environment.set('linkid1',json.data[0].link.id);",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"{{linkid1}}\",\n    \"destination_id\":\"{{destination_id}}\",\n    \"destination_type\":\"{{destination_type}}\",\n    \"source_id\":\"{{source_id}}\",\n    \"source_type\":\"{{source_type}}\"\n\t\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links/update?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links",
						"update"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update Link - full",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ceb286a4-900e-46ce-a012-66213ca72c98",
						"exec": [
							"var numberRandom = Math.floor(Math.random() * 10000000);",
							"postman.setEnvironmentVariable(\"destination_id\",\"2E837C97-52EB-4594-B113-\"+numberRandom);",
							"postman.setEnvironmentVariable(\"destination_type\",\"VJOURNAL\");",
							"postman.setEnvironmentVariable(\"source_id\",\"ewogICCJJTkJPWCIsCiAgInRpdGxlIiA6ICJ5YSBqdXN0IGRvbuKAmXQiLAogICJ1aWQiIDogMjU3LAogICJzZXRfYWNjIiA6ICIxMzM3M213\"+numberRandom);",
							"postman.setEnvironmentVariable(\"source_type\",\"EMAIL\");",
							"postman.setEnvironmentVariable(\"source_account\",\"13370\");",
							"postman.setEnvironmentVariable(\"destination_account\",\"1234567\");",
							"postman.setEnvironmentVariable(\"destination_root_uid\",\"/calendarserver.php/calendars/flo_automation@flomail.net/a9581510-13a8-0136-b9c7-0ae6aa7dd0d9/\");",
							"postman.setEnvironmentVariable(\"source_root_uid\",\"source_root_uid_1113\");",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "526090ba-d599-4fed-8ec2-9f9f8f62aee1",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Update Link - Full',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Update Link - Full',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Update link with full fields successful\";",
							"    var count = json.data.length;",
							"    if(count==1){",
							"        var destination_id = json.data[0].link.destination_id;",
							"        var destination_type = json.data[0].link.destination_type;",
							"        var source_id = json.data[0].link.source_id;",
							"        var source_type = json.data[0].link.source_type;",
							"        var source_account = json.data[0].link.source_account;",
							"        var destination_account = json.data[0].link.destination_account;",
							"        var email = json.data[0].link.email;",
							"        var destination_root_uid = json.data[0].link.destination_root_uid;",
							"        var source_root_uid = json.data[0].link.source_root_uid;",
							"        var meta_data = json.data[0].link.meta_data;",
							"        ",
							"        ",
							"        ",
							"        ",
							"        if((destination_id != pm.environment.get('destination_id'))",
							"        ||(destination_type != pm.environment.get('destination_type'))",
							"        ||(source_id != pm.environment.get('source_id'))",
							"        ||(source_type != pm.environment.get('source_type'))",
							"        ||(source_account != pm.environment.get('source_account'))",
							"        ||(destination_account != pm.environment.get('destination_account'))",
							"        ||(email != pm.environment.get('email'))",
							"        ||(destination_root_uid != pm.environment.get('destination_root_uid'))",
							"        ||(source_root_uid != pm.environment.get('source_root_uid'))",
							"        ){",
							"            msg = msgFailed;",
							"            msg.description = \"response data is not match. destination_id response is:\"+destination_id+",
							"            \". destination_type response is:\"+destination_type+",
							"            \". source_id response is:\"+source_id+",
							"            \". source_type response is:\"+source_type+",
							"            \". source_account response is:\"+source_account+",
							"            \". destination_account response is:\"+destination_account+",
							"            \". email response is:\"+email+",
							"            \". destination_root_uid response is:\"+destination_root_uid+",
							"            \". source_root_uid response is:\"+source_root_uid;",
							"        }else{",
							"            pm.environment.set('linkid1',json.data[0].link.id);",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"{{linkid1}}\",\n                \"source_type\": \"{{source_type}}\",\n                \"destination_type\": \"{{destination_type}}\",\n                \"source_account\": \"{{source_account}}\",\n                \"destination_account\": \"{{destination_account}}\",\n                \"source_id\": \"{{source_id}}\",\n                \"destination_id\": \"{{destination_id}}\",\n                \"email\": \"{{email}}\",\n                \"belongto\": 1,\n                \"source_root_uid\": \"{{source_root_uid}}\",\n                \"destination_root_uid\": \"{{destination_root_uid}}\",\n                \"meta_data\": \"\"\n\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links/update?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links",
						"update"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update Link - 50 Item",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ceb286a4-900e-46ce-a012-66213ca72c98",
						"exec": [
							"",
							"postman.setEnvironmentVariable(\"destination_root_uid\",\"/calendarserver.php/calendars/flo_automation@flomail.net/a9581510-13a8-0136-b9c7-0ae6aa7dd080/\");",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "526090ba-d599-4fed-8ec2-9f9f8f62aee1",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Update Link - 50 Items',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Update Link - 50 Items',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Update 50 id links successful\"",
							"    var count = json.data.length;",
							"    if(count ===50){",
							"        pm.environment.set(\"update_date\", json.data[2].link.updated_date);",
							"        for(var i =0; i<50; i++){",
							"            var destination_root_uid = json.data[i].link.destination_root_uid;",
							"            ",
							"        ",
							"            if(",
							"            (destination_root_uid != \"\\/calendarserver.php/calendars/flo_automation@flomail.net/a9581510-13a8-0136-b9c7-0ae6aa7dd080/\")",
							"            ){",
							"                msg = msgFailed;",
							"                msg.description = \"response data is not match. destination_root_uid response is:\"+destination_root_uid;",
							"                break;",
							"            } ",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number item response is not match. The number item is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"{{updateLinkId0}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId1}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId2}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId3}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId4}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId5}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId6}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId7}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId8}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId9}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId10}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId11}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId12}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId13}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId14}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId15}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId16}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId17}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId18}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId19}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId20}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId21}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId22}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId23}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId24}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId25}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId26}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId27}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId28}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId29}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId30}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId31}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId32}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId33}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId34}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId35}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId36}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId37}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId38}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId39}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId40}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId41}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId42}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId43}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId44}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},{\n\t\"id\": \"{{updateLinkId45}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId46}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId47}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId48}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n},\n{\n\t\"id\": \"{{updateLinkId49}}\",\n    \"destination_root_uid\": \"{{destination_root_uid}}\"\n}\n]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links/update?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links",
						"update"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update Link - invalid id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b77ad2f4-e4e2-4caa-8fb9-1380761be3f0",
						"exec": [
							"postman.setEnvironmentVariable(\"destination_id\",\"up_51573111-5f6f-41ca-8798-4659c642ec009\");",
							"postman.setEnvironmentVariable(\"destination_type\",\"VEVENT\");",
							"postman.setEnvironmentVariable(\"source_id\",\"up_a3633e15-794e-41d9-8cc8-a5676e569123\");",
							"postman.setEnvironmentVariable(\"source_type\",\"VEVENT\");",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "056227d4-d525-41be-a8b4-aa8bd485d914",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Update Link - Invalid Id',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"PUT\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Update Link - Invalid Id',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"PUT\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"The item can not be saved.\"",
							"    var count = json.data.length;",
							"    if(!dataResponse.includes(\"data_error\")){",
							"        msg = msgFailed;",
							"        msg.description = \"Data must show error with invalid id input\";",
							"    }",
							"    ",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"id\": \"979787\",\n    \"destination_id\":\"{{destination_id}}\",\n    \"destination_type\":\"{{destination_type}}\",\n    \"source_id\":\"{{source_id}}\",\n    \"source_type\":\"{{source_type}}\"\n\t\n}]"
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links/update?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links",
						"update"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Link - Full",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c335b7ec-c180-4f21-9acb-c92646dc3aaa",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - Full',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - Full',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get all list Link successful\"",
							"    var count = json.data.length;",
							"    if(count > 0){",
							"        for (var i = 0; i <count; i++) ",
							"        {",
							"            array[i] = json.data[i].link.id;",
							"        }",
							"        postman.setEnvironmentVariable(\"linkId\", array);",
							"        postman.setEnvironmentVariable(\"minID\", json.data[30].link.id);",
							"        postman.setEnvironmentVariable(\"minDelID\", json.data_del[2].deleted_item.id);",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number data response is not match. The number data is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=1",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "141167",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Link - First Sync",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - First Sync',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - First Sync',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link in first sync successful\";",
							"    var count = json.data.length;",
							"    if(count >0){",
							"        for (var i = 0; i <count; i++) ",
							"        {",
							"            array[i] = json.data[i].link.id;",
							"        }",
							"        var maxArray = Math.max.apply(null, array);",
							"        postman.setEnvironmentVariable(\"minIdFirstSync\", maxArray);",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number data response is not match. The number data is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&pItem=30",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "30"
						},
						{
							"key": "minID",
							"value": "141167",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Link - First Sync 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - First Sync 2',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - First Sync 2',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link in First Sync 2 successful\"",
							"    var count = json.data.length;",
							"    if(count >0){",
							"        for (var i = 0; i <count; i++) ",
							"        {",
							"            if(json.data[i].link.id <= pm.environment.get(\"minIdFirstSync\")){",
							"            msg = msgFailed;",
							"            msg.description = \"parameter minID: failed\";",
							"            break;",
							"            }",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number data response is not match. The number data is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&pItem=100&minID={{minIdFirstSync}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "100"
						},
						{
							"key": "minID",
							"value": "{{minIdFirstSync}}"
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Full List Link - pItem",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - pItem=10',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - pItem=10',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"// Data response",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link with pItem = 10 successful\";",
							"    var count = json.data.length;",
							"    if(count !== 10){",
							"        msg = msgFailed;",
							"        msg.description = \"The number data response is not match. The number data is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&pItem=10",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "10"
						},
						{
							"key": "minID",
							"value": "141167",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Full List Link - minID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - minID={{minID}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - minID={{minID}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link with minID = {{minID}} successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        for(var i =0; i<count; i++){",
							"            if(json.data[i].link.id <= pm.environment.get(\"minID\")){",
							"            msg = msgFailed;",
							"            msg.description = \"parameter minID: failed\";",
							"            }",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&minID={{minID}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "{{minID}}"
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Full List Link - ids",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - ids={{minID}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - ids={{minID}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link with ids = {{minID}} successful\";",
							"    var count = json.data.length;",
							"    if(count !== 1){",
							"         msg = msgFailed;",
							"         msg.description = \"data response is not match. The number data response is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&ids={{minID}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "{{minID}}",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "{{minID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Full List Link - has_del = 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - has_del=1',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - has_del=1',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link with has_del = 1 successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        if(!pm.response.text().includes(\"data_del\")){",
							"            msg = msgFailed;",
							"            msg.description = \"- parameter has_del=1: failed \";",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "eec009c5-24bf-41c2-83fc-4e545e0f0555",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=1",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "300895",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Full List Link - has_del = 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - has_del=0',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - has_del=0',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link with has_del = 0 successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        if(pm.response.text().includes(\"data_del\")){",
							"            msg = msgFailed;",
							"            msg.description = \"parameter has_del=0: failed\";",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "eec009c5-24bf-41c2-83fc-4e545e0f0555",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=0",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "0"
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "300895",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Full List Link - fields",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - fields=destination_root_uid,meta_data,source_root_uid,email',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - fields=destination_root_uid,meta_data,source_root_uid,email ',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link with fields option 1 successful\";",
							"    var count = json.data.length;",
							"    if(count === 117){",
							"        for (var i = 0; i <count; i++) ",
							"        {",
							"            if((json.data[i].link.id === undefined)",
							"                ||(json.data[i].link.source_type !== undefined)",
							"                ||(json.data[i].link.destination_type !== undefined)",
							"                ||(json.data[i].link.source_account !== undefined)",
							"                ||(json.data[i].link.destination_account !== undefined)",
							"                ||(json.data[i].link.source_id !== undefined)",
							"                ||(json.data[i].link.created_date !== undefined)",
							"                ||(json.data[i].link.updated_date !== undefined)",
							"                ||(json.data[i].link.email === undefined)",
							"                ||(json.data[i].link.source_root_uid === undefined)",
							"                ||(json.data[i].link.destination_root_uid === undefined)",
							"                ||(json.data[i].link.meta_data === undefined)",
							"            ){",
							"                msg = msgFailed;",
							"                msg.description = \"parameter fields: dont work\";",
							"            }",
							"        }",
							"        ",
							"    }else{",
							"        msg.description = \"The number data response is not match. The number data is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "eec009c5-24bf-41c2-83fc-4e545e0f0555",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=0&fields=destination_root_uid,meta_data,source_root_uid,email",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "0"
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "300895",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "destination_root_uid,meta_data,source_root_uid,email"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Full List Link - fields 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - fields=source_type,destination_type,source_account,destination_account,source_id,destination_id,created_date,updated_date',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - fields=source_type,destination_type,source_account,destination_account,source_id,destination_id,created_date,updated_date',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link with fields option 2 successful\";",
							"    var count = json.data.length;",
							"    if(count => 0){",
							"        for (var i = 0; i <count; i++) ",
							"        {",
							"            if((json.data[i].link.id === undefined)",
							"                ||(json.data[i].link.source_type === undefined)",
							"                ||(json.data[i].link.destination_type === undefined)",
							"                ||(json.data[i].link.source_account === undefined)",
							"                ||(json.data[i].link.destination_account === undefined)",
							"                ||(json.data[i].link.source_id === undefined)",
							"                ||(json.data[i].link.created_date === undefined)",
							"                ||(json.data[i].link.updated_date === undefined)",
							"                ||(json.data[i].link.email !== undefined)",
							"                ||(json.data[i].link.source_root_uid !== undefined)",
							"                ||(json.data[i].link.destination_root_uid !== undefined)",
							"                ||(json.data[i].link.meta_data !== undefined)",
							"            ){",
							"                msg = msgFailed;",
							"                msg.description = \"parameter fields: dont work\";",
							"            }",
							"        }",
							"        ",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number data response is not match. The number data is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "eec009c5-24bf-41c2-83fc-4e545e0f0555",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&fields=source_type,destination_type,source_account,destination_account,source_id,destination_id,created_date,updated_date",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "0",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "300895",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "source_type,destination_type,source_account,destination_account,source_id,destination_id,created_date,updated_date"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Full List Link - pItem, minID, has_del fields 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - has_del=0, pItem=5, minID={{minID}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - has_del=0, pItem=5, minID={{minID}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link with pItem, minID, has_del successful\";",
							"    var count = json.data.length;",
							"    if(count === 5){",
							"       for(var i =0; i<count; i++){",
							"            if(json.data[i].link.id <= pm.environment.get(\"minID\")){",
							"            msg = msgFailed;",
							"            msg.description = \"parameter minID: failed\";",
							"            }",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \" - parameter pItem: failed\";",
							"    }",
							"    if(pm.response.text().includes(\"data_del\")){",
							"        msg = msgFailed;",
							"        msg.description = msg.error+\" - parameter has_del: failed\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=0&pItem=5&minID={{minID}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "0"
						},
						{
							"key": "pItem",
							"value": "5"
						},
						{
							"key": "minID",
							"value": "{{minID}}"
						},
						{
							"key": "ids",
							"value": "300893",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "destination_root_uid,meta_data,source_root_uid,email",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Full List Link - pItem, minID, has_del, minDelID fields 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - has_del=1, pItem=5, minID={{minID}}, minDelID={{minDelID}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - has_del=1, pItem=5, minID={{minID}}, minDelID={{minDelID}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link with pItem, minID, has_del, minDelID successful\";",
							"    var count = json.data.length;",
							"    if(count === 5){",
							"       for(var i =0; i<count; i++){",
							"            if(json.data[i].link.id <= pm.environment.get(\"minID\")){",
							"            msg = msgFailed;",
							"            msg.description = \"parameter minID: failed\";",
							"            }",
							"       }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"parameter pItem: failed\";",
							"    }",
							"    if(pm.response.text().includes(\"data_del\")){",
							"        var count = json.data_del.length;",
							"        if(count === 5){",
							"            for (var i = 0; i <count; i++) ",
							"            {",
							"                if(json.data_del[i].deleted_item.id <= pm.environment.get(\"minDelID\")){",
							"                    msg = msgFailed;",
							"                    msg.description = \"- parameter minDelID: failed \";",
							"                }",
							"            }   ",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.description = \" - parameter pItem: failed with deleted Items\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = msg.error+\" - parameter has_del: failed\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=1&pItem=5&minID={{minID}}&minDelID={{minDelID}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "pItem",
							"value": "5"
						},
						{
							"key": "minID",
							"value": "{{minID}}"
						},
						{
							"key": "ids",
							"value": "300893",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "{{minDelID}}"
						},
						{
							"key": "fields",
							"value": "source_type,destination_type,source_account,destination_account,source_id,destination_id,created_date,updated_date",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Full List Link - minID, ids fields 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de409ca4-5db2-490d-bb8d-26d662e9cd24",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - has_del=1, pItem=5, minID={{minID}}, ids={{minID}}, minDelID={{minDelID}}, fields=destination_root_uid,meta_data,source_root_uid,email',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - has_del=1, pItem=5, minID={{minID}}, ids={{minID}}, minDelID={{minDelID}}, fields=destination_root_uid,meta_data,source_root_uid,email',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link with minID, ids fields 1 successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        msg = msgFailed;",
							"        msg.description = \"Data response must be null with minID={{minID}}, ids={{minID}}\";",
							"    }",
							"    if(!pm.response.text().includes(\"data_del\")){",
							"        msg = msgFailed;",
							"        msg.description = msg.error+ \"- parameter has_del dont work\";",
							"    }else{",
							"        var count = json.data_del.length;",
							"        if(count !== 0){",
							"            msg = msgFailed;",
							"            msg.description = \"data_del response must be null with minID={{minID}}, ids={{minID}}\";",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=1&pItem=5&minID={{minID}}&ids={{minID}}&minDelID={{minDelID}}&fields=destination_root_uid,meta_data,source_root_uid,email",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "pItem",
							"value": "5"
						},
						{
							"key": "minID",
							"value": "{{minID}}"
						},
						{
							"key": "ids",
							"value": "{{minID}}"
						},
						{
							"key": "minDelID",
							"value": "{{minDelID}}"
						},
						{
							"key": "fields",
							"value": "destination_root_uid,meta_data,source_root_uid,email"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Full List Link - minID, ids fields 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Link - has_del=1, pItem=5, minID={{minID-1}}, ids={{minID}}, minDelID={{minDelID}}, fields=destination_root_uid,meta_data,source_root_uid,email',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Link - has_del=1, pItem=5, minID={{minID-1}}, ids={{minID}}, minDelID={{minDelID}}, fields=destination_root_uid,meta_data,source_root_uid,email',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link with minID, ids fields 2 successful\";",
							"    var count = json.data.length;",
							"    if(count !== 1){",
							"        msg = msgFailed;",
							"        msg.error = \"The number data response is not match. The number is: \"+count;",
							"    }else{",
							"        for (var i = 0; i <count; i++) ",
							"        {",
							"            if((json.data[i].link.id === undefined)",
							"                ||(json.data[i].link.source_type !== undefined)",
							"                ||(json.data[i].link.destination_type !== undefined)",
							"                ||(json.data[i].link.source_account !== undefined)",
							"                ||(json.data[i].link.destination_account !== undefined)",
							"                ||(json.data[i].link.source_id !== undefined)",
							"                ||(json.data[i].link.created_date !== undefined)",
							"                ||(json.data[i].link.updated_date !== undefined)",
							"                ||(json.data[i].link.email === undefined)",
							"                ||(json.data[i].link.source_root_uid === undefined)",
							"                ||(json.data[i].link.destination_root_uid === undefined)",
							"                ||(json.data[i].link.meta_data === undefined)",
							"            ){",
							"                msg = msgFailed;",
							"                msg.description = \"parameter fields: dont work\";",
							"            }",
							"        }",
							"    }",
							"    if(!pm.response.text().includes(\"data_del\")){",
							"        msg = msgFailed;",
							"        msg.description = msg.error+ \"- parameter has_del dont work\";",
							"    }else{",
							"        var count = json.data_del.length;",
							"        if(count !== 0){",
							"            msg = msgFailed;",
							"            msg.description = \"data_del response must be null with minID={{minID}}, ids={{minID}}\";",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5bcfc4e6-de06-4ac8-b73f-d8428ebe446d",
						"exec": [
							"var linkid1 = pm.environment.get(\"minID\") - 1;",
							"pm.environment.set(\"minID-1\", linkid1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=1&pItem=5&minID={{minID-1}}&ids={{minID}}&minDelID={{minDelID}}&fields=destination_root_uid,meta_data,source_root_uid,email",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "pItem",
							"value": "5"
						},
						{
							"key": "minID",
							"value": "{{minID-1}}"
						},
						{
							"key": "ids",
							"value": "{{minID}}"
						},
						{
							"key": "minDelID",
							"value": "{{minDelID}}"
						},
						{
							"key": "fields",
							"value": "destination_root_uid,meta_data,source_root_uid,email"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Change List Link - modifiedGTE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Change Link modifiedGTE={{update_date}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Change Link modifiedGTE={{update_date}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get Change Link modifiedGTE={{update_date}} successful\";",
							"    var count = json.data.length;",
							"    if(count !== 48){",
							"        msg = msgFailed;",
							"        msg.description = \"The number data response is not match. The number data is: \"+count;",
							"    }else{",
							"        for(var i = 0; i<count; i++){",
							"            if(json.data[i].link<pm.environment.get(\"update_date\")){",
							"                msg = msgFailed;",
							"                msg.description = \"parameter modifiedGTE dont work\";",
							"                break;",
							"            }",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=1&modifiedGTE={{update_date}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "pItem",
							"value": "5",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "0",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "315484",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "{{update_date}}"
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "300893",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Change Link - modifiedGTE, pItem, minID, has_del, minDelID fields 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Change Link - has_del=0, pItem=5, minID={{minID}}, modifiedGTE={{update_date}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Change Link - has_del=0, pItem=5, minID={{minID}}, modifiedGTE={{update_date}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get Change Link - has_del=0, pItem=5, minID={{minID}}, modifiedGTE={{update_date}} successful\";",
							"    var count = json.data.length;",
							"    if(count === 5){",
							"        ",
							"       for(var i =0; i<count; i++){",
							"            if(json.data[i].link<pm.environment.get(\"update_date\")){",
							"                msg = msgFailed;",
							"                msg.description = \"parameter modifiedGTE dont work\";",
							"                break;",
							"            }",
							"            if(json.data[i].link.id <= pm.environment.get(\"minID\")){",
							"                msg = msgFailed;",
							"                msg.description = \"parameter minID: failed\";",
							"                break;",
							"            }",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"parameter pItem: failed\";",
							"    }",
							"    if(pm.response.text().includes(\"data_del\")){",
							"        msg = msgFailed;",
							"        msg.description = msg.error+\" - parameter has_del: failed\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=0&pItem=5&minID={{minID}}&modifiedGTE={{update_date}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "0"
						},
						{
							"key": "pItem",
							"value": "5"
						},
						{
							"key": "minID",
							"value": "{{minID}}"
						},
						{
							"key": "ids",
							"value": "300893",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "{{minDelID}}",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "destination_root_uid,meta_data,source_root_uid,email",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "{{update_date}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pretest - Delete Link",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Pretest - Failed - Delete 10 id Link',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Pretest - Passed - Delete 10 id Link',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Delete 10 id Link successful\";",
							"    var count = json.data.length;",
							"    if(count !== 10){",
							"        msg = msgFailed;",
							"        msg.description = \"The number data response is not match. The number data is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "bd98be32-81a5-4669-8d26-cce644abc378",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links/{{deleteId}}?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links",
						"{{deleteId}}"
					],
					"query": [
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "141167",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Change Link - modifiedGTE, has_del",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Change Link - has_del=1, modifiedGTE={{update_date}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Change Link - has_del=1, modifiedGTE={{update_date}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get change Link with has_del=1, modifiedGTE={{update_date}} successful\";",
							"    var count = json.data.length;",
							"    if(count >0){",
							"       for(var i =0; i<count; i++){",
							"           if(json.data[i].link < pm.environment.get(\"update_date\")){",
							"                msg = msgFailed;",
							"                msg.description = \"parameter modifiedGTE dont work\";",
							"                break;",
							"            }",
							"       }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number data response is not match. The number is: \"+count;",
							"    }",
							"    if(pm.response.text().includes(\"data_del\")){",
							"        var count = json.data_del.length;",
							"        if(count !== 0){",
							"            for (var i = 0; i <count; i++) ",
							"            {",
							"                if(json.data_del[i].link < pm.environment.get(\"update_date\")){",
							"                    msg = msgFailed;",
							"                    msg.description = \"parameter modifiedGTE dont work with data_del\";",
							"                    break;",
							"                }",
							"            }   ",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.description = msg.error+ \" The data_del respone is null \";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = msg.error+\" - parameter has_del: failed\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=1&modifiedGTE={{update_date}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "pItem",
							"value": "5",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "{{minID}}",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "300893",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "{{minDelID}}",
							"disabled": true
						},
						{
							"key": "fields",
							"value": "source_type,destination_type,source_account,destination_account,source_id,destination_id,created_date,updated_date",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "{{update_date}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Change Link - modifiedGTE, pItem, minID, has_del, minDelID fields 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Get Change Link - has_del=1, pItem=5, minID={{minID}}, minDelID={{minDelID}}, modifiedGTE={{update_date}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Get Change Link - has_del=1, pItem=5, minID={{minID}}, minDelID={{minDelID}}, modifiedGTE={{update_date}}',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get change Link with has_del=1, pItem=5, minID={{minID}}, minDelID={{minDelID}}, modifiedGTE={{update_date}} successful\";",
							"    var count = json.data.length;",
							"    if(count === 5){",
							"       for(var i =0; i<count; i++){",
							"           if(json.data[i].link<pm.environment.get(\"update_date\")){",
							"                msg = msgFailed;",
							"                msg.description = \"parameter modifiedGTE dont work\";",
							"                break;",
							"            }",
							"           ",
							"            if(json.data[i].link.id <= pm.environment.get(\"minID\")){",
							"                msg = msgFailed;",
							"                msg.description = \"parameter minID: failed\";",
							"            }",
							"       }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"parameter pItem: failed\";",
							"    }",
							"    if(pm.response.text().includes(\"data_del\")){",
							"        var count = json.data_del.length;",
							"        if(count === 5){",
							"            for (var i = 0; i <count; i++) ",
							"            {",
							"                if(json.data_del[i].deleted_item.id <= pm.environment.get(\"minDelID\")){",
							"                    msg = msgFailed;",
							"                    msg.description = \"- parameter minDelID: failed \";",
							"                }",
							"            }   ",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.description = \" - parameter pItem: failed with deleted Items\";",
							"        }",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = msg.error+\" - parameter has_del: failed\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=1&pItem=5&minID={{minID}}&minDelID={{minDelID}}&modifiedGTE={{update_date}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1"
						},
						{
							"key": "pItem",
							"value": "5"
						},
						{
							"key": "minID",
							"value": "{{minID}}"
						},
						{
							"key": "ids",
							"value": "300893",
							"disabled": true
						},
						{
							"key": "minDelID",
							"value": "{{minDelID}}"
						},
						{
							"key": "fields",
							"value": "source_type,destination_type,source_account,destination_account,source_id,destination_id,created_date,updated_date",
							"disabled": true
						},
						{
							"key": "modifiedGTE",
							"value": "{{update_date}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Link -  Link Created",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Delete Link -  Link Created',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Delete Link -  Link Created',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Delete Link - Link Created successful\";",
							"    var count = json.data.length;",
							"    for(var i=0; i<count; i++){",
							"        if(dataResponse.includes(json.data[i].id)){",
							"            msg.description = \"Delete all links successful\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.description = \"Data response not includes id deleted\";",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "4da5f18d-7adf-4706-a34b-fa6d95423618",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links/{{allLink1}}?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links",
						"{{allLink1}}"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "141167",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pre-test - Get List Link",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Prtest - Failed - Get Link - Full',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Prtest - Passed - Get Link - Full',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"GET\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Get list Link - Full successful\";",
							"    var count = json.data.length;",
							"    if(count !== 0){",
							"        for (var i = 0; i <count; i++) ",
							"        {",
							"            array[i] = json.data[i].link.id;",
							"        }",
							"        pm.environment.set(\"allLink\",array)",
							"    }else{",
							"        msg = msgFailed;",
							"        msg.description = \"The number data response is not match. The number data is: \"+count;",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "68e00d6a-1c09-4d54-a30a-1d1a3699eda1",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}&has_del=0",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "pItem",
							"value": "30",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "141167",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						},
						{
							"key": "has_del",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Link - Big Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Delete Link - Big Data',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Delete Link - Big Data',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Delete Link - Big Data successful\";",
							"    var count = json.data.length;",
							"    for(var i=0; i<count; i++){",
							"        if(dataResponse.includes(json.data[i].id)){",
							"            msg.description = \"Delete all links successful\";",
							"        }else{",
							"            msg = msgFailed;",
							"            msg.description = \"Data response not includes id deleted\";",
							"        }",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description = dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "4da5f18d-7adf-4706-a34b-fa6d95423618",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links/{{allLink}}?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links",
						"{{allLink}}"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "141167",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Link - Invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0c26255-4e65-4847-92ca-481424a2f34a",
						"exec": [
							"var json = JSON.parse(responseBody);",
							"",
							"var array = [];",
							"",
							"var msgFailed = {",
							"    collection:'API-Link',",
							"    title: 'Failed - Delete Link - Invalid id',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"DELETE\",",
							"    error: \"Has Error\",",
							"    status:\"200\",",
							"    description:\"\",",
							"};",
							"var msgPassed = {",
							"    collection:'API-Link',",
							"    title: 'Passed - Delete Link - Invalid id',",
							"    endpoint: pm.environment.get(\"version\")+\"/links\",",
							"    method: \"DELETE\",",
							"    error: \"No Error\",",
							"    status: \"200\",",
							"    description:\"\",",
							"};",
							"",
							"var dataResponse = pm.response.text();",
							"var statusResponse = responseCode.code;",
							"var msg ;",
							"if(statusResponse == 200){",
							"    ",
							"    msg = msgPassed;",
							"    msg.status = 200;",
							"    msg.description = \"Cannot delete Link with invalid id successful\";",
							"    var count = json.data.length;",
							"    if(!dataResponse.includes(\"data_error\")){",
							"        msg = msgFailed;",
							"        msg.description = \"data response is not null with invalid id\";",
							"    }",
							"}else  {",
							"    msg = msgFailed;",
							"    msg.status = statusResponse;",
							"    msg.error = \"status response failed\";",
							"    msg.description= dataResponse;",
							"}",
							" ",
							"pm.sendRequest({",
							"    url: pm.environment.get(\"url_report\"),",
							"    method: 'POST',",
							"    header: {",
							"        'content-type': 'application/json'",
							"    },",
							"    body: {",
							"        mode: 'raw',",
							"        raw: JSON.stringify(msg)",
							"    }",
							"}, function (err, res) {",
							"    pm.environment.set(\"authorization\", \"Bearer \" + res.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links/131231231?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links",
						"131231231"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "141167",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List Link - Clean Up",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c335b7ec-c180-4f21-9acb-c92646dc3aaa",
						"exec": [
							"postman.clearEnvironmentVariable(\"update_date\");",
							"postman.clearEnvironmentVariable(\"minID-1\");",
							"postman.clearEnvironmentVariable(\"minID\");",
							"postman.clearEnvironmentVariable(\"minDelID\");",
							"postman.clearEnvironmentVariable(\"destination_account\");",
							"postman.clearEnvironmentVariable(\"linkid1\");",
							"postman.clearEnvironmentVariable(\"linkId\");",
							"",
							"postman.clearEnvironmentVariable(\"source_account\");",
							"postman.clearEnvironmentVariable(\"meta_data\");",
							"postman.clearEnvironmentVariable(\"source_root_uid\");",
							"postman.clearEnvironmentVariable(\"ref\");",
							"postman.clearEnvironmentVariable(\"destination_root_uid\");",
							"postman.clearEnvironmentVariable(\"source_type\");",
							"",
							"postman.clearEnvironmentVariable(\"source_id\");",
							"postman.clearEnvironmentVariable(\"destination_type\");",
							"postman.clearEnvironmentVariable(\"destination_id\");",
							"postman.clearEnvironmentVariable(\"ref\");",
							"postman.clearEnvironmentVariable(\"destination_root_uid\");",
							"postman.clearEnvironmentVariable(\"source_type\");",
							"postman.clearEnvironmentVariable(\"deleteId\");",
							"postman.clearEnvironmentVariable(\"minIdFirstSync\");",
							"postman.clearEnvironmentVariable(\"updated_date\");",
							"postman.clearEnvironmentVariable(\"numberRandom\");",
							"postman.clearEnvironmentVariable(\"Create50Links\");",
							"postman.clearEnvironmentVariable(\"Create51Links\");",
							"postman.clearEnvironmentVariable(\"sourceID\");",
							"postman.clearEnvironmentVariable(\"linkID\");",
							"postman.clearEnvironmentVariable(\"delete10Id\");",
							"postman.clearEnvironmentVariable(\"idLinks\");",
							"postman.clearEnvironmentVariable(\"allLink\");",
							"postman.clearEnvironmentVariable(\"allLink1\");",
							"postman.clearEnvironmentVariable(\"deleteAllLinks\");",
							"for (var i=0;i<200;i++){",
							"    postman.clearEnvironmentVariable(\"updateLinkID\"+i);",
							"    postman.clearEnvironmentVariable(\"updateLinkId\"+i);",
							"    postman.clearEnvironmentVariable(\"linkId\"+i);",
							"    postman.clearEnvironmentVariable(\"deleteId\"+i);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{server}}:{{port}}/{{version}}/links?keyapi={{keyapi}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"{{version}}",
						"links"
					],
					"query": [
						{
							"key": "keyapi",
							"value": "{{keyapi}}"
						},
						{
							"key": "has_del",
							"value": "1",
							"disabled": true
						},
						{
							"key": "pItem",
							"value": "2",
							"disabled": true
						},
						{
							"key": "minID",
							"value": "141167",
							"disabled": true
						},
						{
							"key": "ids",
							"value": "309760",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}